import { Component, Input } from '@angular/core';
import { Validators } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
import * as i3 from "@sharedlib";
export class SkillFilterComponent {
    constructor(fb) {
        this.fb = fb;
        this.categories = [];
        this.subCategories = [];
        this.isSubcategoryDisabled = true;
    }
    ngOnInit() {
        this.form = this.fb.group({
            category: ['', [Validators.required]],
            subCategory: ['', [Validators.required]]
        });
    }
    filterSkillsHandler() {
    }
}
SkillFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.11", ngImport: i0, type: SkillFilterComponent, deps: [{ token: i1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });
SkillFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.11", type: SkillFilterComponent, selector: "app-skill-filter", inputs: { categories: "categories" }, ngImport: i0, template: "<ng-container *ngIf=\"form\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"filterSkillsHandler()\">\n        <div class=\"flex justify-end space-x-4\">\n            <div>\n                <!-- <label class=\"psr-form__label\" for=\"category\">Category</label> -->\n                <select formControlName=\"category\" id=\"category\" name=\"category\"\n                        class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> Pick a category </option>\n                    <option [value]=\"category.id\" *ngFor=\"let category of categories\">{{ category.name }}</option>\n                </select>\n            </div>\n            <div>\n                <!-- <label class=\"psr-form__label\" for=\"sub-category\">Sub category</label> -->\n                <select formControlName=\"subCategory\" [disableControl]=\"isSubcategoryDisabled\" id=\"sub-category\"\n                        name=\"sub-category\" class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> Pick a subcategory </option>\n                    <option [value]=\"subCategory.id\" *ngFor=\"let subCategory of subCategories\">{{ subCategory.name }}\n                    </option>\n                </select>\n            </div>\n        </div>\n    </form>\n</ng-container>\n", styles: [":host{@apply flex justify-end space-x-4;}\n"], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i1.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.DisableControlDirective, selector: "[disableControl]", inputs: ["disableControl"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.11", ngImport: i0, type: SkillFilterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'app-skill-filter',
                    templateUrl: './skill-filter.component.html',
                    styleUrls: ['./skill-filter.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i1.FormBuilder }]; }, propDecorators: { categories: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tpbGwtZmlsdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NraWxsbWd0bGliL3NyYy9saWIvY29tcG9uZW50cy9za2lsbC1maWx0ZXIvc2tpbGwtZmlsdGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3NraWxsbWd0bGliL3NyYy9saWIvY29tcG9uZW50cy9za2lsbC1maWx0ZXIvc2tpbGwtZmlsdGVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBMEIsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7O0FBUXBFLE1BQU0sT0FBTyxvQkFBb0I7SUFRN0IsWUFDWSxFQUFlO1FBQWYsT0FBRSxHQUFGLEVBQUUsQ0FBYTtRQVBsQixlQUFVLEdBQXFCLEVBQUUsQ0FBQztRQUVwQyxrQkFBYSxHQUF3QixFQUFFLENBQUM7UUFDeEMsMEJBQXFCLEdBQUcsSUFBSSxDQUFDO0lBS2hDLENBQUM7SUFFTCxRQUFRO1FBRUosSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztZQUN0QixRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDckMsV0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQzNDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxtQkFBbUI7SUFFbkIsQ0FBQzs7a0hBdEJRLG9CQUFvQjtzR0FBcEIsb0JBQW9CLDhGQ1RqQyx3ekNBdUJBOzRGRGRhLG9CQUFvQjtrQkFMaEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsa0JBQWtCO29CQUM1QixXQUFXLEVBQUUsK0JBQStCO29CQUM1QyxTQUFTLEVBQUUsQ0FBQywrQkFBK0IsQ0FBQztpQkFDL0M7a0dBR1ksVUFBVTtzQkFBbEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIEZvcm1Hcm91cCwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IElTa2lsbENhdGVnb3J5LCBJU2tpbGxTdWJDYXRlZ29yeSB9IGZyb20gJ0Bza2lsbGxpYic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYXBwLXNraWxsLWZpbHRlcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NraWxsLWZpbHRlci5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc2tpbGwtZmlsdGVyLmNvbXBvbmVudC5zY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgU2tpbGxGaWx0ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgQElucHV0KCkgY2F0ZWdvcmllczogSVNraWxsQ2F0ZWdvcnlbXSA9IFtdO1xuXG4gICAgcHVibGljIHN1YkNhdGVnb3JpZXM6IElTa2lsbFN1YkNhdGVnb3J5W10gPSBbXTtcbiAgICBwdWJsaWMgaXNTdWJjYXRlZ29yeURpc2FibGVkID0gdHJ1ZTtcbiAgICBwdWJsaWMgZm9ybTogRm9ybUdyb3VwIHwgdW5kZWZpbmVkO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgZmI6IEZvcm1CdWlsZGVyXG4gICAgKSB7IH1cblxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuXG4gICAgICAgIHRoaXMuZm9ybSA9IHRoaXMuZmIuZ3JvdXAoe1xuICAgICAgICAgICAgY2F0ZWdvcnk6IFsnJywgW1ZhbGlkYXRvcnMucmVxdWlyZWRdXSxcbiAgICAgICAgICAgIHN1YkNhdGVnb3J5OiBbJycsIFtWYWxpZGF0b3JzLnJlcXVpcmVkXV1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZmlsdGVyU2tpbGxzSGFuZGxlcigpOiB2b2lkIHtcblxuICAgIH1cblxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cImZvcm1cIj5cbiAgICA8Zm9ybSBbZm9ybUdyb3VwXT1cImZvcm1cIiAobmdTdWJtaXQpPVwiZmlsdGVyU2tpbGxzSGFuZGxlcigpXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJmbGV4IGp1c3RpZnktZW5kIHNwYWNlLXgtNFwiPlxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8IS0tIDxsYWJlbCBjbGFzcz1cInBzci1mb3JtX19sYWJlbFwiIGZvcj1cImNhdGVnb3J5XCI+Q2F0ZWdvcnk8L2xhYmVsPiAtLT5cbiAgICAgICAgICAgICAgICA8c2VsZWN0IGZvcm1Db250cm9sTmFtZT1cImNhdGVnb3J5XCIgaWQ9XCJjYXRlZ29yeVwiIG5hbWU9XCJjYXRlZ29yeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInBzci1mb3JtX19zZWxlY3QgcHNyLWZvcm1fX3NlbGVjdC0tYWx0XCI+XG4gICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJcIiBzZWxlY3RlZD4gUGljayBhIGNhdGVnb3J5IDwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIFt2YWx1ZV09XCJjYXRlZ29yeS5pZFwiICpuZ0Zvcj1cImxldCBjYXRlZ29yeSBvZiBjYXRlZ29yaWVzXCI+e3sgY2F0ZWdvcnkubmFtZSB9fTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDwhLS0gPGxhYmVsIGNsYXNzPVwicHNyLWZvcm1fX2xhYmVsXCIgZm9yPVwic3ViLWNhdGVnb3J5XCI+U3ViIGNhdGVnb3J5PC9sYWJlbD4gLS0+XG4gICAgICAgICAgICAgICAgPHNlbGVjdCBmb3JtQ29udHJvbE5hbWU9XCJzdWJDYXRlZ29yeVwiIFtkaXNhYmxlQ29udHJvbF09XCJpc1N1YmNhdGVnb3J5RGlzYWJsZWRcIiBpZD1cInN1Yi1jYXRlZ29yeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwic3ViLWNhdGVnb3J5XCIgY2xhc3M9XCJwc3ItZm9ybV9fc2VsZWN0IHBzci1mb3JtX19zZWxlY3QtLWFsdFwiPlxuICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiXCIgc2VsZWN0ZWQ+IFBpY2sgYSBzdWJjYXRlZ29yeSA8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiBbdmFsdWVdPVwic3ViQ2F0ZWdvcnkuaWRcIiAqbmdGb3I9XCJsZXQgc3ViQ2F0ZWdvcnkgb2Ygc3ViQ2F0ZWdvcmllc1wiPnt7IHN1YkNhdGVnb3J5Lm5hbWUgfX1cbiAgICAgICAgICAgICAgICAgICAgPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9mb3JtPlxuPC9uZy1jb250YWluZXI+XG4iXX0=
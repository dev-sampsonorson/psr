import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { SelectedCategoryResolver, SelectedSubcategoryResolver, SkillAddResolver, SkillCategoryResolver, SkillListResolver, SkillReadComponent, SkillResolver, SkillSubcategoryResolver, } from '@skilllib';
import { SkillAddComponent } from './components/skill-add/skill-add.component';
import { SkillCategoryListComponent } from './components/skill-category-list/skill-category-list.component';
import { SkillEditComponent } from './components/skill-edit/skill-edit.component';
import { SkillListComponent } from './components/skill-list/skill-list.component';
import { SkillSubcategoryListComponent } from './components/skill-subcategory-list/skill-subcategory-list.component';
import { IndexComponent } from './pages/index.component';
import { IndexResolver } from './resolvers/index.resolver';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
const routes = [
    {
        path: '',
        component: IndexComponent,
        children: [
            { path: 'categories', component: SkillCategoryListComponent, resolve: { categories: SkillCategoryResolver }, data: { breadcrumb: 'categories' } },
            { path: 'categories/:categoryId/subcategories', component: SkillSubcategoryListComponent, resolve: { subcategories: SkillSubcategoryResolver }, data: { breadcrumb: 'subcategories' } },
            { path: 'categories/:categoryId/subcategories/:subcategoryId/list', component: SkillListComponent, resolve: { skills: SkillListResolver, selectedCategory: SelectedCategoryResolver, selectedSubcategory: SelectedSubcategoryResolver }, data: { breadcrumb: 'list' } },
            { path: 'read/:id', component: SkillReadComponent, outlet: 'details', resolve: { skill: SkillResolver } },
            { path: 'edit/:id', component: SkillEditComponent, outlet: 'details', resolve: { skill: SkillResolver, categories: SkillCategoryResolver } },
            { path: 'add/:categoryId/:subcategoryId', component: SkillAddComponent, outlet: 'details', resolve: { categories: SkillAddResolver } },
            { path: '**', redirectTo: 'categories', pathMatch: 'full' }
        ],
        resolve: { resolverResult: IndexResolver }
    }
];
export class SkillMgtRoutingModule {
}
SkillMgtRoutingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.11", ngImport: i0, type: SkillMgtRoutingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
SkillMgtRoutingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.2.11", ngImport: i0, type: SkillMgtRoutingModule, imports: [i1.RouterModule], exports: [RouterModule] });
SkillMgtRoutingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.2.11", ngImport: i0, type: SkillMgtRoutingModule, imports: [[RouterModule.forChild(routes)], RouterModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.11", ngImport: i0, type: SkillMgtRoutingModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [RouterModule.forChild(routes)],
                    exports: [RouterModule]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tpbGwtbWd0LXJvdXRpbmcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvc2tpbGxtZ3RsaWIvc3JjL2xpYi9za2lsbC1tZ3Qtcm91dGluZy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFVLE1BQU0saUJBQWlCLENBQUM7QUFDdkQsT0FBTyxFQUNILHdCQUF3QixFQUN4QiwyQkFBMkIsRUFDM0IsZ0JBQWdCLEVBQ2hCLHFCQUFxQixFQUNyQixpQkFBaUIsRUFDakIsa0JBQWtCLEVBQ2xCLGFBQWEsRUFDYix3QkFBd0IsR0FDM0IsTUFBTSxXQUFXLENBQUM7QUFFbkIsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDL0UsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0VBQWdFLENBQUM7QUFDNUcsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDbEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDbEYsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sc0VBQXNFLENBQUM7QUFDckgsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7O0FBRTNELE1BQU0sTUFBTSxHQUFXO0lBQ25CO1FBQ0ksSUFBSSxFQUFFLEVBQUU7UUFDUixTQUFTLEVBQUUsY0FBYztRQUN6QixRQUFRLEVBQUU7WUFDTixFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLDBCQUEwQixFQUFFLE9BQU8sRUFBRSxFQUFFLFVBQVUsRUFBRSxxQkFBcUIsRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsRUFBRTtZQUNqSixFQUFFLElBQUksRUFBRSxzQ0FBc0MsRUFBRSxTQUFTLEVBQUUsNkJBQTZCLEVBQUUsT0FBTyxFQUFFLEVBQUUsYUFBYSxFQUFFLHdCQUF3QixFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxFQUFFO1lBQ3ZMLEVBQUUsSUFBSSxFQUFFLDBEQUEwRCxFQUFFLFNBQVMsRUFBRSxrQkFBa0IsRUFBRSxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsaUJBQWlCLEVBQUUsZ0JBQWdCLEVBQUUsd0JBQXdCLEVBQUUsbUJBQW1CLEVBQUUsMkJBQTJCLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDdlEsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsRUFBRTtZQUN6RyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUUscUJBQXFCLEVBQUUsRUFBRTtZQUM1SSxFQUFFLElBQUksRUFBRSxnQ0FBZ0MsRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsRUFBRTtZQUN0SSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFO1NBQzlEO1FBQ0QsT0FBTyxFQUFFLEVBQUUsY0FBYyxFQUFFLGFBQWEsRUFBRTtLQUM3QztDQUNKLENBQUE7QUFNRCxNQUFNLE9BQU8scUJBQXFCOzttSEFBckIscUJBQXFCO29IQUFyQixxQkFBcUIsd0NBRnBCLFlBQVk7b0hBRWIscUJBQXFCLFlBSHJCLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUM5QixZQUFZOzRGQUViLHFCQUFxQjtrQkFKakMsUUFBUTttQkFBQztvQkFDTixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUN4QyxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7aUJBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSwgUm91dGVzIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7XG4gICAgU2VsZWN0ZWRDYXRlZ29yeVJlc29sdmVyLFxuICAgIFNlbGVjdGVkU3ViY2F0ZWdvcnlSZXNvbHZlcixcbiAgICBTa2lsbEFkZFJlc29sdmVyLFxuICAgIFNraWxsQ2F0ZWdvcnlSZXNvbHZlcixcbiAgICBTa2lsbExpc3RSZXNvbHZlcixcbiAgICBTa2lsbFJlYWRDb21wb25lbnQsXG4gICAgU2tpbGxSZXNvbHZlcixcbiAgICBTa2lsbFN1YmNhdGVnb3J5UmVzb2x2ZXIsXG59IGZyb20gJ0Bza2lsbGxpYic7XG5cbmltcG9ydCB7IFNraWxsQWRkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NraWxsLWFkZC9za2lsbC1hZGQuY29tcG9uZW50JztcbmltcG9ydCB7IFNraWxsQ2F0ZWdvcnlMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NraWxsLWNhdGVnb3J5LWxpc3Qvc2tpbGwtY2F0ZWdvcnktbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2tpbGxFZGl0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NraWxsLWVkaXQvc2tpbGwtZWRpdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2tpbGxMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3NraWxsLWxpc3Qvc2tpbGwtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2tpbGxTdWJjYXRlZ29yeUxpc3RDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2tpbGwtc3ViY2F0ZWdvcnktbGlzdC9za2lsbC1zdWJjYXRlZ29yeS1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJbmRleENvbXBvbmVudCB9IGZyb20gJy4vcGFnZXMvaW5kZXguY29tcG9uZW50JztcbmltcG9ydCB7IEluZGV4UmVzb2x2ZXIgfSBmcm9tICcuL3Jlc29sdmVycy9pbmRleC5yZXNvbHZlcic7XG5cbmNvbnN0IHJvdXRlczogUm91dGVzID0gW1xuICAgIHtcbiAgICAgICAgcGF0aDogJycsXG4gICAgICAgIGNvbXBvbmVudDogSW5kZXhDb21wb25lbnQsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICB7IHBhdGg6ICdjYXRlZ29yaWVzJywgY29tcG9uZW50OiBTa2lsbENhdGVnb3J5TGlzdENvbXBvbmVudCwgcmVzb2x2ZTogeyBjYXRlZ29yaWVzOiBTa2lsbENhdGVnb3J5UmVzb2x2ZXIgfSwgZGF0YTogeyBicmVhZGNydW1iOiAnY2F0ZWdvcmllcycgfSB9LFxuICAgICAgICAgICAgeyBwYXRoOiAnY2F0ZWdvcmllcy86Y2F0ZWdvcnlJZC9zdWJjYXRlZ29yaWVzJywgY29tcG9uZW50OiBTa2lsbFN1YmNhdGVnb3J5TGlzdENvbXBvbmVudCwgcmVzb2x2ZTogeyBzdWJjYXRlZ29yaWVzOiBTa2lsbFN1YmNhdGVnb3J5UmVzb2x2ZXIgfSwgZGF0YTogeyBicmVhZGNydW1iOiAnc3ViY2F0ZWdvcmllcycgfSB9LFxuICAgICAgICAgICAgeyBwYXRoOiAnY2F0ZWdvcmllcy86Y2F0ZWdvcnlJZC9zdWJjYXRlZ29yaWVzLzpzdWJjYXRlZ29yeUlkL2xpc3QnLCBjb21wb25lbnQ6IFNraWxsTGlzdENvbXBvbmVudCwgcmVzb2x2ZTogeyBza2lsbHM6IFNraWxsTGlzdFJlc29sdmVyLCBzZWxlY3RlZENhdGVnb3J5OiBTZWxlY3RlZENhdGVnb3J5UmVzb2x2ZXIsIHNlbGVjdGVkU3ViY2F0ZWdvcnk6IFNlbGVjdGVkU3ViY2F0ZWdvcnlSZXNvbHZlciB9LCBkYXRhOiB7IGJyZWFkY3J1bWI6ICdsaXN0JyB9IH0sXG4gICAgICAgICAgICB7IHBhdGg6ICdyZWFkLzppZCcsIGNvbXBvbmVudDogU2tpbGxSZWFkQ29tcG9uZW50LCBvdXRsZXQ6ICdkZXRhaWxzJywgcmVzb2x2ZTogeyBza2lsbDogU2tpbGxSZXNvbHZlciB9IH0sXG4gICAgICAgICAgICB7IHBhdGg6ICdlZGl0LzppZCcsIGNvbXBvbmVudDogU2tpbGxFZGl0Q29tcG9uZW50LCBvdXRsZXQ6ICdkZXRhaWxzJywgcmVzb2x2ZTogeyBza2lsbDogU2tpbGxSZXNvbHZlciwgY2F0ZWdvcmllczogU2tpbGxDYXRlZ29yeVJlc29sdmVyIH0gfSxcbiAgICAgICAgICAgIHsgcGF0aDogJ2FkZC86Y2F0ZWdvcnlJZC86c3ViY2F0ZWdvcnlJZCcsIGNvbXBvbmVudDogU2tpbGxBZGRDb21wb25lbnQsIG91dGxldDogJ2RldGFpbHMnLCByZXNvbHZlOiB7IGNhdGVnb3JpZXM6IFNraWxsQWRkUmVzb2x2ZXIgfSB9LFxuICAgICAgICAgICAgeyBwYXRoOiAnKionLCByZWRpcmVjdFRvOiAnY2F0ZWdvcmllcycsIHBhdGhNYXRjaDogJ2Z1bGwnIH1cbiAgICAgICAgXSxcbiAgICAgICAgcmVzb2x2ZTogeyByZXNvbHZlclJlc3VsdDogSW5kZXhSZXNvbHZlciB9XG4gICAgfVxuXVxuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQocm91dGVzKV0sXG4gICAgZXhwb3J0czogW1JvdXRlck1vZHVsZV1cbn0pXG5leHBvcnQgY2xhc3MgU2tpbGxNZ3RSb3V0aW5nTW9kdWxlIHsgfVxuIl19
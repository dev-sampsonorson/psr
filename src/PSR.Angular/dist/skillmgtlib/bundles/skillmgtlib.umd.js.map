{"version":3,"file":"skillmgtlib.umd.js","sources":["../../../projects/skillmgtlib/src/lib/services/page-title.service.ts","../../../projects/skillmgtlib/src/lib/skill-mgt.endpoints.ts","../../../projects/skillmgtlib/src/lib/services/skill-mgt.service.ts","../../../projects/skillmgtlib/src/lib/components/skill-add/skill-add.component.ts","../../../projects/skillmgtlib/src/lib/components/skill-add/skill-add.component.html","../../../projects/skillmgtlib/src/lib/components/skill-add/skill-add.module.ts","../../../projects/skillmgtlib/src/lib/skill-mgt-constants.ts","../../../projects/skillmgtlib/src/lib/components/skill-category-list/skill-category-list.component.ts","../../../projects/skillmgtlib/src/lib/components/skill-category-list/skill-category-list.component.html","../../../projects/skillmgtlib/src/lib/components/skill-category-list/skill-category-list.module.ts","../../../projects/skillmgtlib/src/lib/components/skill-edit/skill-edit.component.ts","../../../projects/skillmgtlib/src/lib/components/skill-edit/skill-edit.component.html","../../../projects/skillmgtlib/src/lib/components/skill-edit/skill-edit.module.ts","../../../projects/skillmgtlib/src/lib/components/skill-filter/skill-filter.component.ts","../../../projects/skillmgtlib/src/lib/components/skill-filter/skill-filter.component.html","../../../projects/skillmgtlib/src/lib/components/skill-filter/skill-filter.module.ts","../../../projects/skillmgtlib/src/lib/tokens/skill-mgt-config.token.ts","../../../projects/skillmgtlib/src/lib/components/skill-list/skill-list.component.ts","../../../projects/skillmgtlib/src/lib/components/skill-list/skill-list.component.html","../../../projects/skillmgtlib/src/lib/components/skill-list/skill-list.module.ts","../../../projects/skillmgtlib/src/lib/components/skill-subcategory-list/skill-subcategory-list.component.ts","../../../projects/skillmgtlib/src/lib/components/skill-subcategory-list/skill-subcategory-list.component.html","../../../projects/skillmgtlib/src/lib/components/skill-subcategory-list/skill-subcategory-list.module.ts","../../../projects/skillmgtlib/src/lib/config/breadcrumb.config.ts","../../../projects/skillmgtlib/src/lib/config/context-menu.config.ts","../../../projects/skillmgtlib/src/lib/pages/index.component.ts","../../../projects/skillmgtlib/src/lib/pages/index.module.ts","../../../projects/skillmgtlib/src/lib/resolvers/index.resolver.ts","../../../projects/skillmgtlib/src/lib/skill-mgt-routing.module.ts","../../../projects/skillmgtlib/src/lib/skillmgtlib.module.ts","../../../projects/skillmgtlib/src/skillmgtlib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class PageTitleService {\n\n    private _pageTitle$ = new BehaviorSubject<string>('Skill Management');\n    private _pageSubTitle$ = new BehaviorSubject<string>('Manage skill categories, subcategories, and skills');\n\n    get pageTitle$() {\n        return this._pageTitle$.asObservable();\n    }\n    get pageSubTitle$() {\n        return this._pageSubTitle$.asObservable();\n    }\n\n    updatePageTitle(title: string) {\n        this._pageTitle$.next(title);\n    }\n\n    updatePageSubTitle(title: string) {\n        this._pageSubTitle$.next(title);\n    }\n\n    constructor() { }\n}\n","import { IAppConfig } from '@corelib';\r\n\r\nexport interface ISkillMgtEndpoints {\r\n    readonly AddSkill: (config: IAppConfig) => string;\r\n    readonly UpdateSkill: (config: IAppConfig) => string;\r\n    readonly DeleteSkill: (config: IAppConfig, id: string) => string;\r\n}\r\n\r\nlet endpoints: ISkillMgtEndpoints = {\r\n    AddSkill: (config: IAppConfig) => config.getUrl(`skills`),\r\n    UpdateSkill: (config: IAppConfig) => config.getUrl(`skills`),\r\n    DeleteSkill: (config: IAppConfig, id: string) => config.getUrl(`skills/${id}`),\r\n};\r\n\r\nexport const SkillMgtEndpoints: ISkillMgtEndpoints = endpoints;","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { APP_CONFIG_TOKEN, IAppConfig } from '@corelib';\r\nimport { ISkill } from '@skilllib';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { SkillMgtEndpoints } from '../skill-mgt.endpoints';\r\n\r\n@Injectable()\r\nexport class SkillMgtService {\r\n\r\n    private _saveSkillSubject = new Subject<ISkill>();\r\n    private _updateSkillSubject = new Subject<ISkill>();\r\n    private _deleteSkillSubject = new Subject<ISkill>();\r\n\r\n    get onSkillSave$(): Observable<ISkill> {\r\n        return this._saveSkillSubject.asObservable();\r\n    }\r\n\r\n    get onSkillUpdate$(): Observable<ISkill> {\r\n        return this._updateSkillSubject.asObservable();\r\n    }\r\n\r\n    // know what skill was delete\r\n    get onSkillDelete$(): Observable<ISkill> {\r\n        return this._deleteSkillSubject.asObservable();\r\n    }\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        @Inject(APP_CONFIG_TOKEN) private appConfig: IAppConfig\r\n    ) { }\r\n\r\n    public notifySkillSave(skill: ISkill): void {\r\n        this._saveSkillSubject.next(skill);\r\n    }\r\n\r\n    public notifySkillUpdate(skill: ISkill): void {\r\n        this._updateSkillSubject.next(skill);\r\n    }\r\n\r\n    // tell subscribers what skill was deleted\r\n    public notifySkillDelete(skill: ISkill): void {\r\n        this._deleteSkillSubject.next(skill);\r\n    }\r\n\r\n    public addSkill(skill: ISkill): Observable<ISkill> {\r\n        return this.http.post<ISkill>(SkillMgtEndpoints.AddSkill(this.appConfig), skill).pipe(\r\n            // shareReplay()\r\n        );\r\n    }\r\n\r\n    public updateSkill(skill: ISkill): Observable<ISkill> {\r\n        return this.http.put<ISkill>(SkillMgtEndpoints.UpdateSkill(this.appConfig), skill).pipe(\r\n            // shareReplay()\r\n        );\r\n    }\r\n\r\n    public deleteSkill(skillId: string): Observable<any> {\r\n        return this.http.delete<any>(SkillMgtEndpoints.DeleteSkill(this.appConfig, skillId));\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from '@sharedlib';\nimport { ISkill, ISkillCategory, ISkillSubCategory, SkillFormService } from '@skilllib';\nimport { Subscription } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { SkillMgtService } from '../../services';\n\n@Component({\n    selector: 'app-skill-add',\n    templateUrl: './skill-add.component.html',\n    styleUrls: ['./skill-add.component.scss']\n})\nexport class SkillAddComponent implements OnInit, OnDestroy {\n\n    public title: string = 'Add New Skill';\n    public description: string = 'Provide details about the skill.';\n    public buttonLabel: string = 'Add skill';\n    public form: FormGroup | undefined;\n    public skill: ISkill | undefined;\n    public categories: ISkillCategory[] = [];\n    public subCategories: ISkillSubCategory[] = [];\n    public formIsValid: boolean = false;\n    public isSubcategoryDisabled: boolean = true;\n\n    private _categoryValueChangeSub: Subscription | undefined;\n    private _formStatusChangeSub: Subscription | undefined;\n\n    constructor(\n        private fb: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private skillService: SkillMgtService,\n        private skillFormService: SkillFormService,\n        private alert: AlertService\n\n    ) {\n    }\n\n    ngOnInit(): void {\n        // get the categories ids\n        // get the skill\n        // update the skill with category and subcategory\n        // emit new object with categories and skill using map\n\n        this.route.params.pipe(\n            switchMap(({ categoryId, subcategoryId }) => {\n                return this.route.data.pipe(\n                    map(({ categories, skill }) => {\n                        // skill.categoryId = categoryId;\n                        // skill.subcategoryId = subcategoryId;\n\n                        return {\n                            categories,\n                            skill: { ...skill, categoryId, subcategoryId }\n                        };\n                    })\n                )\n            })\n        ).subscribe(({ categories, skill }) => {\n            this.categories = categories;\n            this.skill = skill;\n        });\n    }\n    onSaveSkill(skill: ISkill) {\n        this.skillService.addSkill(skill).subscribe({\n            next: (response: ISkill) => {\n                // tell the list component that skill has been added\n                this.skillService.notifySkillSave(response);\n                this.skillFormService.resetForm();\n                this.alert.success(\n                    'Successful',\n                    'Skill has been added successfully'\n                );\n            },\n            error: (error: any) => {\n                this.alert.error(\n                    'Save Failed',\n                    'Unable to add new skill'\n                );\n            }\n        });\n    }\n\n    onCloseClick() {\n        this.router.navigate(['/skills', { outlets: { details: null } }]);\n    }\n\n    ngOnDestroy(): void {\n        this._categoryValueChangeSub?.unsubscribe();\n        this._formStatusChangeSub?.unsubscribe();\n    }\n}\n","<app-secondary-header [title]=\"title\" [description]=\"description\" (closeClick)=\"onCloseClick()\"></app-secondary-header>\n\n<skl-form [skill]=\"skill\" [categories]=\"categories\" (commitSkill)=\"onSaveSkill($event)\" [buttonLabel]=\"buttonLabel\">\n</skl-form>\n\n\n<!-- <div class=\"flex flex-col py-5 space-y-6 border-t border-gray-200\">\n    <ng-container *ngIf=\"form\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"addSkill()\" class=\"psr-form__form\">\n            <div>\n                <label class=\"psr-form__label\" for=\"name\">Skill name</label>\n                <input formControlName=\"name\" id=\"name\" name=\"name\" type=\"text\"\n                       class=\"psr-form__field psr-form__field--alt\" placeholder=\"\" />\n            </div>\n            <div>\n                <label class=\"psr-form__label\" for=\"category\">Category</label>\n                <select formControlName=\"category\" (change)=\"onCategoryChange()\" id=\"category\" name=\"category\"\n                        class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> -- </option>\n                    <option [value]=\"category.id\" *ngFor=\"let category of categories\">{{ category.name }}</option>\n                </select>\n            </div>\n            <div>\n                <label class=\"psr-form__label\" for=\"sub-category\">Sub category</label>\n                <select formControlName=\"subCategory\" [disableControl]=\"isSubcategoryDisabled\" id=\"sub-category\"\n                        name=\"sub-category\" class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> -- </option>\n                    <option [value]=\"subCategory.id\" *ngFor=\"let subCategory of subCategories\">{{ subCategory.name }}\n                    </option>\n                </select>\n            </div>\n            <div>\n                <button [disabled]=\"!formIsValid\" class=\"psr-form__button\" type=\"submit\">\n                    Add skill\n                </button>\n            </div>\n        </form>\n    </ng-container>\n</div> -->\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DisableControlModule, SecondaryHeaderModule } from '@sharedlib';\nimport { SkillFormModule } from '@skilllib';\n\nimport { SkillAddComponent } from './skill-add.component';\n\n\n\n@NgModule({\n    declarations: [SkillAddComponent],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        DisableControlModule,\n        SecondaryHeaderModule,\n        SkillFormModule\n    ],\n    exports: [SkillAddComponent]\n})\nexport class SkillAddModule { }\n","export interface ISkillMgtRoutes {\r\n    readonly ListSkills: (categoryId: string, subcategoryId: string) => any[];\r\n    readonly ReadSkill: (id: string) => any[];\r\n    readonly EditSkill: (id: string) => any[];\r\n    readonly AddSkill: (categoryId: string, subcategoryId: string) => any[];\r\n    readonly ListSubcategories: (id: string) => any[];\r\n}\r\n\r\nlet appRoutes: ISkillMgtRoutes = {\r\n    ListSkills: (categoryId: string, subcategoryId: string) => [`/skills`, `categories`, `${categoryId}`, `subcategories`, `${subcategoryId}`, `list`],\r\n    // ReadSkill: (id: string) => [`/skills`, { outlets: { details: ['read', id] } }],\r\n    ReadSkill: (id: string) => [`/skills`, { outlets: { details: ['read', id] } }],\r\n    EditSkill: (id: string) => [`/skills`, { outlets: { details: ['edit', id] } }],\r\n    AddSkill: (categoryId: string, subcategoryId: string) => [`/skills`, { outlets: { details: ['add', categoryId, subcategoryId] } }],\r\n    ListSubcategories: (id: string) => [`/skills`, `categories`, `${id}`, `subcategories`],\r\n};\r\n\r\nexport const SkillMgtRoutes: ISkillMgtRoutes = appRoutes;","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ISkillCategory } from '@skilllib';\n\nimport { PageTitleService } from '../../services';\nimport { SkillMgtRoutes } from '../../skill-mgt-constants';\n\n@Component({\n    selector: 'sklmgt-category-list',\n    templateUrl: './skill-category-list.component.html',\n    styleUrls: ['./skill-category-list.component.scss']\n})\nexport class SkillCategoryListComponent implements OnInit {\n    categories: ISkillCategory[] = [];\n\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private pageTitle: PageTitleService\n    ) {\n        this.pageTitle.updatePageTitle(\"Skill Categories\");\n        this.pageTitle.updatePageSubTitle(\"Choose a skill category from the list below to see sub categories\");\n    }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ categories }) => {\n            this.categories = categories;\n        });\n    }\n\n    onCardClick(category: ISkillCategory) {\n        this.router.navigate(SkillMgtRoutes.ListSubcategories(category.id));\n    }\n\n}\n","<ng-container *ngFor=\"let category of categories\">\n    <skl-category-card (onCardClick)=\"onCardClick(category)\" [category]=\"category\"></skl-category-card>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SkillCategoryCardModule } from '@skilllib';\n\nimport { SkillCategoryListComponent } from './skill-category-list.component';\n\n\n\n@NgModule({\n    declarations: [SkillCategoryListComponent],\n    imports: [\n        CommonModule,\n        SkillCategoryCardModule\n    ],\n    exports: [SkillCategoryListComponent]\n})\nexport class SkillCategoryListModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from '@sharedlib';\nimport { ISkill, ISkillCategory, ISkillSubCategory, SkillFormService, SkillsService } from '@skilllib';\nimport { Subscription } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { SkillMgtService } from '../../services';\n\n@Component({\n    selector: 'app-skill-edit',\n    templateUrl: './skill-edit.component.html',\n    styleUrls: ['./skill-edit.component.scss']\n})\nexport class SkillEditComponent implements OnInit, OnDestroy {\n\n    public title: string = 'Edit Skill';\n    public description: string = 'Update details about the skill.';\n    public buttonLabel: string = 'Update skill';\n    public skill: ISkill | undefined;\n    public categories: ISkillCategory[] = [];\n    public subcategories: ISkillSubCategory[] = [];\n\n    private _routeDataSub: Subscription | undefined;\n\n    get isFormVisible() {\n        return this.skill?.id !== undefined;\n    }\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private skillService: SkillsService,\n        private skillMgtService: SkillMgtService,\n        private skillFormService: SkillFormService,\n        private alert: AlertService\n    ) { }\n\n    ngOnInit(): void {\n\n        /* this.router.events.pipe(\n            filter((event) => event instanceof NavigationEnd),\n            tap(x => console.log('router.event => ', x))\n        ).subscribe(); */\n\n        this._routeDataSub = this.route.data.pipe(\n            // tap(x => console.log('route.data => ', x)),\n            switchMap(({ categories, skill }) => {\n                return this.skillService.getSubCategories(skill.categoryId).pipe(\n                    map(subcategories => {\n                        return {\n                            categories,\n                            subcategories,\n                            skill\n                        }\n                    })\n                );\n            })\n        ).subscribe(({ categories, skill, subcategories }) => {\n            this.categories = categories;\n            this.subcategories = subcategories;\n            this.skill = skill;\n            // console.log('this.skill', this.skill);\n        });\n    }\n\n    onUpdateSkill(skill: ISkill) {\n        this.skillMgtService.updateSkill(skill).subscribe({\n            next: (response: ISkill) => {\n                // tell the list component that skill has been added\n                this.skillMgtService.notifySkillUpdate(response);\n                this.skillFormService.resetForm();\n                this.alert.success(\n                    'Successful',\n                    'Skill has been updated successfully'\n                );\n            },\n            error: (error: any) => {\n                this.alert.error(\n                    'Update Failed',\n                    'Unable to update new skill'\n                );\n            }\n        });\n    }\n\n    onCloseClick(): void {\n        this.router.navigate(['/skills', { outlets: { details: null } }]);\n    }\n\n    ngOnDestroy(): void {\n        this._routeDataSub?.unsubscribe();\n    }\n\n}\n","<app-secondary-header [title]=\"title\" [description]=\"description\" (closeClick)=\"onCloseClick()\"></app-secondary-header>\n\n<ng-container *ngIf=\"isFormVisible\">\n    <skl-form [skill]=\"skill\" [categories]=\"categories\" [subcategories]=\"subcategories\"\n              (commitSkill)=\"onUpdateSkill($event)\" [buttonLabel]=\"buttonLabel\">\n    </skl-form>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SecondaryHeaderModule } from '@sharedlib';\nimport { SkillFormModule } from '@skilllib';\n\nimport { SkillEditComponent } from './skill-edit.component';\n\n\n\n@NgModule({\n    declarations: [\n        SkillEditComponent\n    ],\n    imports: [\n        CommonModule,\n\n        SkillFormModule,\n        SecondaryHeaderModule\n    ],\n    exports: [SkillEditComponent]\n})\nexport class SkillEditModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ISkillCategory, ISkillSubCategory } from '@skilllib';\n\n@Component({\n    selector: 'app-skill-filter',\n    templateUrl: './skill-filter.component.html',\n    styleUrls: ['./skill-filter.component.scss']\n})\nexport class SkillFilterComponent implements OnInit {\n\n    @Input() categories: ISkillCategory[] = [];\n\n    public subCategories: ISkillSubCategory[] = [];\n    public isSubcategoryDisabled = true;\n    public form: FormGroup | undefined;\n\n    constructor(\n        private fb: FormBuilder\n    ) { }\n\n    ngOnInit(): void {\n\n        this.form = this.fb.group({\n            category: ['', [Validators.required]],\n            subCategory: ['', [Validators.required]]\n        });\n    }\n\n    filterSkillsHandler(): void {\n\n    }\n\n}\n","<ng-container *ngIf=\"form\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"filterSkillsHandler()\">\n        <div class=\"flex justify-end space-x-4\">\n            <div>\n                <!-- <label class=\"psr-form__label\" for=\"category\">Category</label> -->\n                <select formControlName=\"category\" id=\"category\" name=\"category\"\n                        class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> Pick a category </option>\n                    <option [value]=\"category.id\" *ngFor=\"let category of categories\">{{ category.name }}</option>\n                </select>\n            </div>\n            <div>\n                <!-- <label class=\"psr-form__label\" for=\"sub-category\">Sub category</label> -->\n                <select formControlName=\"subCategory\" [disableControl]=\"isSubcategoryDisabled\" id=\"sub-category\"\n                        name=\"sub-category\" class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> Pick a subcategory </option>\n                    <option [value]=\"subCategory.id\" *ngFor=\"let subCategory of subCategories\">{{ subCategory.name }}\n                    </option>\n                </select>\n            </div>\n        </div>\n    </form>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DisableControlModule } from '@sharedlib';\n\nimport { SkillFilterComponent } from './skill-filter.component';\n\n\n\n@NgModule({\n    declarations: [SkillFilterComponent],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        DisableControlModule\n    ],\n    exports: [SkillFilterComponent]\n})\nexport class SkillFilterModule { }\n","import { InjectionToken } from '@angular/core';\r\nimport { MenuItem } from '@sharedlib';\r\n\r\nimport { ISkillMgtConfig } from '../models/skill-mgt.model';\r\n\r\nexport const SKILL_MGT_CONFIG_TOKEN = new InjectionToken<ISkillMgtConfig>(\"SKILL_MGT_CONFIG\", {\r\n    factory: () => ({})\r\n});\r\n\r\nexport const SKILL_CARD_CONTEXT_MENU_CONFIG_TOKEN = new InjectionToken<MenuItem<any>[]>(\"SKILL_CARD_CONTEXT_MENU_CONFIG_TOKEN\");","import { Component, Inject, NgZone, OnDestroy, OnInit, Type } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService, MenuItem } from '@sharedlib';\nimport { AddSkillCardComponent, ISkill, ISkillCard, SkillCardComponent, SkillCardContextMenuitemService } from '@skilllib';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { SkillMgtService } from '../../services';\nimport { PageTitleService } from '../../services/page-title.service';\nimport { SkillMgtRoutes } from '../../skill-mgt-constants';\nimport { SKILL_CARD_CONTEXT_MENU_CONFIG_TOKEN } from '../../tokens';\n\n@Component({\n    selector: 'app-skill-list',\n    templateUrl: './skill-list.component.html',\n    styleUrls: ['./skill-list.component.scss']\n})\nexport class SkillListComponent implements OnInit, OnDestroy {\n\n    private _selectedCategoryId: string = '';\n    private _selectedSubcategoryId: string = '';\n\n    public skills: ISkill[] = [];\n    public isAddSkillCardVisible: boolean = true;\n    public emptyStateTitle: string;\n    public emptyStateDescription: string;\n    public emptyStateButtonLabel: string;\n    public selectedCategoryName: string | undefined;\n    public selectedSubcategoryName: string | undefined;\n    public skillAddCardType: Type<ISkillCard> = AddSkillCardComponent;\n    public skillCardType: Type<ISkillCard> = SkillCardComponent;\n\n    private _skillSave$: Observable<ISkill>;\n    private _skillUpdate$: Observable<ISkill>;\n    private _eventStart$: Observable<{ skillId: string, menuName: string }>;\n\n    private _eventStartSub: Subscription | undefined;\n\n    get isSkillsVisible() {\n        return this.skills.length > 0;\n    }\n\n    get isCategoryDetailsVisible() {\n        return this.selectedCategoryName !== undefined\n            && this.selectedSubcategoryName !== undefined;\n    }\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private pageTitle: PageTitleService,\n        private skillService: SkillMgtService,\n        private alert: AlertService,\n        private zone: NgZone,\n        @Inject(SKILL_CARD_CONTEXT_MENU_CONFIG_TOKEN) public menuItems: MenuItem<any>[],\n        private ctxMenuItem: SkillCardContextMenuitemService\n    ) {\n        this._skillSave$ = this.skillService.onSkillSave$;\n        this._skillUpdate$ = this.skillService.onSkillUpdate$;\n        this._eventStart$ = this.ctxMenuItem.onEventStart$;\n\n        this.pageTitle.updatePageTitle(\"Skills\");\n        this.pageTitle.updatePageSubTitle(\"View list of skill, see skill details, and add new skill.\");\n\n        this.emptyStateTitle = 'No skills';\n        this.emptyStateDescription = 'Get started by adding skills to this sub category';\n        this.emptyStateButtonLabel = 'Add New Skill';\n    }\n\n    ngOnInit(): void {\n        this.route.params.subscribe(({ categoryId, subcategoryId }) => {\n            this._selectedCategoryId = categoryId;\n            this._selectedSubcategoryId = subcategoryId;\n        });\n\n        this.route.data.subscribe(({ skills, selectedCategory, selectedSubcategory }) => {\n            this.skills = skills; //.slice(0, 1);\n            this.selectedCategoryName = selectedCategory?.name;\n            this.selectedSubcategoryName = selectedSubcategory?.name;\n        });\n\n        this._skillSave$.subscribe((skill: ISkill) => {\n            this.skills.push(skill);\n        });\n\n        this._skillUpdate$.subscribe((skill: ISkill) => {\n            this.skills = this.skills.map((item: ISkill) => {\n                return (item.id === skill.id) ? { ...skill } : item;\n            });\n        });\n\n        this._eventStartSub = this._eventStart$.subscribe(({ skillId, menuName }) => {\n            this.deleteSkill(skillId, menuName);\n        });\n    }\n\n    addSkillCardClickHandler(): void {\n        this.router.navigate(SkillMgtRoutes.AddSkill(this._selectedCategoryId, this._selectedSubcategoryId));\n    }\n\n    onCardItemEvent(e: { skillId: string, menuName: string, card: ISkillCard }): void {\n        // this.skills = [];\n        // console.log('before => e.card.blockCard', e.card.blockCard);\n        // e.card.blockCard = true;\n        // console.log('after => e.card.blockCard', e.card.blockCard);\n        if (this.menuItemIsDelete(e.menuName)) {\n            e.card.blockCard = true;\n            if (confirm('Are you sure you want to delete this skill?')) {\n                // console.log('delete skill');\n                setTimeout(() => {\n                    this.skills.splice(this.skills.findIndex(x => x.id === e.skillId), 1);\n                    // let temp = this.skills;\n                    // this.skills = [];\n                    // this.skills = [...this.skills];\n                    // this.skills = temp;\n                    e.card.blockCard = false;\n                    /* this.skillService.deleteSkill(e.skillId).subscribe({\n                        next: (response) => {\n                            e.card.blockCard = false;\n                            // remove card from dom (destroy);\n                            this.skills.splice(this.skills.findIndex(x => x.id === e.skillId), 1);\n                            this.alert.success(\n                                'Successful',\n                                'Skill has been deleted successfully'\n                            );\n                        },\n                        error: (error: any) => {\n                            e.card.blockCard = false;\n                            this.alert.error(\n                                'Delete Failed',\n                                'Unable to delete the specified skill'\n                            );\n                        }\n                    }); */\n                }, 3000);\n\n\n\n            } else {\n                e.card.blockCard = false;\n            }\n        }\n    }\n\n    private deleteSkill(skillId: string, menuName: string): void {\n        if (this.menuItemIsDelete(menuName)) {\n            // e.card.blockCard = true;\n            if (confirm('Are you sure you want to delete this skill?')) {\n                this.skillService.deleteSkill(skillId).subscribe({\n                    next: (response) => {\n                        // remove card from dom (destroy);\n                        this.skills.splice(this.skills.findIndex(x => x.id === skillId), 1);\n                        this.ctxMenuItem.complete(skillId, menuName);\n                        this.alert.success(\n                            'Successful',\n                            'Skill has been deleted successfully'\n                        );\n                    },\n                    error: (error: any) => {\n                        this.ctxMenuItem.complete(skillId, menuName);\n                        this.alert.error(\n                            'Delete Failed',\n                            'Unable to delete the specified skill'\n                        );\n                    }\n                });\n            } else {\n                // e.card.blockCard = false;\n                this.ctxMenuItem.complete(skillId, menuName);\n            }\n        }\n    }\n\n    private menuItemIsDelete(menuName: string): boolean {\n        return menuName === 'skill-delete';\n    }\n\n    ngOnDestroy(): void {\n        this._eventStartSub?.unsubscribe();\n    }\n\n\n    /* skillCardClickHandler(skill: ISkill): void {\n        this.router.navigate(SkillMgtRoutes.ReadSkill(skill.id));\n    } */\n\n}\n","<div class=\"pb-5\" *ngIf=\"isCategoryDetailsVisible\">\n    <div class=\"flex flex-wrap items-baseline -mt-2 -ml-2\">\n        <h3 class=\"mt-2 ml-2 text-lg font-medium leading-6 text-gray-700\">\n            Skills\n        </h3>\n        <p class=\"mt-1 ml-2 text-sm text-gray-500 truncate\">in\n            {{selectedCategoryName}}\n            <svg class=\"flex-shrink-0 inline-block w-5 h-5 text-gray-300\" xmlns=\"http://www.w3.org/2000/svg\"\n                 fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                <path d=\"M5.555 17.776l8-16 .894.448-8 16-.894-.448z\" />\n            </svg>\n            {{selectedSubcategoryName}}\n        </p>\n    </div>\n</div>\n<skl-list-display [isAddSkillCardVisible]=\"isAddSkillCardVisible\" [isSkillsVisible]=\"isSkillsVisible\">\n    <skl-add-card (addSkillCardClick)=\"addSkillCardClickHandler()\"></skl-add-card>\n    <ng-container *ngFor=\"let skill of skills\">\n        <skl-card #skillCard [x-blockui]=\"skillCard.blockCard\" [x-overlay-tpl]=\"mask\" [skill]=\"skill\"\n                  [menuItems]=\"menuItems\"></skl-card>\n        <!-- (contextMenuItemEvent)=\"onCardItemEvent($event)\" -->\n    </ng-container>\n</skl-list-display>\n<ng-template #mask>\n    <div class=\"ui-blockui ui-widget-overlay\">\n        <svg class=\"w-12 h-12 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\n             xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n    </div>\n</ng-template>\n<app-empty-state (addNewItem)=\"addSkillCardClickHandler()\" *ngIf=\"!isSkillsVisible\" [title]=\"emptyStateTitle\"\n                 [description]=\"emptyStateDescription\" [buttonLabel]=\"emptyStateButtonLabel\">\n</app-empty-state>\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { BlockUiModule, EmptyStateModule, MenuItem } from '@sharedlib';\nimport { AddSkillCardModule, SkillCardModule, SkillListDisplayModule } from '@skilllib';\n\nimport { SKILL_CARD_CONTEXT_MENU_CONFIG_TOKEN } from '../../tokens';\nimport { SkillListComponent } from './skill-list.component';\n\n\n\n@NgModule({\n    declarations: [SkillListComponent],\n    imports: [\n        CommonModule,\n\n        EmptyStateModule,\n        SkillListDisplayModule,\n        AddSkillCardModule,\n        SkillCardModule,\n        BlockUiModule\n    ],\n    exports: [SkillListComponent]\n})\nexport class SkillListModule {\n    static withConfig(config: MenuItem<any>[]): ModuleWithProviders<SkillListModule> {\n        return {\n            ngModule: SkillListModule,\n            providers: [\n                {\n                    provide: SKILL_CARD_CONTEXT_MENU_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ISkillSubCategory } from '@skilllib';\n\nimport { PageTitleService } from '../../services';\nimport { SkillMgtRoutes } from '../../skill-mgt-constants';\n\n@Component({\n    selector: 'sklmgt-subcategory-list',\n    templateUrl: './skill-subcategory-list.component.html',\n    styleUrls: ['./skill-subcategory-list.component.scss']\n})\nexport class SkillSubcategoryListComponent implements OnInit {\n    subcategories: ISkillSubCategory[] = [];\n\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private pageTitle: PageTitleService\n    ) {\n        this.pageTitle.updatePageTitle(\"Skill Subcategories\");\n        this.pageTitle.updatePageSubTitle(\"Choose a skill subcategory from the list below to see skills\");\n    }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ subcategories }) => {\n            this.subcategories = subcategories;\n        });\n    }\n\n    onCardClick(subcategory: ISkillSubCategory) {\n        // console.log(SkillMgtRoutes.ListSubcategories(category.id));\n        // console.log(SkillMgtRoutes.ListSkills(category.categoryId, category.id));\n        this.router.navigate(SkillMgtRoutes.ListSkills(subcategory.categoryId, subcategory.id));\n    }\n\n}\n","<!-- <p>skill-subcategory-list works!</p> -->\n<!-- { outlets: { primary: 'list', details: null } } -->\n<!-- <a [routerLink]=\"['/skills', 'list']\">List</a><br /> -->\n<!-- { outlets: { primary: 'categories', details: null } } -->\n<!-- <a [routerLink]=\"['/skills', 'categories']\">Categories</a> -->\n<ng-container *ngFor=\"let subcategory of subcategories\">\n    <skl-subcategory-card (onCardClick)=\"onCardClick(subcategory)\" [subcategory]=\"subcategory\">\n    </skl-subcategory-card>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SkillSubcategoryCardModule } from '@skilllib';\n\nimport { SkillSubcategoryListComponent } from './skill-subcategory-list.component';\n\n\n\n@NgModule({\n    declarations: [SkillSubcategoryListComponent],\n    imports: [\n        CommonModule,\n\n        SkillSubcategoryCardModule\n    ],\n    exports: [SkillSubcategoryListComponent]\n})\nexport class SkillSubcategoryListModule { }\n","import { IBreadcrumb } from '@sharedlib';\r\n\r\n\r\nexport const breadcrumbConfig: IBreadcrumb[] = [\r\n    {\r\n        name: \"categories\",\r\n        label: \"Categories\",\r\n        path: '/skills/categories',\r\n        newRoute: '/skills/categories'\r\n    },\r\n    {\r\n        name: \"subcategories\",\r\n        label: \"Sub categories\",\r\n        path: '/skills/subcategories',\r\n        newRoute: '/skills/categories/:categoryId/subcategories'\r\n    },\r\n    {\r\n        name: \"list\",\r\n        label: \"Skills\",\r\n        path: '/skills/list',\r\n        newRoute: '/skills/categories/:categoryId/subcategories/:subcategoryId/list'\r\n    },\r\n]","import { IconEyeComponent, IconPencilComponent, IconTrashComponent, MenuItem } from '@sharedlib';\r\n\r\nimport { SkillMgtRoutes } from '../skill-mgt-constants';\r\n\r\n\r\nexport const skillCardContextMenuConfig: MenuItem<any>[] = [\r\n    new MenuItem<string>({\r\n        name: 'skill-details',\r\n        label: 'Skill detail',\r\n        routerLink: (skillId?: string) => (skillId && SkillMgtRoutes.ReadSkill(skillId)) || [],\r\n        isIconVisible: true,\r\n        iconComponent: IconEyeComponent\r\n    }),\r\n    new MenuItem<string>({\r\n        name: 'skill-edit',\r\n        label: 'Edit skill',\r\n        routerLink: (skillId?: string) => (skillId && SkillMgtRoutes.EditSkill(skillId)) || [],\r\n        isIconVisible: true,\r\n        iconComponent: IconPencilComponent\r\n    }),\r\n    new MenuItem<string>({\r\n        name: 'skill-delete',\r\n        label: 'Delete skill',\r\n        routerLink: () => [],\r\n        navigatable: false,\r\n        isIconVisible: true,\r\n        iconComponent: IconTrashComponent\r\n    })\r\n]","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BREADCRUMB_CONFIG_TOKEN, BreadcrumbService, IBreadcrumb, SecondaryHeaderService } from '@sharedlib';\nimport { ISkillCategory } from '@skilllib';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { PageTitleService } from '../services/page-title.service';\n\n@Component({\n    selector: 'app-index',\n    template: `\n    <!-- <app-page-heading-layout>\n        <h1 class=\"text-3xl font-bold text-gray-900\">\n          {{ pageTitle$ | async}}\n        </h1>\n    </app-page-heading-layout> -->\n    <app-two-column-layout [isSecondaryContentVisible]=\"isSecondaryContentVisible\" (hamburgerMenuClick)=\"hamburgerMenuClickHandler()\">\n    <!-- border-2 border-gray-200 border-dashed rounded-lg -->\n    <!-- flex justify-between items-center -->\n        <app-page-heading x-size=\"large\" x-color=\"black\" [title]=\"pageTitle$ | async\" [description]=\"pageSubTitle$ | async\"></app-page-heading>\n        <div header-content class=\"\">\n            <h1 class=\"text-3xl font-bold text-gray-900\">\n              {{ pageTitle$ | async}}\n            </h1>\n            <p id=\"message-heading\" class=\"text-lg font-normal text-gray-900\">\n              {{ pageSubTitle$ | async}}\n            </p>\n            <!-- <app-skill-filter [categories]=\"categories\"></app-skill-filter> -->\n        </div>\n        <nav breadcrumb-content *ngIf=\"isBreadcrumbVisible\" class=\"flex px-4 py-4 mx-auto border-b-2 border-gray-200 border-dashed max-w-7xl sm:px-6 lg:px-8\" aria-label=\"Breadcrumb\">\n            <app-breadcrumb></app-breadcrumb>\n        </nav>\n        <router-outlet main-content\n                (activate)=\"onPrimaryRouterOutletActivate()\"\n                (deactivate)=\"onPrimaryRouterOutletDeactivate()\"></router-outlet>\n        <router-outlet secondary-content\n                (activate)=\"onDetailsRouterOutletActivate()\"\n                (deactivate)=\"onDetailsRouterOutletDeactivate()\"\n                name=\"details\"></router-outlet>\n    </app-two-column-layout>\n  `,\n    styles: [\n        `\n      :host {\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 0%;\n        height: 0px;\n        @apply border-l-2 border-r-2 border-gray-200 border-dashed;\n      }\n    `\n    ],\n    providers: [PageTitleService]\n})\nexport class IndexComponent implements OnInit, OnDestroy {\n\n    pageTitle$: Observable<string>;\n    pageSubTitle$: Observable<string>;\n    categories: ISkillCategory[] = [];\n\n    isSecondaryContentVisible: boolean = false;\n\n    private _routerEventSub!: Subscription;\n    private _routeDataSub!: Subscription;\n\n    private _breadcrumbs$: Observable<IBreadcrumb[]>;\n\n    get isBreadcrumbVisible() {\n        return this.breadcrumbConfig.length > 0;\n    }\n\n    constructor(\n        private pageTitle: PageTitleService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private breadcrumbService: BreadcrumbService,\n        private secondaryHeaderService: SecondaryHeaderService,\n        @Inject(BREADCRUMB_CONFIG_TOKEN) private breadcrumbConfig: IBreadcrumb[],\n    ) {\n        this.pageTitle$ = this.pageTitle.pageTitle$;\n        this.pageSubTitle$ = this.pageTitle.pageSubTitle$;\n        this._breadcrumbs$ = this.breadcrumbService;\n    }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ resolverResult: { categories } }) => {\n            this.categories = categories;\n        });\n\n        this.secondaryHeaderService.isCloseClicked$.subscribe((isCloseClicked: boolean) => {\n            if (isCloseClicked) {\n                this.router.navigate(['/skills', { outlets: { details: null } }]);\n            }\n        });\n    }\n\n    onDetailsRouterOutletActivate(): void {\n        this.isSecondaryContentVisible = true;\n        // console.log('activate');\n    }\n\n    onDetailsRouterOutletDeactivate(): void {\n        this.isSecondaryContentVisible = false;\n    }\n    onPrimaryRouterOutletActivate(): void {\n        // console.log('activate');\n    }\n\n    onPrimaryRouterOutletDeactivate(): void {\n        // console.log('deactivate');\n    }\n\n    hamburgerMenuClickHandler(): void {\n        // console.log('hamburgerMenuClickHandler');\n    }\n    ngOnDestroy(): void {\n        this._routerEventSub?.unsubscribe();\n        this._routeDataSub?.unsubscribe();\n    }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbModule, PageHeadingModule, TwoColumnLayoutModule } from '@sharedlib';\n\nimport { IndexComponent } from './index.component';\n\n\n\n@NgModule({\n    declarations: [IndexComponent],\n    imports: [\n        CommonModule,\n        RouterModule,\n\n        TwoColumnLayoutModule,\n        PageHeadingModule,\n        BreadcrumbModule\n    ],\n    exports: [IndexComponent]\n})\nexport class IndexModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { ISkillResolverResult, SkillsService } from '@skilllib';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class IndexResolver implements Resolve<ISkillResolverResult> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkillResolverResult> {\n        return this.skillService.getCategories().pipe(\n            map(response => ({\n                \"categories\": response\n            }))\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n    SelectedCategoryResolver,\n    SelectedSubcategoryResolver,\n    SkillAddResolver,\n    SkillCategoryResolver,\n    SkillListResolver,\n    SkillReadComponent,\n    SkillResolver,\n    SkillSubcategoryResolver,\n} from '@skilllib';\n\nimport { SkillAddComponent } from './components/skill-add/skill-add.component';\nimport { SkillCategoryListComponent } from './components/skill-category-list/skill-category-list.component';\nimport { SkillEditComponent } from './components/skill-edit/skill-edit.component';\nimport { SkillListComponent } from './components/skill-list/skill-list.component';\nimport { SkillSubcategoryListComponent } from './components/skill-subcategory-list/skill-subcategory-list.component';\nimport { IndexComponent } from './pages/index.component';\nimport { IndexResolver } from './resolvers/index.resolver';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: IndexComponent,\n        children: [\n            { path: 'categories', component: SkillCategoryListComponent, resolve: { categories: SkillCategoryResolver }, data: { breadcrumb: 'categories' } },\n            { path: 'categories/:categoryId/subcategories', component: SkillSubcategoryListComponent, resolve: { subcategories: SkillSubcategoryResolver }, data: { breadcrumb: 'subcategories' } },\n            { path: 'categories/:categoryId/subcategories/:subcategoryId/list', component: SkillListComponent, resolve: { skills: SkillListResolver, selectedCategory: SelectedCategoryResolver, selectedSubcategory: SelectedSubcategoryResolver }, data: { breadcrumb: 'list' } },\n            { path: 'read/:id', component: SkillReadComponent, outlet: 'details', resolve: { skill: SkillResolver } },\n            { path: 'edit/:id', component: SkillEditComponent, outlet: 'details', resolve: { skill: SkillResolver, categories: SkillCategoryResolver } },\n            { path: 'add/:categoryId/:subcategoryId', component: SkillAddComponent, outlet: 'details', resolve: { categories: SkillAddResolver } },\n            { path: '**', redirectTo: 'categories', pathMatch: 'full' }\n        ],\n        resolve: { resolverResult: IndexResolver }\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SkillMgtRoutingModule { }\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { BreadcrumbModule, SharedlibModule } from '@sharedlib';\n\nimport { SkillAddModule, SkillEditModule, SkillFilterModule, SkillListModule } from './components';\nimport { breadcrumbConfig, skillCardContextMenuConfig } from './config';\nimport { ISkillMgtConfig } from './models';\nimport { IndexModule } from './pages';\nimport { IndexResolver } from './resolvers';\nimport { PageTitleService } from './services';\nimport { SkillMgtRoutingModule } from './skill-mgt-routing.module';\nimport { SKILL_MGT_CONFIG_TOKEN } from './tokens';\n\n\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        SharedlibModule,\n        BreadcrumbModule.withConfig(breadcrumbConfig || []),\n        SkillMgtRoutingModule,\n\n        IndexModule,\n        SkillAddModule,\n        SkillEditModule,\n        SkillFilterModule,\n        SkillListModule.withConfig(skillCardContextMenuConfig)\n    ],\n    providers: [\n        PageTitleService,\n        IndexResolver,\n    ]\n})\nexport class SkillmgtlibModule {\n    static withConfig(\n        config: ISkillMgtConfig\n    ): ModuleWithProviders<SkillmgtlibModule> {\n        return {\n            ngModule: BreadcrumbModule,\n            providers: [\n                {\n                    provide: SKILL_MGT_CONFIG_TOKEN,\n                    useValue: config || {}\n                }\n            ]\n        };\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index.ts';\n"],"names":["BehaviorSubject","Injectable","Subject","APP_CONFIG_TOKEN","Inject","switchMap","map","Component","CommonModule","ReactiveFormsModule","DisableControlModule","SecondaryHeaderModule","SkillFormModule","NgModule","SkillCategoryCardModule","Validators","Input","InjectionToken","AddSkillCardComponent","SkillCardComponent","EmptyStateModule","SkillListDisplayModule","AddSkillCardModule","SkillCardModule","BlockUiModule","SkillSubcategoryCardModule","MenuItem","IconEyeComponent","IconPencilComponent","IconTrashComponent","BREADCRUMB_CONFIG_TOKEN","RouterModule","TwoColumnLayoutModule","PageHeadingModule","BreadcrumbModule","SkillCategoryResolver","SkillSubcategoryResolver","SkillListResolver","SelectedCategoryResolver","SelectedSubcategoryResolver","SkillReadComponent","SkillResolver","SkillAddResolver","SharedlibModule"],"mappings":"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"}
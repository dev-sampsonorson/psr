{"version":3,"file":"main.js","mappings":"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","sources":["./projects/psr/src/app/app-breadcrumb-config.ts","./projects/psr/src/app/app-routing.module.ts","./projects/psr/src/app/app.component.ts","./projects/psr/src/app/app.component.html","./projects/psr/src/app/app.module.ts","./projects/psr/src/app/core/app.config.ts","./projects/psr/src/app/core/app.constants.ts","./projects/psr/src/app/core/core.module.ts","./projects/psr/src/app/core/error/error-handler.service.ts","./projects/psr/src/app/core/error/error.interceptor.ts","./projects/psr/src/app/core/error/error.module.ts","./projects/psr/src/app/core/services/custom-url.serializer.ts","./projects/psr/src/app/core/services/lookup.service.ts","./projects/psr/src/app/core/services/storage.service.ts","./projects/psr/src/app/core/services/test.service.ts","./projects/psr/src/app/layout.component.ts","./projects/psr/src/app/modules/auth/auth-routing.module.ts","./projects/psr/src/app/modules/auth/auth.constants.ts","./projects/psr/src/app/modules/auth/auth.guard.ts","./projects/psr/src/app/modules/auth/auth.interceptor.ts","./projects/psr/src/app/modules/auth/auth.module.ts","./projects/psr/src/app/modules/auth/components/login/login.component.ts","./projects/psr/src/app/modules/auth/components/login/login.component.html","./projects/psr/src/app/modules/auth/components/password-strength/password-strength.component.ts","./projects/psr/src/app/modules/auth/components/password-strength/password-strength.component.html","./projects/psr/src/app/modules/auth/components/register/register.component.ts","./projects/psr/src/app/modules/auth/components/register/register.component.html","./projects/psr/src/app/modules/auth/models/user.model.ts","./projects/psr/src/app/modules/auth/services/auth-validators.service.ts","./projects/psr/src/app/modules/auth/services/auth.service.ts","./projects/psr/src/app/modules/auth/services/password.service.ts","./projects/psr/src/app/modules/home/home.component.ts","./projects/psr/src/app/modules/home/home.component.html","./projects/psr/src/app/modules/secret/secret.component.ts","./projects/psr/src/app/modules/skill-management/components/add-skill-card/add-skill-card.component.ts","./projects/psr/src/app/modules/skill-management/components/add-skill-card/add-skill-card.component.html","./projects/psr/src/app/modules/skill-management/components/skill-add/skill-add.component.ts","./projects/psr/src/app/modules/skill-management/components/skill-add/skill-add.component.html","./projects/psr/src/app/modules/skill-management/components/skill-card/skill-card.component.ts","./projects/psr/src/app/modules/skill-management/components/skill-card/skill-card.component.html","./projects/psr/src/app/modules/skill-management/components/skill-category-card/skill-category-card.component.ts","./projects/psr/src/app/modules/skill-management/components/skill-category-card/skill-category-card.component.html","./projects/psr/src/app/modules/skill-management/components/skill-category-list/skill-category-list.component.ts","./projects/psr/src/app/modules/skill-management/components/skill-category-list/skill-category-list.component.html","./projects/psr/src/app/modules/skill-management/components/skill-filter/skill-filter.component.ts","./projects/psr/src/app/modules/skill-management/components/skill-filter/skill-filter.component.html","./projects/psr/src/app/modules/skill-management/components/skill-list/skill-list.component.ts","./projects/psr/src/app/modules/skill-management/components/skill-list/skill-list.component.html","./projects/psr/src/app/modules/skill-management/components/skill-read/skill-read.component.ts","./projects/psr/src/app/modules/skill-management/components/skill-read/skill-read.component.html","./projects/psr/src/app/modules/skill-management/components/skill-subcategory-card/skill-subcategory-card.component.ts","./projects/psr/src/app/modules/skill-management/components/skill-subcategory-card/skill-subcategory-card.component.html","./projects/psr/src/app/modules/skill-management/components/skill-subcategory-list/skill-subcategory-list.component.ts","./projects/psr/src/app/modules/skill-management/components/skill-subcategory-list/skill-subcategory-list.component.html","./projects/psr/src/app/modules/skill-management/pages/index.component.ts","./projects/psr/src/app/modules/skill-management/services/index.resolver.ts","./projects/psr/src/app/modules/skill-management/services/page-title.service.ts","./projects/psr/src/app/modules/skill-management/services/skill-add.resolver.ts","./projects/psr/src/app/modules/skill-management/services/skill-category.resolver.ts","./projects/psr/src/app/modules/skill-management/services/skill-list.resolver.ts","./projects/psr/src/app/modules/skill-management/services/skill-subcategory.resolver.ts","./projects/psr/src/app/modules/skill-management/services/skill.resolver.ts","./projects/psr/src/app/modules/skill-management/services/skills.service.ts","./projects/psr/src/app/modules/skill-management/skill-mgt-breadcrumb-config.ts","./projects/psr/src/app/modules/skill-management/skill-mgt-constants.ts","./projects/psr/src/app/modules/skill-management/skill-mgt-routing.module.ts","./projects/psr/src/app/modules/skill-management/skill-mgt.module.ts","./projects/psr/src/app/shared/alert/alert.model.ts","./projects/psr/src/app/shared/alert/alert.module.ts","./projects/psr/src/app/shared/alert/components/alert-container.component.ts","./projects/psr/src/app/shared/alert/components/alert.component.ts","./projects/psr/src/app/shared/alert/components/alert.component.html","./projects/psr/src/app/shared/alert/index.ts","./projects/psr/src/app/shared/alert/services/alert.service.ts","./projects/psr/src/app/shared/button-icon/button-icon.component.ts","./projects/psr/src/app/shared/directives/disable-control.directive.ts","./projects/psr/src/app/shared/directives/element-host.directive.ts","./projects/psr/src/app/shared/directives/template-ref.directive.ts","./projects/psr/src/app/shared/icons/base-icon.component.ts","./projects/psr/src/app/shared/icons/icon-close.component.ts","./projects/psr/src/app/shared/icons/icon-dot-vertical.component.ts","./projects/psr/src/app/shared/icons/icon-eye.component.ts","./projects/psr/src/app/shared/icons/icon-pencil.component.ts","./projects/psr/src/app/shared/icons/icon-trash.component.ts","./projects/psr/src/app/shared/icons/icons.module.ts","./projects/psr/src/app/shared/layouts/page-heading-layout.component.ts","./projects/psr/src/app/shared/layouts/two-column/two-column-layout.component.ts","./projects/psr/src/app/shared/layouts/two-column/two-column-layout.component.html","./projects/psr/src/app/shared/link-icon/link-icon.component.ts","./projects/psr/src/app/shared/page-heading/page-heading.component.ts","./projects/psr/src/app/shared/secondary-header/secondary-header.component.ts","./projects/psr/src/app/shared/secondary-header/secondary-header.service.ts","./projects/psr/src/app/shared/shared.module.ts","./projects/psr/src/app/widgets/breadcrumb/breadcrumb.component.ts","./projects/psr/src/app/widgets/breadcrumb/breadcrumb.component.html","./projects/psr/src/app/widgets/breadcrumb/breadcrumb.module.ts","./projects/psr/src/app/widgets/breadcrumb/breadcrumb.service.ts","./projects/psr/src/app/widgets/dropdown-menu/dropdown-menu.component.ts","./projects/psr/src/app/widgets/dropdown-menu/dropdown-menu.component.html","./projects/psr/src/app/widgets/dropdown-menu/dropdown-menu.module.ts","./projects/psr/src/app/widgets/empty-state/empty-state.component.ts","./projects/psr/src/app/widgets/header/hamburger/hamburger.component.ts","./projects/psr/src/app/widgets/header/hamburger/hamburger.component.html","./projects/psr/src/app/widgets/header/header.component.ts","./projects/psr/src/app/widgets/header/header.component.html","./projects/psr/src/app/widgets/header/header.module.ts","./projects/psr/src/app/widgets/header/index.ts","./projects/psr/src/app/widgets/header/navigation/navigation.component.ts","./projects/psr/src/app/widgets/header/profile-menu.service.ts","./projects/psr/src/app/widgets/header/profile-menu/profile-display.component.ts","./projects/psr/src/app/widgets/header/profile-menu/profile-menu.component.ts","./projects/psr/src/app/widgets/logo/index.ts","./projects/psr/src/app/widgets/logo/logo.component.ts","./projects/psr/src/app/widgets/logo/logo.module.ts","./projects/psr/src/app/widgets/read-field/read-field.component.ts","./projects/psr/src/app/widgets/widgets.module.ts","./projects/psr/src/environments/environment.service.ts","./projects/psr/src/environments/environment.ts","./projects/psr/src/main.ts","./projects/psr/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"sourcesContent":["import { Provider } from '@angular/core';\r\nimport { BREADCRUMB_CONFIG_TOKEN } from '@widgets/breadcrumb/breadcrumb.service';\r\n\r\nexport const AppBreadcrumbConfigProvider: Provider = {\r\n    provide: BREADCRUMB_CONFIG_TOKEN,\r\n    useValue: []\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@auth/auth.guard';\r\nimport { HomeComponent } from '@modules/home/home.component';\r\nimport { SecretComponent } from '@modules/secret/secret.component';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\n\r\nconst appRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LayoutComponent,\r\n        children: [\r\n            { path: 'home', component: HomeComponent },\r\n            {\r\n                path: 'skills',\r\n                loadChildren: () => import('@psr/modules/skill-management/skill-mgt.module').then(m => m.SkillManagementModule)\r\n            },\r\n            { path: 'secret', component: SecretComponent, canActivate: [AuthGuard] },\r\n            { path: '', redirectTo: 'home', pathMatch: 'full' }\r\n        ]\r\n    },\r\n    {\r\n        path: 'auth',\r\n        loadChildren: () => import(\"@auth/auth.module\").then(m => m.AuthModule)\r\n    },\r\n    { path: '**', redirectTo: 'home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n    title = 'psr';\r\n}\r\n","<router-outlet></router-outlet>\r\n<app-alert-container></app-alert-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AuthModule } from '@auth/auth.module';\r\nimport { HomeComponent } from '@modules/home/home.component';\r\nimport { SecretComponent } from '@modules/secret/secret.component';\r\nimport { SkillManagementModule } from '@psr/modules/skill-management/skill-mgt.module';\r\n\r\nimport { AppBreadcrumbConfigProvider } from './app-breadcrumb-config';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { WidgetsModule } from './widgets/widgets.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HomeComponent,\r\n        SecretComponent,\r\n        LayoutComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        AuthModule,\r\n        CoreModule,\r\n        SharedModule,\r\n\r\n        // cleanup\r\n        // AlertModule,\r\n        // HeaderModule,\r\n        WidgetsModule,\r\n        SkillManagementModule\r\n    ],\r\n    providers: [\r\n        AppBreadcrumbConfigProvider\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { InjectionToken } from '@angular/core';\r\nimport { AuthRoutes } from '@auth/auth.constants';\r\nimport { environment } from '@env/environment';\r\n\r\nimport { MenuItem } from '../shared/menu.model';\r\nimport { AppRoutes } from './app.constants';\r\n\r\n\r\nexport interface IAppConfig {\r\n    baseUrl: string;\r\n    getUrl: (url: string) => string;\r\n    primaryMenu: MenuItem[];\r\n    profileMenu: MenuItem[];\r\n}\r\n\r\nexport const APP_CONFIG_TOKEN = new InjectionToken<IAppConfig>(\"Application configuration\", {\r\n    providedIn: 'root',\r\n    factory: (): IAppConfig => {\r\n        const _baseUrl = environment.apiUrl;\r\n\r\n        return {\r\n            baseUrl: `${_baseUrl}`,\r\n            getUrl: (url) => {\r\n                if (['/', '\\\\'].includes(url && url.slice(0, 1))) {\r\n                    return `${_baseUrl}${url.slice(1)}`;\r\n                }\r\n\r\n                return `${_baseUrl}${url}`;\r\n            },\r\n\r\n            primaryMenu: [\r\n                { label: 'Home', routerLink: AppRoutes.Home() },\r\n                { label: 'Skills', routerLink: AppRoutes.Skills() },\r\n                { label: 'Secret', routerLink: AppRoutes.Secret() }\r\n            ],\r\n            profileMenu: [\r\n                { label: 'Sign out', routerLink: AuthRoutes.RevokeToken() }\r\n            ]\r\n        };\r\n    }\r\n});","export const QueryParameterNames = {\r\n    ReturnUrl: 'returnUrl'\r\n};\r\n\r\nlet appPaths: IAppEndpoints = {\r\n    GetCountries: `lookup/countries`\r\n};\r\n\r\nexport interface IAppEndpoints {\r\n    readonly GetCountries: string;\r\n}\r\n\r\nexport interface IAppRoutes {\r\n    readonly Home: () => any[] | string;\r\n    readonly Skills: () => any[] | string;\r\n    readonly Secret: () => any[] | string;\r\n}\r\n\r\nlet appRoutes: IAppRoutes = {\r\n    Home: () => [`/home`],\r\n    Skills: () => [`/skills`],\r\n    Secret: () => [`/secret`],\r\n};\r\n\r\n\r\nexport const AppEndpoints: IAppEndpoints = appPaths;\r\nexport const AppRoutes: IAppRoutes = appRoutes;\r\n\r\n/* type Initializer<T> = T extends any ? (string | (() => any[])) : never\r\n// type AppRouteType =\r\n\r\nfunction correct<T>(arg: Initializer<T>) : any[] | Initializer<T> {\r\n    return typeof arg === 'function' ? arg() : arg;\r\n}\r\n\r\nlet ans1 = correct(\"true\");\r\nlet ans2 = correct(() => []);\r\nlet ans3 = correct(authRoutes.Login); */","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { UrlSerializer } from '@angular/router';\r\n\r\nimport { ErrorModule } from './error/error.module';\r\nimport { CustomUrlSerializer } from './services/custom-url.serializer';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [\r\n        CommonModule,\r\n        ErrorModule\r\n    ],\r\n    providers: [\r\n        // { provide: APP_INITIALIZER, useFactory: appInitializer, multi: true, deps: [AuthService] },\r\n        // { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n        { provide: UrlSerializer, useClass: CustomUrlSerializer }\r\n    ],\r\n    exports: []\r\n})\r\nexport class CoreModule { }\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable, NgZone } from '@angular/core';\r\nimport { AuthRoutes } from '@auth/auth.constants';\r\nimport { AuthService } from '@auth/services/auth.service';\r\nimport { EnvironmentService } from '@env/environment.service';\r\nimport { AlertService } from '@shared/alert';\r\nimport { ObservableInput, throwError } from 'rxjs';\r\nimport { filter, map, take, tap } from 'rxjs/operators';\r\n\r\nimport { ProblemDetails } from './error.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ErrorHandlerService {\r\n\r\n    constructor(\r\n        private auth: AuthService,\r\n        private alert: AlertService,\r\n        private zone: NgZone,\r\n        private env: EnvironmentService\r\n    ) { }\r\n\r\n    handleError(response: HttpErrorResponse): ObservableInput<any> {\r\n        const problem: ProblemDetails = response.error && response.error as ProblemDetails;\r\n\r\n        console.log('response.status', response.status);\r\n\r\n        this.auth.getUser()\r\n            .pipe(\r\n                take(1),\r\n                filter(_ => [401, 403].includes(response.status)),\r\n                map(user => ({ user, status: response.status })),\r\n                tap(x => {\r\n                    this.zone.run(() => {\r\n                        if (x.user === null && [401, 403].includes(x.status)) {\r\n                            this.alert.onCloseAlert(\r\n                                this.alert.error(\r\n                                    problem.title,\r\n                                    problem.detail,\r\n                                    [\r\n                                        { name: 'Login', route: AuthRoutes.Login() }\r\n                                    ]\r\n                                )\r\n                            ).subscribe(_ => {\r\n                                console.log('alert closed');\r\n                            });\r\n                        }\r\n                    });\r\n                    x.user === null && [401, 403].includes(x.status) && this.auth.redirectToLogin();\r\n                    // x.user === null && [401, 403].includes(x.status) && this.auth.logout();\r\n                }),\r\n                tap(x => {\r\n                    console.log('tapping...');\r\n                    console.log('x.user', x.user);\r\n                    console.log('x.status', x.status);\r\n                    x.user !== null && x.status === 401 && this.auth.logout();\r\n                }),\r\n                tap(x => {\r\n                    this.zone.run(() => {\r\n                        (x.user !== null && x.status === 403) && this.alert.warn(\r\n                            'Unauthorized',\r\n                            'Not authorized to peform the action'\r\n                        );\r\n                    })\r\n                })\r\n            )\r\n            .subscribe();\r\n\r\n        if (response.status === 0) {\r\n            this.alert.error(\r\n                \"No connection\",\r\n                \"Unable to connect to the server. You're probably offline or sever unreachable.\"\r\n            );\r\n        }\r\n\r\n\r\n        if (this.isProblemDetail(problem)) {\r\n            console.error('Request does not return a problem detail, find out why');\r\n            console.log(problem);\r\n        }\r\n\r\n        // console.log('problem instanceof ProblemDetails', problem instanceof ProblemDetails);\r\n        /* if (!(problem instanceof ProblemDetails)) {\r\n            console.error('Request does not return a problem detail, find out why');\r\n            console.log(problem);\r\n        } */\r\n\r\n        [404].includes(response.status) && this.zone.run(() => {\r\n            this.alert.error(\r\n                \"Not found\",\r\n                \"We could not find the resource you requested.\"\r\n            );\r\n        });\r\n\r\n        ![401, 403, 404, 0].includes(response.status) && this.zone.run(() => {\r\n            console.log('bad request');\r\n\r\n            //TODO: ExpressionChangedAfterItHasBeenCheckedError\r\n            this.alert.error(\r\n                problem.title,\r\n                problem.detail\r\n            );\r\n        });\r\n\r\n        return throwError({\r\n            success: false,\r\n            status: response.status,\r\n            statusText: response.statusText,\r\n            message: response.message,\r\n            error: response.error\r\n        });\r\n    }\r\n\r\n    private isProblemDetail(problem: any) {\r\n        return \"type\" in problem\r\n            && \"title\" in problem\r\n            && \"status\" in problem\r\n            && \"detail\" in problem\r\n            && \"instance\" in problem\r\n            && \"errors\" in problem;\r\n    }\r\n}","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { ErrorHandlerService } from './error-handler.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private errorHandler: ErrorHandlerService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(\r\n            tap(x => console.log('xxxxxx => ', x)),\r\n            catchError(error => this.errorHandler.handleError(error as HttpErrorResponse))\r\n        );\r\n    }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { AlertModule } from '@shared/alert';\r\n\r\nimport { ErrorInterceptor } from './error.interceptor';\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [AlertModule],\r\n    providers: [\r\n        // { provide: APP_INITIALIZER, useFactory: appInitializer, multi: true, deps: [AuthService] },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n    ],\r\n})\r\nexport class ErrorModule { }\r\n","import { DefaultUrlSerializer, UrlSerializer, UrlTree } from '@angular/router';\n\nexport class CustomUrlSerializer implements UrlSerializer {\n\n    private _doubleSlashPattern: RegExp = /\\/\\//;\n\n    parse(url: any): UrlTree {\n        let dus = new DefaultUrlSerializer();\n        // url = this.replaceDoubleSlash(url);\n        return dus.parse(url);\n    }\n    serialize(tree: UrlTree): any {\n        let dus = new DefaultUrlSerializer(),\n            path = dus.serialize(tree);\n        path = this.replaceDoubleSlash(path);\n        // console.log('path', path);\n        return path;\n    }\n\n    private replaceDoubleSlash(input: string): string {\n        let inputString = input;\n        if (this._doubleSlashPattern.test(inputString)) {\n            inputString = inputString.replace(this._doubleSlashPattern, '/');\n        }\n\n        return inputString;\n    }\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { APP_CONFIG_TOKEN, IAppConfig } from '@core/app.config';\r\nimport { AppEndpoints } from '@core/app.constants';\r\nimport { ILookupItem } from '@core/app.interfaces';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface Country {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LookupService {\r\n\r\n    constructor(private http: HttpClient, @Inject(APP_CONFIG_TOKEN) private appConfig: IAppConfig) { }\r\n\r\n    public getCountries(): Observable<ILookupItem[]> {\r\n        return this.http.get<ILookupItem[]>(this.appConfig.getUrl(AppEndpoints.GetCountries));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, from, Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n\r\n    private storage: any;\r\n\r\n    constructor() {\r\n        this.storage = localStorage; // localStorage, sessionStorage;\r\n    }\r\n\r\n    saveItem<T>(key: string, item: T) {\r\n        this.storage.setItem(key, JSON.stringify(item));\r\n    }\r\n\r\n    getItem(key: string): any {\r\n        // JSON.parse(null) === null\r\n        // localStorage.getItem(key) === null if cannot find item\r\n        return JSON.parse(this.storage.getItem(key)!);\r\n        /* let item = this.storage.getItem(key);\r\n\r\n        if (item && item !== 'undefined') {\r\n            return JSON.parse(this.storage.getItem(key));\r\n        }\r\n\r\n        return; */\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.storage.removeItem(key);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { AuthEndpoints } from '@auth/auth.constants';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { APP_CONFIG_TOKEN, IAppConfig } from '../app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TestService {\r\n\r\n    constructor(private http: HttpClient, @Inject(APP_CONFIG_TOKEN) private appConfig: IAppConfig) { }\r\n\r\n    getError(): Observable<any> {\r\n        console.log(this.appConfig.getUrl('error/get-error'));\r\n        return this.http.get(this.appConfig.getUrl('error/get-error'));\r\n    }\r\n\r\n    getTestDescription(): Observable<string> {\r\n        return this.http.get<string>(this.appConfig.getUrl(AuthEndpoints.GetTestDescription)).pipe(\r\n            // shareReplay()\r\n        );\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth/services/auth.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-layout',\n    template: `\n      <app-header [showSignInOrSignUp]=\"isAuthenticated$ | async\"></app-header>\n      <!-- h-0 is here to make the immediate sibling fill height of this container -->\n      <div class=\"flex-1 h-0\">\n          <div class=\"px-2 mx-auto max-w-7xl sm:px-6 lg:px-8 min-h-full flex flex-col\">\n              <router-outlet></router-outlet>\n          </div>\n      </div>\n    `,\n    styles: [`\n        :host {\n            display: flex;\n            flex-direction: column;\n            min-height: 100vh;\n        }\n    `]\n})\nexport class LayoutComponent implements OnInit {\n\n    public isAuthenticated$: Observable<boolean>;\n\n    constructor(private auth: AuthService) {\n        this.isAuthenticated$ = this.auth.isAuthenticated()\n    }\n\n    ngOnInit(): void {\n    }\n\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\nconst authRoutes: Routes = [\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: '**', redirectTo: 'login', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(authRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","export interface IAuthEndpoints {\r\n    readonly Register: string;\r\n    readonly Login: string;\r\n    readonly RefreshToken: string;\r\n    readonly RevokeToken: string;\r\n    readonly CheckEmailExists: string;\r\n    readonly GetTestDescription: string;\r\n}\r\n\r\nexport interface IAuthRoutes {\r\n    readonly Register: () => any[] | string;\r\n    readonly Login: () => any[] | string;\r\n    readonly RefreshToken: () => any[] | string;\r\n    readonly RevokeToken: () => any[] | string;\r\n}\r\n\r\nexport interface IAuthConstants {\r\n    readonly UserKey: string;\r\n}\r\n\r\nlet authPaths: IAuthEndpoints = {\r\n    Register: `auth/register`,\r\n    Login: `auth/authenticate`,\r\n    RefreshToken: `auth/refresh`,\r\n    RevokeToken: `auth/revoke`,\r\n    CheckEmailExists: `users/exists`,\r\n    GetTestDescription: `test`,\r\n};\r\n\r\nlet authRoutes: IAuthRoutes = {\r\n    Register: () => [`/auth/register`],\r\n    Login: () => [`/auth/authenticate`],\r\n    RefreshToken: () => [`/auth/refresh`],\r\n    RevokeToken: () => [`/auth/revoke`],\r\n};\r\n\r\nlet authConsts: IAuthConstants = {\r\n    UserKey: \"psr-userkey-tlxstgmzna\"\r\n}\r\n\r\nexport const AuthEndpoints: IAuthEndpoints = authPaths;\r\nexport const AuthRoutes: IAuthRoutes = authRoutes;\r\nexport const AuthConstants: IAuthConstants = authConsts;","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { QueryParameterNames } from \"@psr/core/app.constants\";\r\nimport { Observable } from \"rxjs\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { AuthRoutes } from \"./auth.constants\";\r\nimport { AuthService } from \"./services/auth.service\";\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private auth: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        return this.auth.isAuthenticated().pipe(\r\n            tap(isAuthenticated => this.handleAuthorization(isAuthenticated, state))\r\n        )\r\n    }\r\n\r\n    private handleAuthorization(isAuthenticated: boolean, state: RouterStateSnapshot) {\r\n        if (!isAuthenticated) {\r\n            this.router.navigate([AuthRoutes.Login], {\r\n                queryParams: {\r\n                    [QueryParameterNames.ReturnUrl]: state.url\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { AuthService } from './services/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\nimport { EnvironmentService } from '@env/environment.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthorizeInterceptor implements HttpInterceptor {\r\n    constructor(private auth: AuthService, private env: EnvironmentService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return this.auth.getToken()\r\n            .pipe(\r\n                mergeMap(token => this.processRequestWithToken(token, req, next))\r\n            );\r\n    }\r\n    private processRequestWithToken(token: string | null, req: HttpRequest<any>, next: HttpHandler) {\r\n        const isApiUrl = req.url.startsWith(this.env.apiUrl);\r\n        if (!!token && isApiUrl) { //this.isSameOriginUrl(req)\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(req);\r\n    }\r\n\r\n    private isSameOriginUrl(req: any) {\r\n        // It's an absolute url with the same origin.\r\n        if (req.url.startsWith(`${window.location.origin}/`)) {\r\n            return true;\r\n        }\r\n\r\n        // It's a protocol relative url with the same origin.\r\n        // For example: //www.example.com/api/Products\r\n        if (req.url.startsWith(`//${window.location.host}/`)) {\r\n            return true;\r\n        }\r\n\r\n        // It's a relative url like /api/Products\r\n        if (/^\\/[^\\/].*/.test(req.url)) {\r\n            return true;\r\n        }\r\n\r\n        // It's an absolute or protocol relative url that\r\n        // doesn't have the same origin.\r\n        return false;\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { AuthorizeInterceptor } from './auth.interceptor';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { PasswordStrengthComponent } from './components/password-strength/password-strength.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        RegisterComponent,\r\n        PasswordStrengthComponent,\r\n        LoginComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        HttpClientModule,\r\n        ReactiveFormsModule,\r\n        AuthRoutingModule\r\n    ],\r\n    providers: [\r\n        { provide: HTTP_INTERCEPTORS, useClass: AuthorizeInterceptor, multi: true }\r\n    ],\r\n    exports: []\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthRoutes } from '@auth/auth.constants';\r\nimport { AuthValidatorsService } from '@auth/services/auth-validators.service';\r\nimport { AuthService } from '@auth/services/auth.service';\r\nimport { AppRoutes } from '@core/app.constants';\r\nimport { AlertService } from '@shared/alert';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n    public form!: FormGroup;\r\n    public formIsValid: boolean = false;\r\n\r\n    private loginSub!: Subscription;\r\n    private formStatusSub!: Subscription;\r\n\r\n    constructor(\r\n        private auth: AuthService,\r\n        private fb: FormBuilder,\r\n        private validators: AuthValidatorsService,\r\n        private alert: AlertService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.createForm();\r\n\r\n        this.formStatusSub = this.form.statusChanges\r\n            .pipe(\r\n                /**\r\n                 * The Debouncetime emits the last received value\r\n                 * from the source observable after a specified amount\r\n                 * of time has elapsed without any other value appearing\r\n                 * on the source Observable\r\n                 */\r\n                debounceTime(100)\r\n            ).subscribe(formStatus => {\r\n                if (formStatus === \"INVALID\" || formStatus === \"PENDING\")\r\n                    this.formIsValid = false;\r\n                else\r\n                    this.formIsValid = true;\r\n            });\r\n    }\r\n\r\n    loginEmployee() {\r\n        if (this.form.valid) {\r\n            this.loginSub = this.auth.login(this.form.value).subscribe(response => {\r\n                // console.info('login', response);\r\n                this.form.reset();\r\n                this.alert.success(\r\n                    \"Login successful\",\r\n                    \"Welcome to the Personal Skill Rating app. Please rate yourself.\"\r\n                );\r\n                this.router.navigate([AppRoutes.Home]);\r\n            });\r\n        } else {\r\n            this.form.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    isInvalid(control: FormControl, validation: string | undefined = undefined) {\r\n        return (!validation && control.touched && control.invalid) ||\r\n            (validation && control.touched && control.hasError(validation));\r\n    }\r\n\r\n    get emailControl() { return this.form.get('email') as FormControl; }\r\n    get passwordControl() { return this.form.get('password') as FormControl; }\r\n\r\n    createForm() {\r\n        this.form = this.fb.group({\r\n            email: ['john@email.com', [Validators.required, Validators.email]],\r\n            password: ['J0h1n.Pass', [Validators.required, this.validators.passwordPatternValidator()]]\r\n        });\r\n    }\r\n\r\n    gotoRegister(): void {\r\n        this.router.navigate([AuthRoutes.Register]);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.loginSub.unsubscribe();\r\n        this.formStatusSub.unsubscribe();\r\n    }\r\n}\r\n","<!-- <div class=\"login\"> -->\r\n<div class=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n    <h2 class=\"psr-form__header\">Sign In</h2>\r\n</div>\r\n<div class=\"psr-form__container\">\r\n    <div class=\"psr-form__group\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"loginEmployee()\" class=\"psr-form__form\">\r\n            <div>\r\n                <label class=\"psr-form__label\" for=\"email-address\">Email address</label>\r\n                <input formControlName=\"email\" [class.psr-form__field--error]=\"isInvalid(emailControl)\"\r\n                       id=\"email-address\" name=\"email-address\" type=\"email\" class=\"psr-form__field\"\r\n                       placeholder=\"example@email.com\" autocomplete=\"email\" />\r\n                <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(emailControl, 'required')\">What is your email\r\n                    address?</p>\r\n                <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(emailControl, 'email')\">Invalid email format</p>\r\n            </div>\r\n            <div>\r\n                <label class=\"psr-form__label\" for=\"password\">Password</label>\r\n                <input formControlName=\"password\" [class.psr-form__field--error]=\"isInvalid(passwordControl)\"\r\n                       id=\"password\" name=\"password\" type=\"password\" class=\"psr-form__field\" placeholder=\"\"\r\n                       autocomplete=\"current-password\">\r\n                <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(passwordControl, 'required')\">What is your\r\n                    password?</p>\r\n            </div>\r\n            <div>\r\n                <!-- [disabled]=\"!formIsValid\" -->\r\n                <button class=\"psr-form__button\" type=\"submit\">\r\n                    Sign in\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <p class=\"psr-form__footer\">Don't Have an Account? <a class=\"psr-form__alt-action\" (click)=\"gotoRegister()\">Create\r\n            it.</a></p>\r\n</div>\r\n<!-- </div> -->\r\n","import { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, QueryList, Renderer2, SimpleChange, ViewChild, ViewChildren } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { PasswordService } from '../../services/password.service';\r\n\r\n@Component({\r\n    selector: 'app-password-strength',\r\n    templateUrl: './password-strength.component.html',\r\n    styleUrls: ['./password-strength.component.scss']\r\n})\r\nexport class PasswordStrengthComponent implements OnInit, AfterViewInit {\r\n    @ViewChildren('chunk') chunkEls!: QueryList<ElementRef>;\r\n    @Input('password-control') passwordControl!: FormControl;\r\n    private defaultColor: string = '#ddd';\r\n    private colors: string[] = ['darkred', 'orangered', 'orange', 'yellowgreen', '#ddd'];\r\n\r\n    constructor(private pwdService: PasswordService, private renderer: Renderer2) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.passwordControl.valueChanges.pipe(\r\n            debounceTime(200),\r\n            distinctUntilChanged()\r\n        ).subscribe((value: string) => {\r\n            const colorIndex = this.getColorIndex(this.pwdService.checkStrength(value));\r\n\r\n            // reset bg color            \r\n\r\n            this.chunkEls.forEach((item, index) => {\r\n                this.renderer.setStyle(item.nativeElement, 'background-color', this.defaultColor);\r\n\r\n                if (colorIndex === -1 || index <= colorIndex) {\r\n                    this.renderer.setStyle(item.nativeElement, 'background-color', this.colors[colorIndex]);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    private getColorIndex(score: number) {\r\n        const index = [10, 20, 30, 40].indexOf(score);\r\n        return index === -1 ? (this.colors.length - 1) : index;\r\n    }\r\n\r\n}\r\n","<div class=\"strength\">\r\n    <ul class=\"strength__bar\">\r\n        <li class=\"strength__chunk\" #chunk></li>\r\n        <li class=\"strength__chunk\" #chunk></li>\r\n        <li class=\"strength__chunk\" #chunk></li>\r\n        <li class=\"strength__chunk\" #chunk></li>\r\n    </ul>\r\n</div>\r\n","import { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthRoutes } from '@auth/auth.constants';\r\nimport { ILookupItem } from '@core/app.interfaces';\r\nimport { LookupService } from '@core/services/lookup.service';\r\nimport { EnvironmentService } from '@env/environment.service';\r\nimport { AlertService } from '@shared/alert';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { AuthValidatorsService } from '../../services/auth-validators.service';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n\r\n    @Output() passwordChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    public form!: FormGroup;\r\n    public countries: ILookupItem[] = [];\r\n    public formIsValid: boolean = false;\r\n\r\n    private debouncer$: Subject<string> = new Subject();\r\n    private registerSub!: Subscription;\r\n    private formStatusSub!: Subscription;\r\n\r\n    constructor(\r\n        private auth: AuthService,\r\n        private fb: FormBuilder,\r\n        private validators: AuthValidatorsService,\r\n        private lookupService: LookupService,\r\n        private alert: AlertService,\r\n        private env: EnvironmentService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.createForm();\r\n\r\n        this.lookupService.getCountries().subscribe(result => this.countries = result);\r\n\r\n        this.debouncer$.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged()\r\n        ).subscribe((value: string) => this.passwordChange.emit(value));\r\n\r\n        this.formStatusSub = this.form.statusChanges.subscribe(formStatus => {\r\n            if (formStatus === \"INVALID\" || formStatus === \"PENDING\")\r\n                this.formIsValid = false;\r\n            else\r\n                this.formIsValid = true;\r\n        });\r\n    }\r\n\r\n    registerEmployee() {\r\n        if (this.form.valid) {\r\n            this.registerSub = this.auth.register(this.form.value).subscribe(response => {\r\n                console.info(response);\r\n                this.form.reset();\r\n                this.alert.success(\r\n                    \"Registration successful\",\r\n                    \"You have completed registration. Please login.\",\r\n                    [\r\n                        { name: 'Login', route: AuthRoutes.Login() }\r\n                    ]\r\n                )\r\n            });\r\n        } else {\r\n            this.form.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    onPasswordChange(e: Event) {\r\n        const { target } = e;\r\n        this.debouncer$.next((target as HTMLInputElement).value);\r\n    }\r\n\r\n    isInvalid(control: FormControl, validation: string | undefined = undefined) {\r\n        return (!validation && control.touched && control.invalid) ||\r\n            (validation && control.touched && control.hasError(validation));\r\n    }\r\n\r\n    get emailControl() { return this.form.get('email') as FormControl; }\r\n    get passwordControl() { return this.form.get('password') as FormControl; }\r\n    get confirmPasswordControl() { return this.form.get('confirmPassword') as FormControl; }\r\n    get firstNameControl() { return this.form.get('firstName') as FormControl; }\r\n    get lastNameControl() { return this.form.get('lastName') as FormControl; }\r\n    get countryControl() { return this.form.get('country') as FormControl; }\r\n    get timezoneControl() { return this.form.get('timezone') as FormControl; }\r\n    get workHoursControl() { return this.form.get('workHours') as FormControl; }\r\n    get coreHoursControl() { return this.form.get('coreHours') as FormControl; }\r\n\r\n    createForm() {\r\n        this.form = this.fb.group({\r\n            email: ['', [Validators.required, Validators.email], [this.validators.emailAvailableValidator()]],\r\n            password: ['', [Validators.required, this.validators.passwordPatternValidator()]],\r\n            confirmPassword: ['', Validators.required],\r\n            firstName: ['', Validators.required],\r\n            lastName: ['', Validators.required],\r\n            country: ['', Validators.required],\r\n            timezone: ['', Validators.required],\r\n            workHours: ['', Validators.required],\r\n            coreHours: ['', Validators.required]\r\n        }, {\r\n            validator: this.validators.passwordMatchValidator('password', 'confirmPassword')\r\n        });\r\n    }\r\n\r\n    gotoLogin() {\r\n        this.router.navigate([AuthRoutes.Login]);\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.registerSub.unsubscribe();\r\n        this.formStatusSub.unsubscribe();\r\n    }\r\n\r\n}\r\n","<div class=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n    <h2 class=\"psr-form__header\">Register\r\n    </h2>\r\n</div>\r\n<div class=\"psr-form__container\">\r\n    <div class=\"psr-form__group\">\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"registerEmployee()\" class=\"psr-form__form\">\r\n            <div>\r\n                <label class=\"psr-form__label\" for=\"email-address\">Email address</label>\r\n                <input formControlName=\"email\" [class.psr-form__field--error]=\"isInvalid(emailControl)\"\r\n                       id=\"email-address\" name=\"email-address\" type=\"email\" class=\"psr-form__field\"\r\n                       placeholder=\"example@email.com\" autocomplete=\"email\" />\r\n                <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(emailControl, 'required')\">What is your email\r\n                    address?</p>\r\n                <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(emailControl, 'emailNotAvailable')\">\r\n                    Email not available\r\n                </p>\r\n            </div>\r\n            <div class=\"flex flex-wrap -mx-3\">\r\n                <div class=\"w-1/2 px-3\">\r\n                    <label class=\"psr-form__label\" for=\"password\">Password</label>\r\n                    <input formControlName=\"password\" [class.psr-form__field--error]=\"isInvalid(passwordControl)\"\r\n                           (input)=\"onPasswordChange($event)\" id=\"password\" name=\"password\" type=\"password\"\r\n                           class=\"psr-form__field\" placeholder=\"\" autocomplete=\"current-password\">\r\n                    <app-password-strength [password-control]=\"passwordControl\"></app-password-strength>\r\n                    <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(passwordControl)\">\r\n                        Enter a combination of at least eight characters; numbers, uppercase, lowercase, and\r\n                        punctuation.\r\n                    </p>\r\n                </div>\r\n                <div class=\"w-1/2 px-3\">\r\n                    <label class=\"psr-form__label\" for=\"confirm-password\">Confirm password</label>\r\n                    <input formControlName=\"confirmPassword\"\r\n                           [class.psr-form__field--error]=\"isInvalid(confirmPasswordControl)\" id=\"confirm-password\"\r\n                           name=\"confirm-password\" type=\"password\" class=\"psr-form__field\" placeholder=\"\"\r\n                           autocomplete=\"new-password\">\r\n                    <p class=\"psr-form__field-error-msg\" *ngIf=\"confirmPasswordControl.hasError('passwordMismatch')\">\r\n                        Passwords do not match\r\n                    </p>\r\n                    <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(confirmPasswordControl, 'required')\">\r\n                        Confirm your password\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"flex flex-wrap -mx-3\">\r\n                <div class=\"w-1/2 px-3\">\r\n                    <label class=\"psr-form__label\" for=\"first-name\">First name</label>\r\n                    <input formControlName=\"firstName\" [class.psr-form__field--error]=\"isInvalid(firstNameControl)\"\r\n                           id=\"first-name\" name=\"first-name\" type=\"text\" class=\"psr-form__field\" placeholder=\"\">\r\n                    <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(firstNameControl)\">\r\n                        What is your first name?\r\n                    </p>\r\n                </div>\r\n                <div class=\"w-1/2 px-3\">\r\n                    <label class=\"psr-form__label\" for=\"last-name\">Last name</label>\r\n                    <input formControlName=\"lastName\" [class.psr-form__field--error]=\"isInvalid(lastNameControl)\"\r\n                           id=\"last-name\" name=\"last-name\" type=\"text\" class=\"psr-form__field\" placeholder=\"\">\r\n                    <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(lastNameControl)\">\r\n                        What is your last name?\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"flex flex-wrap -mx-3\">\r\n                <div class=\"w-1/2 px-3\">\r\n                    <label for=\"country\" class=\"psr-form__label\">Country</label>\r\n                    <select formControlName=\"country\" [class.psr-form__field--error]=\"isInvalid(countryControl)\"\r\n                            id=\"country\" name=\"country\" class=\"psr-form__select\">\r\n                        <option value=\"\" selected> -- </option>\r\n                        <option [value]=\"country.id\" *ngFor=\"let country of countries\">{{ country.value }}</option>\r\n                    </select>\r\n                    <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(countryControl)\">\r\n                        What country do you reside in?\r\n                    </p>\r\n                </div>\r\n                <div class=\"w-1/2 px-3\">\r\n                    <label class=\"psr-form__label\" for=\"timezone\">Timezone</label>\r\n                    <input formControlName=\"timezone\" [class.psr-form__field--error]=\"isInvalid(timezoneControl)\"\r\n                           id=\"timezone\" name=\"timezone\" type=\"text\" class=\"psr-form__field\" placeholder=\"\">\r\n                    <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(timezoneControl)\">\r\n                        What is your time zone?\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"flex flex-wrap -mx-3\">\r\n                <div class=\"w-1/2 px-3\">\r\n                    <label class=\"psr-form__label\" for=\"core-hours\">Core hours</label>\r\n                    <input formControlName=\"coreHours\" [class.psr-form__field--error]=\"isInvalid(coreHoursControl)\"\r\n                           id=\"core-hours\" name=\"core-hours\" type=\"text\" class=\"psr-form__field\" placeholder=\"\">\r\n                    <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(coreHoursControl)\">\r\n                        What is your core work period? (8am - 4pm)\r\n                    </p>\r\n                </div>\r\n                <div class=\"w-1/2 px-3\">\r\n                    <label class=\"psr-form__label\" for=\"work-hours\">Work hours</label>\r\n                    <input formControlName=\"workHours\" [class.psr-form__field--error]=\"isInvalid(workHoursControl)\"\r\n                           id=\"work-hours\" name=\"work-hours\" type=\"text\" class=\"psr-form__field\" placeholder=\"\">\r\n                    <p class=\"psr-form__field-error-msg\" *ngIf=\"isInvalid(workHoursControl)\">\r\n                        What is your probably work period? (6am - 9pm)\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button [disabled]=\"!formIsValid\" class=\"psr-form__button\" type=\"submit\">\r\n                    Register\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <p class=\"psr-form__footer\">Already have an Account? <a class=\"psr-form__alt-action\" (click)=\"gotoLogin()\">Log\r\n            in.</a></p>\r\n</div>\r\n","export interface IUser {\r\n    id: string;\r\n    userName: string;\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    token: string;\r\n}\r\n\r\nexport interface IUserRegistrationReq {\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    timeZone: string;\r\n    workHours: string;\r\n    coreHours: string;\r\n}\r\n\r\nexport interface IUserLoginReq {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport const EMPTY_USER: IUser = {\r\n    id: '00000000-0000-0000-0000-000000000000',\r\n    userName: '',\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    token: ''\r\n};","import { Injectable } from '@angular/core';\r\nimport { AbstractControl, AsyncValidatorFn, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, first, map, switchMap, tap } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthValidatorsService {\r\n\r\n    constructor(private auth: AuthService) { }\r\n\r\n    passwordMatchValidator(password: string, confirmPassword: string) {\r\n        return (formGroup: FormGroup) => {\r\n            const passwordControl = formGroup.controls[password];\r\n            const confirmPasswordControl = formGroup.controls[confirmPassword];\r\n\r\n            if (!passwordControl || !confirmPasswordControl) {\r\n                return null;\r\n            }\r\n\r\n            if (\r\n                confirmPasswordControl.errors &&\r\n                !confirmPasswordControl.errors.passwordMismatch\r\n            ) {\r\n                return null;\r\n            }\r\n\r\n            if (passwordControl.value !== confirmPasswordControl.value) {\r\n                confirmPasswordControl.setErrors({ passwordMismatch: true });\r\n                return true;\r\n            } else {\r\n                confirmPasswordControl.setErrors(null);\r\n                return null;\r\n            }\r\n        };\r\n    }\r\n\r\n    /*\r\n        RegEx\tDescription\r\n        ^\tThe password string will start this way\r\n        (?=.*[a-z])\tThe string must contain at least 1 lowercase alphabetical character\r\n        (?=.*[A-Z])\tThe string must contain at least 1 uppercase alphabetical character\r\n        (?=.*[0-9])\tThe string must contain at least 1 numeric character\r\n        (?=.*[!@#$%^&*])\tThe string must contain at least one special character, but we are escaping reserved RegEx characters to avoid conflict\r\n        (?=.{8,})\tThe string must be eight characters or longer\r\n\r\n        by- Nic Raboy\r\n    */\r\n    passwordPatternValidator(): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            if (!control.value)\r\n                return null;\r\n\r\n            const regex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*\\.])(?=.{8,})');\r\n            const valid = regex.test(control.value);\r\n            return valid ? null : { passwordInvalid: true };\r\n        };\r\n    }\r\n\r\n    emailAvailableValidator(): AsyncValidatorFn {\r\n        const subject = new BehaviorSubject<string>('');\r\n        const debouncedInput$ = subject.asObservable().pipe(\r\n            distinctUntilChanged(),\r\n            debounceTime(1000),\r\n            switchMap(value => this.auth.checkEmailExists(value)),\r\n            map((result: any, index: number) => {\r\n                return result.value === 'invalid' ? { emailNotAvailable: true } : null;\r\n            })\r\n        ).pipe(first());\r\n\r\n        return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n            if (!control.value)\r\n                return of(null);\r\n\r\n            subject.next(control.value);\r\n            return debouncedInput$;\r\n        };\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { APP_CONFIG_TOKEN, IAppConfig } from '@core/app.config';\r\nimport { StorageService } from '@core/services/storage.service';\r\nimport { BehaviorSubject, concat, Observable, of } from 'rxjs';\r\nimport { distinctUntilKeyChanged, filter, map, switchMap, take, tap } from 'rxjs/operators';\r\n\r\nimport { AuthConstants, AuthEndpoints, AuthRoutes } from '../auth.constants';\r\nimport { EMPTY_USER, IUser, IUserLoginReq, IUserRegistrationReq } from '../models/user.model';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    redirectToLogin(): void {\r\n        this.router.navigate([AuthRoutes.Login])\r\n    }\r\n    private refreshTokenTimeout: any;\r\n    private userSubject = new BehaviorSubject<IUser | null>(null);\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private storage: StorageService,\r\n        private router: Router,\r\n        @Inject(APP_CONFIG_TOKEN) private appConfig: IAppConfig\r\n    ) { }\r\n\r\n    public isAuthenticated(): Observable<boolean> {\r\n        return this.getUser().pipe(\r\n            take(1),\r\n            map(user => !!user)\r\n        );\r\n    }\r\n\r\n    public getUser(): Observable<IUser | null> {\r\n        let source$ = concat(\r\n            this.userSubject.pipe(\r\n                // take will trigger the `subject` observable\r\n                // to complete so that the next observable in\r\n                // concat is subscribed to\r\n                take(1),\r\n\r\n                // filter out null values (false)\r\n                // convert null to false\r\n                filter(user => !!user)\r\n            ),\r\n\r\n            // the `of` observable will automatically complete\r\n            // so the next observable in concate will be\r\n            // subscribed to\r\n            of(this.storage.getItem(AuthConstants.UserKey)).pipe(\r\n                filter(user => !!user),\r\n\r\n                // tap(x => console.log('storage => ', x)),\r\n\r\n                // we will get here if the value is not null\r\n                // update the user subject\r\n                tap(user => this.userSubject.next(user))\r\n            ),\r\n            this.userSubject.asObservable()\r\n        ).pipe(\r\n            // here to allow distinctUntilKeyChanged to work\r\n            switchMap(user => of(user ?? EMPTY_USER)),\r\n            distinctUntilKeyChanged('id'),\r\n            // transform back to null\r\n            switchMap(user => of(user.id === EMPTY_USER.id ? null : user))\r\n        );\r\n\r\n        return source$;\r\n    }\r\n\r\n    public getToken(): Observable<string | null> {\r\n        // this.retrieveUser()\r\n        return this.getUser().pipe(\r\n            take(1),\r\n            map(user => user && user.token)\r\n        );\r\n    }\r\n\r\n    public login(payload: IUserLoginReq): Observable<IUser> {\r\n        return this.http.post<IUser>(this.appConfig.getUrl(AuthEndpoints.Login), payload, { withCredentials: true }).pipe(\r\n            // shareReplay(),\r\n            tap(user => {\r\n                this.userSubject.next(user);\r\n                // this.startRefreshTokenTimer();\r\n                this.storeUser(user);\r\n            })\r\n        );\r\n    }\r\n\r\n    public logout() {\r\n        // this.userSubject.next(null);\r\n        // logout from server\r\n        // pass refresh token if you can\r\n        // console.log('logging out...');\r\n        return this.http.post<any>(this.appConfig.getUrl(AuthEndpoints.RevokeToken), {}, { withCredentials: true }).pipe(\r\n            // shareReplay(),\r\n            tap((user) => {\r\n                // emit null as next user\r\n                this.userSubject.next(null);\r\n\r\n                // stop refresh token timer\r\n                // this.startRefreshTokenTimer();\r\n\r\n                // remove user from localStorage\r\n                this.removeUser();\r\n\r\n                // redirect to login\r\n                this.router.navigate([AuthRoutes.Login]);\r\n            })\r\n        ).subscribe();\r\n    }\r\n\r\n\r\n    public register(payload: IUserRegistrationReq): Observable<IUser> {\r\n        return this.http.post<IUser>(this.appConfig.getUrl(AuthEndpoints.Register), payload, { withCredentials: true }).pipe(\r\n            tap(user => {\r\n                this.userSubject.next(user);\r\n                // this.startRefreshTokenTimer();\r\n                this.storeUser(user);\r\n            })\r\n        );\r\n    }\r\n\r\n    public refreshToken() {\r\n        return this.getToken().pipe(\r\n            switchMap(token => this.http.post<any>(this.appConfig.getUrl(AuthEndpoints.RefreshToken), { token }, { withCredentials: true }).pipe(\r\n                tap((user) => {\r\n                    this.userSubject.next(user);\r\n                    // this.startRefreshTokenTimer();\r\n                    this.storeUser(user);\r\n                })\r\n            ))\r\n        )\r\n    }\r\n\r\n    public checkEmailExists(email: string): Observable<any> {\r\n        return this.http.post(this.appConfig.getUrl(AuthEndpoints.CheckEmailExists), {\r\n            email: email\r\n        });\r\n    }\r\n\r\n    private startRefreshTokenTimer() {\r\n\r\n        this.getUser()\r\n            .pipe(\r\n                take(1)\r\n            )\r\n            .subscribe(user => {\r\n                // parse json object from base64 encoded jwt token\r\n                const jwtToken = user && JSON.parse(atob(user.token.split('.')[1]));\r\n\r\n                if (!jwtToken) return;\r\n\r\n                // set a timeout to refresh the token a minute before it expires\r\n                const expires = new Date(jwtToken.exp * 1000);\r\n                const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n                this.refreshTokenTimeout = setTimeout(() => this.refreshToken().subscribe(), timeout);\r\n            });\r\n\r\n    }\r\n\r\n    private stopRefreshTokenTimer() {\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n\r\n    private storeUser(item: IUser) {\r\n        this.storage.saveItem(AuthConstants.UserKey, item);\r\n    }\r\n\r\n    private removeUser(): void {\r\n        this.storage.removeItem(AuthConstants.UserKey);\r\n    }\r\n\r\n    private retrieveUser(): IUser | null {\r\n        return this.storage.getItem(AuthConstants.UserKey);\r\n    }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PasswordService {\r\n\r\n    constructor() { }\r\n\r\n    checkStrength(password: string): number {\r\n        /* if (!password)\r\n            return 0; */\r\n\r\n        // 1\r\n        let force: number = 0;\r\n\r\n        // 2\r\n        const regex: RegExp = /[$-/:-?{-~!\"^_@`\\[\\]]/g;\r\n        const lowerLetters: boolean = /[a-z]+/.test(password);\r\n        const upperLetters: boolean = /[A-Z]+/.test(password);\r\n        const numbers: boolean = /[0-9]+/.test(password);\r\n        const symbols: boolean = regex.test(password);\r\n\r\n        // 3\r\n        const flags: boolean[] = [lowerLetters, upperLetters, numbers, symbols];\r\n\r\n        // 4\r\n        let passedMatches = 0;\r\n        for (const flag of flags) {\r\n            passedMatches += flag === true ? 1 : 0;\r\n        }\r\n\r\n        // 5\r\n        force += 2 * password.length + ((password.length >= 10) ? 1 : 0);\r\n        force += passedMatches * 10;\r\n\r\n        // 6\r\n        force = (password.length <= 8) ? Math.min(force, 10) : force;\r\n\r\n        // 7\r\n        force = (passedMatches === 1) ? Math.min(force, 10) : force;\r\n        force = (passedMatches === 2) ? Math.min(force, 20) : force;\r\n        force = (passedMatches === 3) ? Math.min(force, 30) : force;\r\n        force = (passedMatches === 4) ? Math.min(force, 40) : force;\r\n\r\n        return force;\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthRoutes } from '@auth/auth.constants';\r\nimport { IUser } from '@auth/models/user.model';\r\nimport { AuthService } from '@auth/services/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { TestService } from '../../core/services/test.service';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n    public user: IUser | null = null;\r\n\r\n    private getUserSub!: Subscription;\r\n    private logoutSub!: Subscription;\r\n    private testDescSub!: Subscription;\r\n\r\n    constructor(\r\n        private test: TestService,\r\n        private auth: AuthService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.getUserSub = this.auth.getUser()\r\n            .subscribe(user => {\r\n                this.user = user;\r\n            });\r\n    }\r\n\r\n    onGetError(): void {\r\n        this.test.getError().subscribe(\r\n            value => {\r\n                console.info(value);\r\n            },\r\n            error => {\r\n                console.error(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    onGetTestDescription(): void {\r\n        this.testDescSub = this.test.getTestDescription().subscribe(result => {\r\n            console.log('result', result);\r\n        });\r\n    }\r\n\r\n    onLogin(): void {\r\n        this.router.navigate([AuthRoutes.Login]);\r\n    }\r\n\r\n    onLogout(): void {\r\n        this.auth.logout();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.getUserSub && this.getUserSub.unsubscribe();\r\n        // this.logoutSub.unsubscribe();\r\n        this.testDescSub && this.testDescSub.unsubscribe();\r\n    }\r\n}","<p>home works!</p>\r\n<h1 *ngIf=\"user\">Welcome {{ user?.firstName }}</h1>\r\n\r\n<button (click)=\"onGetError()\" class=\"btn__elevated\">\r\n    Get Error\r\n</button>\r\n<button (click)=\"onGetTestDescription()\" class=\"btn__elevated\">\r\n    Get Test Description\r\n</button>\r\n<button (click)=\"onLogout()\" class=\"btn__elevated\">\r\n    Logout\r\n</button>\r\n<button (click)=\"onLogin()\" class=\"btn__elevated\">\r\n    Login\r\n</button>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-secret',\r\n  template: `\r\n    <p>\r\n      secret works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class SecretComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-add-skill-card',\n    templateUrl: './add-skill-card.component.html',\n    styleUrls: ['./add-skill-card.component.scss']\n})\nexport class AddSkillCardComponent implements OnInit {\n\n    @Output() addSkillCardClick = new EventEmitter<void>();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    addSkillCardClickHandler(): void {\n        this.addSkillCardClick.emit();\n    }\n\n    onFocus(): void {\n        console.log('onFocus');\n    }\n\n}\n","<div tabindex=\"0\" (click)=\"addSkillCardClickHandler()\"\n     class=\"flex flex-col items-center justify-center h-full p-4 space-y-4 text-left text-indigo-500 bg-white border border-gray-100 rounded-lg shadow hover:border-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-500\">\n    <svg class=\"w-16 h-16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n    </svg>\n    <h3>Add New Skill</h3>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter, switchMap } from 'rxjs/operators';\n\nimport { SkillsService } from '../../services/skills.service';\nimport { ISkillCategory, ISkillSubCategory } from '../../skill.model';\n\n@Component({\n    selector: 'app-skill-add',\n    templateUrl: './skill-add.component.html',\n    styleUrls: ['./skill-add.component.scss']\n})\nexport class SkillAddComponent implements OnInit, OnDestroy {\n\n    title: string = 'Add New Skill';\n    description: string = 'Provide details about the skill.';\n\n    public form: FormGroup | undefined;\n    public categories: ISkillCategory[] = [];\n    public subCategories: ISkillSubCategory[] = [];\n    public formIsValid: boolean = false;\n    public isSubcategoryDisabled: boolean = true;\n\n    private _categoryValueChangeSub: Subscription | undefined;\n    private _formStatusChangeSub: Subscription | undefined;\n\n    get nameControl() { return this.form?.get('name') as FormControl; }\n    get categoryControl() { return this.form?.get('category') as FormControl; }\n    get subCategoryContorl() { return this.form?.get('subCategory') as FormControl; }\n\n    constructor(\n        private fb: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private skillService: SkillsService\n    ) { }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ categories }) => {\n            this.categories = categories;\n        });\n\n        this.createForm();\n        this.listenCategoryValueChange();\n        this.listenFormStatusChange();\n    }\n\n    addSkill(): void {\n        if (this.formIsValid && this.form?.valid) {\n\n        } else {\n            this.form?.markAllAsTouched();\n        }\n\n    }\n\n    createForm(): void {\n        this.form = this.fb.group({\n            name: ['', [Validators.required, Validators.minLength(3)]],\n            category: ['', [Validators.required]],\n            subCategory: ['', [Validators.required]],\n        });\n    }\n\n    listenCategoryValueChange(): void {\n        this._categoryValueChangeSub = this.categoryControl.valueChanges\n            .pipe(\n                filter(categoryId => !!categoryId),\n                switchMap(categoryId => this.skillService.getSubCategories(categoryId))\n            )\n            .subscribe(subCategories => {\n                this.subCategories = subCategories;\n                this.subCategoryContorl.patchValue('');\n                this.isSubcategoryDisabled = false;\n            });\n    }\n\n    listenFormStatusChange(): void {\n        this._formStatusChangeSub = this.form?.statusChanges\n            .pipe(\n                /**\n                 * The Debouncetime emits the last received value\n                 * from the source observable after a specified amount\n                 * of time has elapsed without any other value appearing\n                 * on the source Observable\n                 */\n                debounceTime(100)\n            )\n            .subscribe(formStatus => {\n                if (formStatus === \"INVALID\" || formStatus === \"PENDING\")\n                    this.formIsValid = false;\n                else\n                    this.formIsValid = true;\n            });\n    }\n\n    categoryChangeHandler(): void {\n        this.isSubcategoryDisabled = true;\n    }\n\n    onCloseClick() {\n        this.router.navigate(['/skills', { outlets: { details: null } }]);\n    }\n\n    ngOnDestroy(): void {\n        this._categoryValueChangeSub?.unsubscribe();\n        this._formStatusChangeSub?.unsubscribe();\n    }\n}\n","<app-secondary-header [title]=\"title\" [description]=\"description\" (closeClick)=\"onCloseClick()\"></app-secondary-header>\n\n<!-- <div class=\"py-5\">\n    <h3 class=\"text-lg font-medium leading-6 text-gray-900\">\n        Add New Skill\n    </h3>\n    <p class=\"max-w-2xl mt-1 text-sm text-gray-500\">\n        Provide details about the skill.\n    </p>\n</div> -->\n<div class=\"flex flex-col py-5 space-y-6 border-t border-gray-200\">\n    <ng-container *ngIf=\"form\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"addSkill()\" class=\"psr-form__form\">\n            <div>\n                <label class=\"psr-form__label\" for=\"name\">Skill name</label>\n                <input formControlName=\"name\" id=\"name\" name=\"name\" type=\"text\"\n                       class=\"psr-form__field psr-form__field--alt\" placeholder=\"\" />\n            </div>\n            <div>\n                <label class=\"psr-form__label\" for=\"category\">Category</label>\n                <select formControlName=\"category\" (change)=\"categoryChangeHandler()\" id=\"category\" name=\"category\"\n                        class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> -- </option>\n                    <option [value]=\"category.id\" *ngFor=\"let category of categories\">{{ category.name }}</option>\n                </select>\n            </div>\n            <div>\n                <label class=\"psr-form__label\" for=\"sub-category\">Sub category</label>\n                <select formControlName=\"subCategory\" [disableControl]=\"isSubcategoryDisabled\" id=\"sub-category\"\n                        name=\"sub-category\" class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> -- </option>\n                    <option [value]=\"subCategory.id\" *ngFor=\"let subCategory of subCategories\">{{ subCategory.name }}\n                    </option>\n                </select>\n            </div>\n            <div>\n                <button [disabled]=\"!formIsValid\" class=\"psr-form__button\" type=\"submit\">\n                    Add skill\n                </button>\n            </div>\n        </form>\n    </ng-container>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { IconEyeComponent } from '@psr/shared/icons/icon-eye.component';\nimport { IconPencilComponent } from '@psr/shared/icons/icon-pencil.component';\nimport { IconTrashComponent } from '@psr/shared/icons/icon-trash.component';\nimport { MenuItem } from '@psr/shared/menu.model';\n\nimport { ISkill } from '../../skill.model';\n\n@Component({\n    selector: 'app-skill-card',\n    templateUrl: './skill-card.component.html',\n    styleUrls: ['./skill-card.component.scss']\n})\nexport class SkillCardComponent implements OnInit {\n\n    @Input() skill: ISkill | undefined;\n    @Input() menuItems: MenuItem[] = [\n        { label: 'Skill detail', routerLink: [], isIconVisible: true, iconComponent: IconEyeComponent },\n        { label: 'Edit skill', routerLink: [], isIconVisible: true, iconComponent: IconPencilComponent },\n        { label: 'Delete skill', routerLink: [], isIconVisible: true, iconComponent: IconTrashComponent }\n    ];\n\n    @Output() skillCardClick = new EventEmitter<ISkill>();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    getCategoryInfo(skill: ISkill): string {\n        return `${skill.categoryName} / ${skill.subCategoryName}`;\n    }\n\n    skillCardClickHandler(skill: ISkill): void {\n        this.skillCardClick.emit(skill);\n    }\n\n    onMoreClick() {\n        console.log('More clicked');\n    }\n\n}\n","<ng-container *ngIf=\"skill\">\n    <!-- (click)=\"skillCardClickHandler(skill)\" -->\n    <div tabindex=\"0\"\n         class=\"flex flex-col justify-between h-full p-4 space-y-4 text-left border border-gray-200 rounded-lg hover:border-gray-300 focus-within:ring-1 focus-within:ring-inset focus-within:ring-indigo-500\">\n        <h3 class=\"text-lg font-medium text-gray-700\">{{ skill.name}} Employee Packet</h3>\n        <div class=\"skill-stats\">\n            <div class=\"skill-stats__info\">\n                <span\n                      class=\"mr-4 text-xs font-thin text-gray-500 transition-colors duration-200 hover:text-gray-900\">Employees</span>\n                <span class=\"text-xl font-normal text-gray-700\">{{ skill.employees }}</span>\n            </div>\n            <div class=\"skill-stats__info\">\n                <span\n                      class=\"mr-4 text-xs font-thin text-gray-500 transition-colors duration-200 hover:text-gray-900\">Team\n                    Competency</span>\n                <span class=\"text-xl font-normal text-gray-700\">{{ skill.teamCompetency }}</span>\n            </div>\n        </div>\n        <div class=\"flex items-center h-5\">\n            <span title=\"{{getCategoryInfo(skill)}}\"\n                  class=\"flex-1 pr-2 text-sm font-thin text-gray-500 truncate\">{{getCategoryInfo(skill)}}</span>\n            <div class=\"relative\">\n                <app-button-icon (buttonClick)=\"onMoreClick()\">\n                    <app-icon-dot-vertical></app-icon-dot-vertical>\n                </app-button-icon>\n                <div class=\"absolute right-0 w-56 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\"\n                     role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"menu-0-button\" tabindex=\"-1\">\n                    <div class=\"py-1\" role=\"none\">\n                        <!-- Active: \"bg-gray-100 text-gray-900\", Not Active: \"text-gray-700\" -->\n                        <ng-container *ngFor=\"let item of menuItems\">\n                            <app-link-icon [menuItem]=\"item\" class=\"text-gray-700 hover:text-indigo-700\">\n                            </app-link-icon>\n\n                        </ng-container>\n                        <!-- <app-icon-eye class=\"mr-3 opacity-70\"></app-icon-eye> -->\n                        <!-- <app-link-icon class=\"text-gray-700 hover:text-indigo-700\">\n                            <app-icon-pencil class=\"mr-3 opacity-70\"></app-icon-pencil>\n                        </app-link-icon>\n                        <app-link-icon class=\"text-gray-700 hover:text-indigo-700\">\n                            <app-icon-trash class=\"mr-3 opacity-70\"></app-icon-trash>\n                        </app-link-icon> -->\n                    </div>\n                </div>\n            </div>\n            <!-- <a>\n                <svg class=\"w-5 h-5 text-gray-500 transition-colors duration-200 hover:text-gray-900\" fill=\"none\"\n                     stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                          d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\">\n                    </path>\n                </svg>\n            </a> -->\n        </div>\n    </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ISkillCategory } from '../../skill.model';\n\n@Component({\n    selector: 'app-skill-category-card',\n    templateUrl: './skill-category-card.component.html',\n    styleUrls: ['./skill-category-card.component.scss']\n})\nexport class SkillCategoryCardComponent implements OnInit {\n\n    @Input() category: ISkillCategory | undefined;\n    @Output() onCardClick = new EventEmitter<ISkillCategory>();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    onCardClickHandler(category: ISkillCategory): void {\n        this.onCardClick.emit(category);\n    }\n\n}\n","<ng-container *ngIf=\"category\">\n    <div tabindex=\"0\" (click)=\"onCardClickHandler(category)\"\n         class=\"flex flex-col justify-between h-full p-4 space-y-4 text-left border border-gray-200 rounded-lg hover:border-gray-300 focus-within:ring-1 focus-within:ring-inset focus-within:ring-indigo-500\">\n        <h3 class=\"text-lg font-medium text-gray-700\">{{ category.name}}</h3>\n    </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { PageTitleService } from '../../services/page-title.service';\nimport { SkillMgtRoutes } from '../../skill-mgt-constants';\nimport { ISkillCategory } from '../../skill.model';\n\n@Component({\n    selector: 'app-skill-category-list',\n    templateUrl: './skill-category-list.component.html',\n    styleUrls: ['./skill-category-list.component.scss']\n})\nexport class SkillCategoryListComponent implements OnInit {\n    categories: ISkillCategory[] = [];\n\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private pageTitle: PageTitleService,\n    ) {\n        this.pageTitle.updatePageTitle(\"Skill Categories\");\n        this.pageTitle.updatePageSubTitle(\"Choose a skill category from the list below to see sub categories\");\n    }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ categories }) => {\n            this.categories = categories;\n        });\n    }\n\n    onCardClick(category: ISkillCategory) {\n        console.log(SkillMgtRoutes.ListSubcategories(category.id));\n        this.router.navigate(SkillMgtRoutes.ListSubcategories(category.id));\n    }\n\n}\n","<!-- <p>skill-category-list works!</p> -->\n<!-- { outlets: { primary: 'subcategories', details: null } } -->\n<!-- <a [routerLink]=\"['/skills', 'subcategories']\">Sub categories</a> -->\n<ng-container *ngFor=\"let category of categories\">\n    <app-skill-category-card (onCardClick)=\"onCardClick(category)\" [category]=\"category\"></app-skill-category-card>\n</ng-container>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ISkillCategory, ISkillSubCategory } from '../../skill.model';\n\n@Component({\n    selector: 'app-skill-filter',\n    templateUrl: './skill-filter.component.html',\n    styleUrls: ['./skill-filter.component.scss']\n})\nexport class SkillFilterComponent implements OnInit {\n\n    @Input() categories: ISkillCategory[] = [];\n\n    public subCategories: ISkillSubCategory[] = [];\n    public isSubcategoryDisabled = true;\n    public form: FormGroup | undefined;\n\n    constructor(\n        private fb: FormBuilder\n    ) { }\n\n    ngOnInit(): void {\n\n        this.form = this.fb.group({\n            category: ['', [Validators.required]],\n            subCategory: ['', [Validators.required]]\n        });\n    }\n\n    filterSkillsHandler(): void {\n\n    }\n\n}\n","<ng-container *ngIf=\"form\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"filterSkillsHandler()\">\n        <div class=\"flex justify-end space-x-4\">\n            <div>\n                <!-- <label class=\"psr-form__label\" for=\"category\">Category</label> -->\n                <select formControlName=\"category\" id=\"category\" name=\"category\"\n                        class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> Pick a category </option>\n                    <option [value]=\"category.id\" *ngFor=\"let category of categories\">{{ category.name }}</option>\n                </select>\n            </div>\n            <div>\n                <!-- <label class=\"psr-form__label\" for=\"sub-category\">Sub category</label> -->\n                <select formControlName=\"subCategory\" [disableControl]=\"isSubcategoryDisabled\" id=\"sub-category\"\n                        name=\"sub-category\" class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> Pick a subcategory </option>\n                    <option [value]=\"subCategory.id\" *ngFor=\"let subCategory of subCategories\">{{ subCategory.name }}\n                    </option>\n                </select>\n            </div>\n        </div>\n    </form>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { PageTitleService } from '../../services/page-title.service';\nimport { SkillMgtRoutes } from '../../skill-mgt-constants';\nimport { ISkill } from '../../skill.model';\n\n@Component({\n    selector: 'app-skill-list',\n    templateUrl: './skill-list.component.html',\n    styleUrls: ['./skill-list.component.scss']\n})\nexport class SkillListComponent implements OnInit {\n\n    skills: ISkill[] = [];\n\n    emptyStateTitle: string;\n    emptyStateDescription: string;\n    emptyStateButtonLabel: string;\n\n    get isSkillsVisible() {\n        return this.skills.length > 0;\n    }\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private pageTitle: PageTitleService\n    ) {\n        this.pageTitle.updatePageTitle(\"Skills\");\n        this.pageTitle.updatePageSubTitle(\"View list of skill, see skill details, and add new skill.\");\n\n        this.emptyStateTitle = 'No skills';\n        this.emptyStateDescription = 'Get started by adding skills to this sub category';\n        this.emptyStateButtonLabel = 'Add New Skill';\n    }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ skills }) => {\n            this.skills = skills; //.slice(0, 1);\n        });\n    }\n\n    addSkillCardClickHandler(): void {\n        this.router.navigate(SkillMgtRoutes.AddSkill());\n    }\n\n    skillCardClickHandler(skill: ISkill): void {\n        this.router.navigate(SkillMgtRoutes.ReadSkill(skill.id));\n    }\n\n}\n","<!-- { outlets: { primary: 'categories', details: null } } -->\n<!-- <a [routerLink]=\"['/skills', 'categories']\">Categories</a> -->\n<!-- { outlets: { primary: 'subcategories', details: null } } -->\n<!-- <a [routerLink]=\"['/skills', 'subcategories']\">Sub categories</a> -->\n<ng-container *ngIf=\"isSkillsVisible\">\n    <app-add-skill-card (addSkillCardClick)=\"addSkillCardClickHandler()\"></app-add-skill-card>\n    <ng-container *ngFor=\"let skill of skills\">\n        <app-skill-card (skillCardClick)=\"skillCardClickHandler($event)\" [skill]=\"skill\"></app-skill-card>\n    </ng-container>\n</ng-container>\n\n<app-empty-state *ngIf=\"!isSkillsVisible\" [title]=\"emptyStateTitle\" [description]=\"emptyStateDescription\"\n                 [buttonLabel]=\"emptyStateButtonLabel\">\n</app-empty-state>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ISkill } from '../../skill.model';\n\n@Component({\n    selector: 'app-skill-read',\n    templateUrl: './skill-read.component.html',\n    styleUrls: ['./skill-read.component.scss']\n})\nexport class SkillReadComponent implements OnInit {\n\n    skill: ISkill | undefined;\n\n    title: string = 'Skill Information';\n    description: string = 'Detils of the skill.';\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ skill }) => {\n            this.skill = skill;\n        });\n    }\n\n    onCloseClick() {\n        this.router.navigate(['/skills', { outlets: { details: null } }]);\n    }\n}\n","<app-secondary-header [title]=\"title\" [description]=\"description\" (closeClick)=\"onCloseClick()\"></app-secondary-header>\n<ng-container *ngIf=\"skill\">\n    <div class=\"flex flex-col py-5 space-y-6\">\n        <app-read-field [fieldLabel]=\"'Skill name'\" [fieldValue]=\"skill.name\"></app-read-field>\n        <app-read-field [fieldLabel]=\"'Category'\" [fieldValue]=\"skill.categoryName\"></app-read-field>\n        <app-read-field [fieldLabel]=\"'Sub category'\" [fieldValue]=\"skill.subCategoryName\"></app-read-field>\n        <app-read-field [fieldLabel]=\"'Employees'\" [fieldValue]=\"skill.employees\"></app-read-field>\n        <app-read-field [fieldLabel]=\"'Team competency'\" [fieldValue]=\"skill.teamCompetency\"></app-read-field>\n    </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ISkillSubCategory } from '../../skill.model';\n\n@Component({\n    selector: 'app-skill-subcategory-card',\n    templateUrl: './skill-subcategory-card.component.html',\n    styleUrls: ['./skill-subcategory-card.component.scss']\n})\nexport class SkillSubcategoryCardComponent implements OnInit {\n\n    @Input() subcategory: ISkillSubCategory | undefined;\n    @Output() onCardClick = new EventEmitter<ISkillSubCategory>();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    onCardClickHandler(subcategory: ISkillSubCategory): void {\n        this.onCardClick.emit(subcategory);\n    }\n}\n","<ng-container *ngIf=\"subcategory\">\n    <div tabindex=\"0\" (click)=\"onCardClickHandler(subcategory)\"\n         class=\"flex flex-col justify-between h-full p-4 space-y-4 text-left border border-gray-200 rounded-lg hover:border-gray-300 focus-within:ring-1 focus-within:ring-inset focus-within:ring-indigo-500\">\n        <h3 class=\"text-lg font-medium text-gray-700\">{{ subcategory.name}}</h3>\n    </div>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { PageTitleService } from '../../services/page-title.service';\nimport { SkillMgtRoutes } from '../../skill-mgt-constants';\nimport { ISkillSubCategory } from '../../skill.model';\n\n@Component({\n    selector: 'app-skill-subcategory-list',\n    templateUrl: './skill-subcategory-list.component.html',\n    styleUrls: ['./skill-subcategory-list.component.scss']\n})\nexport class SkillSubcategoryListComponent implements OnInit {\n    subcategories: ISkillSubCategory[] = [];\n\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private pageTitle: PageTitleService,\n    ) {\n        this.pageTitle.updatePageTitle(\"Skill Subcategories\");\n        this.pageTitle.updatePageSubTitle(\"Choose a skill subcategory from the list below to see skills\");\n    }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ subcategories }) => {\n            this.subcategories = subcategories;\n        });\n    }\n\n    onCardClick(category: ISkillSubCategory) {\n        // console.log(SkillMgtRoutes.ListSubcategories(category.id));\n        // console.log(SkillMgtRoutes.ListSkills(category.categoryId, category.id));\n        this.router.navigate(SkillMgtRoutes.ListSkills(category.categoryId, category.id));\n    }\n\n}\n","<!-- <p>skill-subcategory-list works!</p> -->\n<!-- { outlets: { primary: 'list', details: null } } -->\n<!-- <a [routerLink]=\"['/skills', 'list']\">List</a><br /> -->\n<!-- { outlets: { primary: 'categories', details: null } } -->\n<!-- <a [routerLink]=\"['/skills', 'categories']\">Categories</a> -->\n<ng-container *ngFor=\"let subcategory of subcategories\">\n    <app-skill-subcategory-card (onCardClick)=\"onCardClick(subcategory)\" [subcategory]=\"subcategory\"></app-skill-subcategory-card>\n</ng-container>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SecondaryHeaderService } from '@psr/shared/secondary-header/secondary-header.service';\nimport { IBreadcrumb } from '@psr/widgets/breadcrumb/breadcrumb.model';\nimport { BreadcrumbService } from '@psr/widgets/breadcrumb/breadcrumb.service';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { PageTitleService } from '../services/page-title.service';\nimport { ISkillCategory } from '../skill.model';\n\n@Component({\n    selector: 'app-index',\n    template: `\n    <!-- <app-page-heading-layout>\n        <h1 class=\"text-3xl font-bold text-gray-900\">\n          {{ pageTitle$ | async}}\n        </h1>\n    </app-page-heading-layout> -->\n    <app-two-column-layout [isSecondaryContentVisible]=\"isSecondaryContentVisible\" (hamburgerMenuClick)=\"hamburgerMenuClickHandler()\">\n    <!-- border-2 border-gray-200 border-dashed rounded-lg -->\n    <!-- flex justify-between items-center -->\n        <app-page-heading x-size=\"large\" x-color=\"black\" [title]=\"pageTitle$ | async\" [description]=\"pageSubTitle$ | async\"></app-page-heading>\n        <div header-content class=\"\">\n            <h1 class=\"text-3xl font-bold text-gray-900\">\n              {{ pageTitle$ | async}}\n            </h1>\n            <p id=\"message-heading\" class=\"text-lg font-normal text-gray-900\">\n              {{ pageSubTitle$ | async}}\n            </p>\n            <!-- <app-skill-filter [categories]=\"categories\"></app-skill-filter> -->\n        </div>\n        <app-breadcrumb breadcrumb-content></app-breadcrumb>\n        <router-outlet main-content\n                (activate)=\"onPrimaryRouterOutletActivate()\"\n                (deactivate)=\"onPrimaryRouterOutletDeactivate()\"></router-outlet>\n        <router-outlet secondary-content\n                (activate)=\"onDetailsRouterOutletActivate()\"\n                (deactivate)=\"onDetailsRouterOutletDeactivate()\"\n                name=\"details\"></router-outlet>\n    </app-two-column-layout>\n  `,\n    styles: [\n        `\n      :host {\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 0%;\n        height: 0px;\n        @apply border-l-2 border-r-2 border-gray-200 border-dashed;\n      }\n    `\n    ],\n    providers: [PageTitleService]\n})\nexport class IndexComponent implements OnInit, OnDestroy {\n\n    pageTitle$: Observable<string>;\n    pageSubTitle$: Observable<string>;\n    categories: ISkillCategory[] = [];\n\n    isSecondaryContentVisible: boolean = false;\n\n    private _routerEventSub!: Subscription;\n    private _routeDataSub!: Subscription;\n\n    private _breadcrumbs$: Observable<IBreadcrumb[]>;\n\n    constructor(\n        private pageTitle: PageTitleService,\n        private route: ActivatedRoute,\n        private router: Router,\n        private breadcrumbService: BreadcrumbService,\n        private secondaryHeaderService: SecondaryHeaderService\n    ) {\n        this.pageTitle$ = this.pageTitle.pageTitle$;\n        this.pageSubTitle$ = this.pageTitle.pageSubTitle$;\n        this._breadcrumbs$ = this.breadcrumbService;\n    }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ resolverResult: { categories } }) => {\n            this.categories = categories;\n        });\n\n        this.secondaryHeaderService.isCloseClicked$.subscribe((isCloseClicked: boolean) => {\n            if (isCloseClicked) {\n                this.router.navigate(['/skills', { outlets: { details: null } }]);\n            }\n        });\n    }\n\n    onDetailsRouterOutletActivate(): void {\n        this.isSecondaryContentVisible = true;\n        // console.log('activate');\n    }\n\n    onDetailsRouterOutletDeactivate(): void {\n        this.isSecondaryContentVisible = false;\n    }\n    onPrimaryRouterOutletActivate(): void {\n        // console.log('activate');\n    }\n\n    onPrimaryRouterOutletDeactivate(): void {\n        // console.log('deactivate');\n    }\n\n    hamburgerMenuClickHandler(): void {\n        // console.log('hamburgerMenuClickHandler');\n    }\n    ngOnDestroy(): void {\n        this._routerEventSub?.unsubscribe();\n        this._routeDataSub?.unsubscribe();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { IResolverResult } from '../skill.model';\nimport { SkillsService } from './skills.service';\n\n@Injectable()\nexport class IndexResolver implements Resolve<IResolverResult> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IResolverResult> {\n        return this.skillService.getCategories().pipe(\n            map(response => ({\n                \"categories\": response\n            }))\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class PageTitleService {\n\n    private _pageTitle$ = new BehaviorSubject<string>('Skill Management');\n    private _pageSubTitle$ = new BehaviorSubject<string>('Manage skill categories, subcategories, and skills');\n\n    get pageTitle$() {\n        return this._pageTitle$.asObservable();\n    }\n    get pageSubTitle$() {\n        return this._pageSubTitle$.asObservable();\n    }\n\n    updatePageTitle(title: string) {\n        this._pageTitle$.next(title);\n    }\n\n    updatePageSubTitle(title: string) {\n        this._pageSubTitle$.next(title);\n    }\n\n    constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\nimport { ISkillCategory } from '../skill.model';\nimport { SkillsService } from './skills.service';\n\n@Injectable()\nexport class SkillAddResolver implements Resolve<ISkillCategory[]> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkillCategory[]> {\n        const categories = route.parent?.data?.resolverResult?.categories;\n        return categories\n            ? of(categories)\n            : this.skillService.getCategories();\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { ISkillCategory } from '../skill.model';\r\nimport { SkillsService } from './skills.service';\r\n\r\n@Injectable()\r\nexport class SkillCategoryResolver implements Resolve<ISkillCategory[]> {\r\n    constructor(private skillService: SkillsService) { }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkillCategory[]> {\r\n        const categories = route.parent?.data?.resolverResult?.categories;\r\n        return categories\r\n            ? of(categories)\r\n            : this.skillService.getCategories();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\n\nimport { ISkill } from '../skill.model';\nimport { SkillsService } from './skills.service';\n\n@Injectable()\nexport class SkillListResolver implements Resolve<ISkill[]> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkill[]> {\n        return of(route.params).pipe(\n            map(({ categoryId, subcategoryId }) => ({ categoryId, subcategoryId })),\n            switchMap(params => this.skillService.getSkillsByCategoryAndSubcategory(params.categoryId, params.subcategoryId)),\n            take(1),\n            // shareReplay(1)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { pluck, switchMap, take } from 'rxjs/operators';\n\nimport { SkillsService } from './skills.service';\n\n@Injectable()\nexport class SkillSubcategoryResolver implements Resolve<any> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        return of(route.params).pipe(\n            pluck('categoryId'),\n            switchMap(id => this.skillService.getSubCategories(id)),\n            take(1),\n            // shareReplay(1)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { pluck, switchMap, take } from 'rxjs/operators';\n\nimport { ISkill } from '../skill.model';\nimport { SkillsService } from './skills.service';\n\n@Injectable()\nexport class SkillResolver implements Resolve<ISkill> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkill> {\n        return of(route.params).pipe(\n            pluck('id'),\n            switchMap(id => this.skillService.getSkill(id)),\n            take(1),\n            // shareReplay(1)\n        );\n        // return this.skillService.getSkill();\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { APP_CONFIG_TOKEN, IAppConfig } from '@psr/core/app.config';\nimport { Observable } from 'rxjs';\n\nimport { SkillMgtEndpoints } from '../skill-mgt-constants';\nimport { ISkill, ISkillCategory, ISkillSubCategory } from '../skill.model';\n\n@Injectable()\nexport class SkillsService {\n\n    constructor(\n        private http: HttpClient,\n        @Inject(APP_CONFIG_TOKEN) private appConfig: IAppConfig\n    ) { }\n\n    public getSkills(): Observable<ISkill[]> {\n        return this.http.get<ISkill[]>(SkillMgtEndpoints.GetSkills(this.appConfig)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getSkillsByCategoryAndSubcategory(categoryId: string, subcategoryId: string): Observable<ISkill[]> {\n        return this.http.get<ISkill[]>(SkillMgtEndpoints.GetSkillsByCategoryAndSubcategory(this.appConfig, categoryId, subcategoryId)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getSkill(id: string): Observable<ISkill> {\n        return this.http.get<ISkill>(SkillMgtEndpoints.GetSkill(this.appConfig, id)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getCategories(): Observable<ISkillCategory[]> {\n        return this.http.get<ISkillCategory[]>(SkillMgtEndpoints.GetSkillCategories(this.appConfig)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getSubCategories(categoryId: string): Observable<ISkillSubCategory[]> {\n        return this.http.get<ISkillSubCategory[]>(SkillMgtEndpoints.GetSkillSubCategories(this.appConfig, categoryId)).pipe(\n            // shareReplay()\n        );\n    }\n}\n","import { Provider } from '@angular/core';\r\nimport { BREADCRUMB_CONFIG_TOKEN } from '@psr/widgets/breadcrumb/breadcrumb.service';\r\n\r\nexport const skillMgtBreadcrumbConfigProvider: Provider = {\r\n    provide: BREADCRUMB_CONFIG_TOKEN,\r\n    useValue: [\r\n        {\r\n            name: \"categories\",\r\n            label: \"Categories\",\r\n            path: '/skills/categories',\r\n            route: [\"/skills\", { outlets: { primary: 'categories', details: null } }],\r\n            newRoute: '/skills/categories'\r\n        },\r\n        {\r\n            name: \"subcategories\",\r\n            label: \"Sub categories\",\r\n            path: '/skills/subcategories',\r\n            route: [\"/skills\", { outlets: { primary: 'subcategories', details: null } }],\r\n            newRoute: '/skills/categories/:categoryId/subcategories'\r\n        },\r\n        {\r\n            name: \"list\",\r\n            label: \"Skills\",\r\n            path: '/skills/list',\r\n            route: [\"/skills\", { outlets: { primary: 'list', details: null } }],\r\n            newRoute: '/skills/categories/:categoryId/subcategories/:subcategoryId/list'\r\n        },\r\n    ]\r\n}","import { IAppConfig } from '@core/app.config';\r\n\r\nexport interface ISkillMgtEndpoints {\r\n    readonly GetSkills: (config: IAppConfig) => string;\r\n    readonly GetSkillsByCategoryAndSubcategory: (config: IAppConfig, categoryId: string, subcategoryId: string) => string;\r\n    readonly GetSkill: (config: IAppConfig, id: string) => string;\r\n    readonly GetSkillCategories: (config: IAppConfig) => string;\r\n    readonly GetSkillSubCategories: (config: IAppConfig, categoryId: string) => string;\r\n}\r\n\r\nexport interface ISkillMgtRoutes {\r\n    readonly ListSkills: (categoryId: string, subcategoryId: string) => any[];\r\n    readonly ReadSkill: (id: string) => any[];\r\n    readonly AddSkill: () => any[];\r\n    readonly ListSubcategories: (id: string) => any[];\r\n}\r\n\r\nlet appPaths: ISkillMgtEndpoints = {\r\n    GetSkills: (config: IAppConfig) => config.getUrl(`skills`),\r\n    GetSkillsByCategoryAndSubcategory: (config: IAppConfig, categoryId: string, subcategoryId: string) => {\r\n        return config.getUrl(`skills/categories/${categoryId}/subcategories/${subcategoryId}/list`);\r\n    },\r\n    GetSkill: (config: IAppConfig, id: string) => config.getUrl(`skills/${id}`),\r\n    GetSkillCategories: (config: IAppConfig) => config.getUrl(`skills/categories`),\r\n    GetSkillSubCategories: (config: IAppConfig, categoryId: string) => config.getUrl(`skills/categories/${categoryId}/subcategories`),\r\n};\r\n\r\nlet appRoutes: ISkillMgtRoutes = {\r\n    ListSkills: (categoryId: string, subcategoryId: string) => [`/skills`, `categories`, `${categoryId}`, `subcategories`, `${subcategoryId}`, `list`],\r\n    // ReadSkill: (id: string) => [`/skills`, { outlets: { details: ['read', id] } }],\r\n    ReadSkill: (id: string) => [`/skills`, { outlets: { details: ['read', id] } }],\r\n    AddSkill: () => [`/skills`, { outlets: { details: ['add'] } }],\r\n    ListSubcategories: (id: string) => [`/skills`, `categories`, `${id}`, `subcategories`],\r\n};\r\n\r\n\r\n\r\n\r\nexport const SkillMgtEndpoints: ISkillMgtEndpoints = appPaths;\r\nexport const SkillMgtRoutes: ISkillMgtRoutes = appRoutes;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SkillAddComponent } from './components/skill-add/skill-add.component';\nimport { SkillCategoryListComponent } from './components/skill-category-list/skill-category-list.component';\nimport { SkillListComponent } from './components/skill-list/skill-list.component';\nimport { SkillReadComponent } from './components/skill-read/skill-read.component';\nimport { SkillSubcategoryListComponent } from './components/skill-subcategory-list/skill-subcategory-list.component';\nimport { IndexComponent } from './pages/index.component';\nimport { IndexResolver } from './services/index.resolver';\nimport { SkillAddResolver } from './services/skill-add.resolver';\nimport { SkillCategoryResolver } from './services/skill-category.resolver';\nimport { SkillListResolver } from './services/skill-list.resolver';\nimport { SkillSubcategoryResolver } from './services/skill-subcategory.resolver';\nimport { SkillResolver } from './services/skill.resolver';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: IndexComponent,\n        children: [\n            { path: 'categories', component: SkillCategoryListComponent, resolve: { categories: SkillCategoryResolver }, data: { breadcrumb: 'categories' } },\n            { path: 'categories/:categoryId/subcategories', component: SkillSubcategoryListComponent, resolve: { subcategories: SkillSubcategoryResolver }, data: { breadcrumb: 'subcategories' } },\n            { path: 'categories/:categoryId/subcategories/:subcategoryId/list', component: SkillListComponent, resolve: { skills: SkillListResolver }, data: { breadcrumb: 'list' } },\n            { path: 'read/:id', component: SkillReadComponent, outlet: 'details', resolve: { skill: SkillResolver } },\n            { path: 'add', component: SkillAddComponent, outlet: 'details', resolve: { categories: SkillAddResolver } },\n            { path: '**', redirectTo: 'categories', pathMatch: 'full' }\n        ],\n        resolve: { resolverResult: IndexResolver }\n    }\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SkillMgtRoutingModule { }\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '@shared/shared.module';\nimport { WidgetsModule } from '@widgets/widgets.module';\n\nimport { AddSkillCardComponent } from './components/add-skill-card/add-skill-card.component';\nimport { SkillAddComponent } from './components/skill-add/skill-add.component';\nimport { SkillCardComponent } from './components/skill-card/skill-card.component';\nimport { SkillCategoryCardComponent } from './components/skill-category-card/skill-category-card.component';\nimport { SkillCategoryListComponent } from './components/skill-category-list/skill-category-list.component';\nimport { SkillFilterComponent } from './components/skill-filter/skill-filter.component';\nimport { SkillListComponent } from './components/skill-list/skill-list.component';\nimport { SkillReadComponent } from './components/skill-read/skill-read.component';\nimport { SkillSubcategoryListComponent } from './components/skill-subcategory-list/skill-subcategory-list.component';\nimport { IndexComponent } from './pages/index.component';\nimport { IndexResolver } from './services/index.resolver';\nimport { PageTitleService } from './services/page-title.service';\nimport { SkillAddResolver } from './services/skill-add.resolver';\nimport { SkillCategoryResolver } from './services/skill-category.resolver';\nimport { SkillListResolver } from './services/skill-list.resolver';\nimport { SkillSubcategoryResolver } from './services/skill-subcategory.resolver';\nimport { SkillResolver } from './services/skill.resolver';\nimport { SkillsService } from './services/skills.service';\nimport { skillMgtBreadcrumbConfigProvider as SkillMgtBreadcrumbConfigProvider } from './skill-mgt-breadcrumb-config';\nimport { SkillMgtRoutingModule } from './skill-mgt-routing.module';\nimport { SkillSubcategoryCardComponent } from './components/skill-subcategory-card/skill-subcategory-card.component';\n\n\n\n@NgModule({\n    declarations: [\n        SkillListComponent,\n        IndexComponent,\n        SkillCardComponent,\n        AddSkillCardComponent,\n        SkillReadComponent,\n        SkillAddComponent,\n        SkillFilterComponent,\n        SkillCategoryListComponent,\n        SkillSubcategoryListComponent,\n        SkillCategoryCardComponent,\n        SkillSubcategoryCardComponent\n    ],\n    imports: [\n        SharedModule,\n        SkillMgtRoutingModule,\n        HttpClientModule,\n        ReactiveFormsModule,\n        WidgetsModule\n    ],\n    providers: [\n        PageTitleService,\n\n        SkillsService,\n        SkillListResolver,\n        SkillResolver,\n        SkillAddResolver,\n        IndexResolver,\n        SkillCategoryResolver,\n        SkillSubcategoryResolver,\n\n        SkillMgtBreadcrumbConfigProvider\n    ]\n})\nexport class SkillManagementModule { }\n","import { EventEmitter } from '@angular/core';\r\n\r\nexport interface IAlertComponent {\r\n    alert: Alert | undefined;\r\n    closeAlert: EventEmitter<boolean>;\r\n}\r\n\r\nexport class Alert {\r\n    id: Symbol = Symbol('alert');\r\n    type: AlertType = AlertType.Info;\r\n    title: string = '';\r\n    message: string = '';\r\n    actions: IAlertAction[] = [];\r\n    autoClose: boolean = true;\r\n    timeToClose: number = 5;\r\n\r\n    constructor(init: Partial<Alert>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport interface IAlertAction {\r\n    name: string;\r\n    route: any[] | string;\r\n}\r\n\r\nexport interface IAlertOptions {\r\n    autoClose: boolean;\r\n}\r\n\r\nexport enum AlertType {\r\n    Success,\r\n    Error,\r\n    Info,\r\n    Warning\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AlertContainerComponent } from './components/alert-container.component';\r\nimport { AlertComponent } from './components/alert.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [AlertContainerComponent, AlertComponent],\r\n    imports: [CommonModule],\r\n    exports: [AlertContainerComponent],\r\n    providers: [AlertModule]\r\n})\r\nexport class AlertModule { }\r\n","import { Component, ComponentFactoryResolver, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ElementHostDirective } from '../../../shared/directives/element-host.directive';\r\nimport { Alert, IAlertComponent } from '../alert.model';\r\nimport { AlertService } from '../services/alert.service';\r\nimport { AlertComponent } from './alert.component';\r\n\r\n@Component({\r\n    selector: 'app-alert-container',\r\n    template: `\r\n      <ng-template appElementHost></ng-template>\r\n  `,\r\n    styles: [`\r\n        :host {\r\n            @apply flex flex-row flex-wrap fixed top-0 right-0 px-4 py-6 sm:p-6 max-w-sm items-end sm:items-end pointer-events-none;\r\n            @apply max-w-sm w-full z-20;\r\n        }\r\n    `\r\n    ],\r\n    // providers: [AlertService]\r\n})\r\nexport class AlertContainerComponent implements OnInit, OnDestroy {\r\n\r\n    @ViewChild(ElementHostDirective, { static: true }) alertHost!: ElementHostDirective;\r\n    alertSubscription!: Subscription;\r\n\r\n    constructor(\r\n        private resolver: ComponentFactoryResolver,\r\n        private alertService: AlertService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.alertSubscription = this.alertService.onAlert().subscribe(alert => {\r\n            this.addAlert(alert);\r\n        })\r\n    }\r\n\r\n    private addAlert(alert: Alert) {\r\n        const container = this.alertHost.viewContainerRef;\r\n        const componentFactory = this.resolver.resolveComponentFactory(AlertComponent);\r\n        // container.clear();\r\n\r\n        const componentRef = container.createComponent<IAlertComponent>(componentFactory);\r\n        componentRef.instance.alert = alert;\r\n\r\n        componentRef.instance.closeAlert.subscribe(status => {\r\n            status && componentRef.destroy();\r\n            // status && container.clear();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.alertSubscription.unsubscribe();\r\n    }\r\n\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    TemplateRef,\r\n    ViewChild,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Alert, AlertService, AlertType, IAlertAction, IAlertComponent } from '@shared/alert';\r\n\r\n@Component({\r\n    selector: 'app-alert',\r\n    templateUrl: './alert.component.html',\r\n    styleUrls: ['./alert.component.scss']\r\n})\r\nexport class AlertComponent implements OnInit, IAlertComponent, OnDestroy, AfterViewInit {\r\n\r\n    @Input() alert: Alert | undefined = undefined;\r\n    @Output() closeAlert = new EventEmitter<boolean>();\r\n\r\n    @ViewChild('successIcon', { read: TemplateRef }) successIconRef!: TemplateRef<any>;\r\n    @ViewChild('errorIcon', { read: TemplateRef }) errorIconRef!: TemplateRef<any>;\r\n    @ViewChild('infoIcon', { read: TemplateRef }) infoIconRef!: TemplateRef<any>;\r\n    @ViewChild('warningIcon', { read: TemplateRef }) warningIconRef!: TemplateRef<any>;\r\n\r\n    alertIconRef!: TemplateRef<any>;\r\n\r\n\r\n    private _timeout: any;\r\n\r\n    constructor(private alertService: AlertService, private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n        this.alert?.autoClose && this.startAutoClose();\r\n        switch (this.alert?.type) {\r\n            case AlertType.Success:\r\n                this.alertIconRef = this.successIconRef;\r\n                break;\r\n            case AlertType.Error:\r\n                this.alertIconRef = this.errorIconRef;\r\n                break;\r\n            case AlertType.Info:\r\n                this.alertIconRef = this.infoIconRef;\r\n                break;\r\n            case AlertType.Warning:\r\n                this.alertIconRef = this.warningIconRef;\r\n                break;\r\n            default:\r\n                throw new Error('Invalid alert type');\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    onAction(action: IAlertAction) {\r\n        this.router.navigate([action.route]);\r\n        this.startAutoClose();\r\n    }\r\n\r\n    onCloseAlert() {\r\n        this.closeAlert.emit(true);\r\n        this.alertService.closeAlert(this.alert?.id!);\r\n    }\r\n\r\n    startAutoClose() {\r\n        this._timeout = setTimeout(() => {\r\n            this.onCloseAlert();\r\n        }, (this.alert?.timeToClose || 0) * 1000);\r\n    }\r\n\r\n    cssClass() {\r\n        const alertType = this.alert ? this.alert.type : AlertType.Info;\r\n\r\n        const classes = ['flex items-end flex-1 max-w-sm pointer-events-none sm:items-start'];\r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert--success',\r\n            [AlertType.Error]: 'alert--error',\r\n            [AlertType.Info]: 'alert--info',\r\n            [AlertType.Warning]: 'alert--warning',\r\n        }\r\n\r\n        classes.push(alertTypeClass[alertType]);\r\n\r\n        return classes.join(' ');\r\n    }\r\n\r\n    hasActions() {\r\n        return !!this.alert?.actions && this.alert.actions.length > 0;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        clearTimeout(this._timeout);\r\n    }\r\n\r\n}\r\n","<div *ngIf=\"alert\" aria-live=\"assertive\" class=\"{{ cssClass() }}\">\r\n    <!-- <div class=\"flex flex-col items-center w-full space-y-4 sm:items-end\"> -->\r\n    <div class=\"flex flex-col items-center w-full max-w-sm space-y-4 sm:items-end\">\r\n        <!-- w-full max-w-sm overflow-hidden bg-red-900 rounded-lg shadow-lg pointer-events-auto ring-1 ring-black ring-opacity-10 -->\r\n        <div class=\"alert__wrapper\">\r\n            <div class=\"p-4\">\r\n                <div class=\"flex items-start\">\r\n                    <div class=\"flex-shrink-0\">\r\n                        <ng-container *ngIf=\"alertIconRef\">\r\n                            <ng-container *ngTemplateOutlet=\"alertIconRef\"></ng-container>\r\n                        </ng-container>\r\n                        <!-- <ng-container *ngIf=\"alert?.type\" [ngSwitch]=\"alert?.type\">\r\n                            <ng-container *ngSwitchCase=\"0\" [ngTemplateOutlet]=\"successIcon\"></ng-container>\r\n                            <ng-container *ngSwitchCase=\"1\" [ngTemplateOutlet]=\"errorIcon\"></ng-container>\r\n                            <ng-container *ngSwitchCase=\"2\" [ngTemplateOutlet]=\"infoIcon\"></ng-container>\r\n                            <ng-container *ngSwitchCase=\"3\" [ngTemplateOutlet]=\"warningIcon\"></ng-container>\r\n                        </ng-container> -->\r\n                    </div>\r\n                    <div class=\"ml-3 w-0 flex-1 pt-0.5\">\r\n                        <p class=\"alert__title\">\r\n                            <!-- text-sm font-medium text-white -->\r\n                            {{alert?.title}}\r\n                        </p>\r\n                        <p class=\"alert__message\">\r\n                            <!-- mt-1 text-sm text-red-200 -->\r\n                            {{alert?.message}}\r\n                        </p>\r\n                        <div *ngIf=\"hasActions()\" class=\"flex mt-3 space-x-7\">\r\n                            <!-- text-sm font-medium text-white bg-transparent rounded-md hover:text-red-200 focus:outline-none -->\r\n                            <button *ngFor=\"let action of alert?.actions\" (click)=\"onAction(action)\" type=\"button\"\r\n                                    class=\"alert__btn-action\">\r\n                                {{action.name}}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"flex flex-shrink-0 ml-4\">\r\n                        <button (click)=\"onCloseAlert()\" class=\"alert__btn-close\">\r\n                            <span class=\"sr-only\">Close</span>\r\n                            <!-- Heroicon name: solid/x -->\r\n                            <svg class=\"w-5 h-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"\r\n                                 fill=\"currentColor\" aria-hidden=\"true\">\r\n                                <path fill-rule=\"evenodd\"\r\n                                      d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                                      clip-rule=\"evenodd\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #successIcon>\r\n    <svg class=\"w-6 h-6 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n         stroke=\"currentColor\" aria-hidden=\"true\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n    </svg>\r\n</ng-template>\r\n<ng-template #errorIcon>\r\n    <svg class=\"w-6 h-6 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n         stroke=\"currentColor\" aria-hidden=\"true\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n    </svg>\r\n</ng-template>\r\n<ng-template #infoIcon>\r\n    <svg class=\"w-6 h-6 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n         stroke=\"currentColor\" aria-hidden=\"true\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n    </svg>\r\n</ng-template>\r\n<ng-template #warningIcon>\r\n    <svg class=\"w-6 h-6 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n         stroke=\"currentColor\" aria-hidden=\"true\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\r\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\">\r\n        </path>\r\n    </svg>\r\n</ng-template>\r\n","export * from './components/alert-container.component';\r\nexport * from './components/alert.component';\r\nexport * from './services/alert.service';\r\nexport * from './alert.model';\r\nexport * from './alert.module';","import { Injectable } from '@angular/core';\r\nimport { EnvironmentService } from '@env/environment.service';\r\nimport { Alert, AlertType, IAlertAction, IAlertOptions } from '@shared/alert';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n    private _subject = new Subject<Alert>();\r\n    private _onCloseSubject = new Subject<Symbol>();\r\n    private _defaultId = 'default-alert';\r\n\r\n    constructor(private env: EnvironmentService) { }\r\n\r\n    success(title: string, message: string, actions: IAlertAction[] = [], options: IAlertOptions = this.env.alertOptions): Symbol {\r\n        return this.sendAlert(new Alert({ ...options, type: AlertType.Success, title, message, actions }));\r\n    }\r\n\r\n    error(title: string, message: string, actions: IAlertAction[] = [], options: IAlertOptions = this.env.alertOptions): Symbol {\r\n        return this.sendAlert(new Alert({ ...options, type: AlertType.Error, title, message, actions }));\r\n    }\r\n\r\n    info(title: string, message: string, actions: IAlertAction[] = [], options: IAlertOptions = this.env.alertOptions): Symbol {\r\n        return this.sendAlert(new Alert({ ...options, type: AlertType.Info, title, message, actions }));\r\n    }\r\n\r\n    warn(title: string, message: string, actions: IAlertAction[] = [], options: IAlertOptions = this.env.alertOptions): Symbol {\r\n        return this.sendAlert(new Alert({ ...options, type: AlertType.Warning, title, message, actions }));\r\n    }\r\n\r\n    sendAlert(alert: Alert): Symbol {\r\n        alert.id = alert.id || Symbol('alert');\r\n\r\n        //TODO: ExpressionChangedAfterItHasBeenCheckedError\r\n        this._subject.next(alert);\r\n        return alert.id;\r\n    }\r\n\r\n    closeAlert(alertSymbol: Symbol) {\r\n        this._onCloseSubject.next(alertSymbol);\r\n    }\r\n\r\n    onAlert(): Observable<Alert> {\r\n        return this._subject.asObservable();\r\n    }\r\n\r\n    onCloseAlert(alertSymbol: Symbol): Observable<Symbol> {\r\n        return this._onCloseSubject.asObservable().pipe(filter(x => x === alertSymbol));\r\n    }\r\n}\r\n","import { AfterContentInit, Component, EventEmitter, Input, NgModule, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-button-icon',\n    template: `\n        <!-- text-indigo-800  rounded-md hover:text-indigo-900 focus:text-indigo-900 -->\n        <button (click)=\"onClick($event)\" type=\"button\" class=\"bg-transparent\">\n            <span class=\"sr-only\">{{ ariaLabel }}</span>\n            <ng-content></ng-content>\n            <!-- <ng-template [ngTemplateOutlet]=\"outlet\"></ng-template> -->\n        </button>\n  `,\n    styles: [\n        `\n      :host {\n        @apply flex items-center h-7 outline-none;\n      }\n    `\n    ]\n})\nexport class ButtonIconComponent implements OnInit, AfterContentInit {\n\n    @Input() ariaLabel: string = '';\n    @Output() buttonClick = new EventEmitter();\n\n    // @ContentChild(IconCloseComponent) icon!: IconCloseComponent;\n\n    ngOnInit(): void { }\n\n    ngAfterContentInit(): void {\n        /* if (!(this.icon instanceof IconCloseComponent))\n            console.error('Invalid component projected in ButtonIcon component'); */\n    }\n\n    onClick(e: any) {\n        this.buttonClick.emit();\n    }\n}\n\n@NgModule({\n    declarations: [ButtonIconComponent],\n    exports: [ButtonIconComponent]\n})\nexport class ButtonIconModule { }\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n    selector: '[disableControl]'\n})\nexport class DisableControlDirective implements OnInit {\n\n    disabled: boolean | undefined;\n\n    @Input() set disableControl(condition: boolean) {\n        if (this.disabled !== undefined) {\n            this.toggleControl(condition);\n        }\n        this.disabled = condition;\n    }\n\n    constructor(private ngControl: NgControl) { }\n\n    ngOnInit() {\n        this.toggleControl(this.disabled ?? false);\n    }\n\n    toggleControl(condition: boolean) {\n        const action = condition ? 'disable' : 'enable';\n        if (this.ngControl.control) {\n            this.ngControl.control[action]();\n        }\n    }\n\n}","import { Directive, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appElementHost]'\r\n})\r\nexport class ElementHostDirective {\r\n    constructor(public viewContainerRef: ViewContainerRef) { }\r\n\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[appTemplateRef]'\r\n})\r\nexport class TemplateRefDirective {\r\n    constructor(public templateRef: TemplateRef<any>) { }\r\n\r\n}","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\n@Component({\n    template: ``\n})\nexport class BaseIconComponent implements OnInit {\n    iconClass: string = '';\n\n    constructor(\n        protected el: ElementRef,\n        protected renderer: Renderer2\n    ) { }\n\n    ngOnInit(): void {\n        if (this.iconClass.trim())\n            this.renderer.addClass(this.el.nativeElement, this.iconClass);\n    }\n\n}\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { BaseIconComponent } from './base-icon.component';\n\n@Component({\n    selector: 'app-icon-close',\n    template: `\n        <svg x-description=\"Heroicon name: outline/x\"\n             xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n             stroke=\"currentColor\" aria-hidden=\"true\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"></path>\n        </svg>\n  `,\n    styles: [\n        `\n      :host {\n        @apply block w-6 h-6;\n      }\n    `\n    ]\n})\nexport class IconCloseComponent extends BaseIconComponent implements OnInit {\n    constructor(\n        el: ElementRef,\n        renderer: Renderer2\n    ) {\n        super(el, renderer);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n}","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { BaseIconComponent } from './base-icon.component';\n\n@Component({\n    selector: 'app-icon-dot-vertical',\n    template: `\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n          <path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\" />\n        </svg>\n  `,\n    styles: [\n        `\n      :host {\n        @apply block w-5 h-5 text-gray-500 transition-colors duration-200 hover:text-gray-900;\n      }\n    `\n    ]\n})\nexport class IconDotVerticalComponent extends BaseIconComponent implements OnInit {\n    constructor(\n        el: ElementRef,\n        renderer: Renderer2\n    ) {\n        super(el, renderer);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n}\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { BaseIconComponent } from './base-icon.component';\n\n@Component({\n    selector: 'app-icon-eye',\n    template: `\n     <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n         <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\"></path>\n         <path fill-rule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clip-rule=\"evenodd\"></path>\n     </svg>\n  `,\n    styles: [\n        `\n      :host {\n        @apply block w-5 h-5;\n      }\n    `\n    ]\n})\nexport class IconEyeComponent extends BaseIconComponent implements OnInit {\n    constructor(\n        el: ElementRef,\n        renderer: Renderer2\n    ) {\n        super(el, renderer);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n}\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { BaseIconComponent } from './base-icon.component';\n\n@Component({\n    selector: 'app-icon-pencil',\n    template: `\n        <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\"></path>\n        </svg>\n  `,\n    styles: [\n        `\n      :host {\n        @apply block w-5 h-5;\n      }\n    `\n    ]\n})\nexport class IconPencilComponent extends BaseIconComponent implements OnInit {\n    constructor(\n        el: ElementRef,\n        renderer: Renderer2\n    ) {\n        super(el, renderer);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n}\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { BaseIconComponent } from './base-icon.component';\n\n@Component({\n    selector: 'app-icon-trash',\n    template: `\n        <svg fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\"></path>\n        </svg>\n  `,\n    styles: [\n        `\n      :host {\n        @apply block w-5 h-5;\n      }\n    `\n    ]\n})\nexport class IconTrashComponent extends BaseIconComponent implements OnInit {\n    constructor(\n        el: ElementRef,\n        renderer: Renderer2\n    ) {\n        super(el, renderer);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n}","import { NgModule } from '@angular/core';\n\nimport { BaseIconComponent } from './base-icon.component';\nimport { IconCloseComponent } from './icon-close.component';\nimport { IconDotVerticalComponent } from './icon-dot-vertical.component';\nimport { IconEyeComponent } from './icon-eye.component';\nimport { IconPencilComponent } from './icon-pencil.component';\nimport { IconTrashComponent } from './icon-trash.component';\n\n\n\n@NgModule({\n    declarations: [\n        IconCloseComponent,\n        IconDotVerticalComponent,\n        IconEyeComponent,\n        IconPencilComponent,\n        IconTrashComponent,\n        BaseIconComponent\n    ],\n    exports: [\n        IconCloseComponent,\n        IconDotVerticalComponent,\n        IconEyeComponent,\n        IconPencilComponent,\n        IconTrashComponent,\n        BaseIconComponent\n    ],\n    imports: []\n})\nexport class IconsModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-page-heading-layout',\n    template: `\n    <header class=\"bg-white border-dashed border-b-2 border-gray-200\">\n      <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n          dfaf\n        <ng-content></ng-content>\n      </div>\n    </header>\n  `,\n    styles: [\n        `\n      :host {\n        display: block;\n      }\n    `\n    ]\n})\nexport class PageHeadingLayoutComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-two-column-layout',\n    templateUrl: './two-column-layout.component.html',\n    styles: [\n        `\n      :host {\n          display: block;\n          flex: 1 1 0%;\n      }\n    `\n    ]\n})\nexport class TwoColumnLayoutComponent implements OnInit {\n    @Input() isSecondaryContentVisible = false;\n    @Output() hamburgerMenuClick = new EventEmitter<void>();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    hamburgerMenuClickHandler(): void {\n        this.hamburgerMenuClick.emit();\n    }\n\n}\n","<header class=\"bg-white border-b-2 border-gray-200 border-dashed\">\n    <div class=\"px-4 py-6 mx-auto max-w-7xl sm:px-6 lg:px-8\">\n        <ng-content select=\"[header-content]\"></ng-content>\n    </div>\n</header>\n<nav class=\"flex px-4 py-4 mx-auto border-b-2 border-gray-200 border-dashed max-w-7xl sm:px-6 lg:px-8\"\n     aria-label=\"Breadcrumb\">\n    <ng-content select=\"[breadcrumb-content]\"></ng-content>\n</nav>\n<!-- overflow-hidden -->\n<div class=\"flex flex-col flex-1 min-w-0 min-h-full\">\n    <div class=\"lg:hidden\">\n        <div class=\"flex items-center justify-between bg-gray-50 border-b border-gray-200 px-4 py-1.5\">\n            <button (click)=\"hamburgerMenuClickHandler()\" type=\"button\"\n                    class=\"inline-flex items-center justify-center w-12 h-12 -mr-3 text-gray-500 rounded-md hover:text-gray-900\">\n                <span class=\"sr-only\">Open sidebar</span>\n                <!-- Heroicon name: outline/menu -->\n                <svg class=\"w-6 h-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                </svg>\n            </button>\n        </div>\n    </div>\n    <!-- overflow-hidden -->\n    <div class=\"relative z-0 flex flex-1 \">\n        <!-- overflow-y-auto -->\n        <main class=\"relative z-0 flex-1 bg-white focus:outline-none\">\n            <!-- Start main area-->\n            <!-- absolute inset-0  -->\n            <div class=\"min-h-full px-4 py-6 sm:px-6 lg:px-8\">\n                <div class=\"h-full\">\n                    <ng-content select=\"[main-content]\"></ng-content>\n                </div>\n            </div>\n            <!-- End main area -->\n        </main>\n        <!-- overflow-y-auto -->\n        <!-- absolute inset-0  -->\n        <aside *ngIf=\"isSecondaryContentVisible\"\n               class=\"relative flex-shrink-0 hidden border-l border-gray-200 bg-purple-50 lg:flex lg:flex-col w-80\">\n            <!-- Start secondary column (hidden on smaller screens) -->\n            <div class=\"min-h-full px-4 py-6 sm:px-6 lg:px-8\">\n                <div class=\"h-full\">\n                    <ng-content select=\"[secondary-content]\"></ng-content>\n                </div>\n            </div>\n            <!-- End secondary column -->\n        </aside>\n    </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ContentChild,\n    EventEmitter,\n    Input,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { IconTrashComponent } from '../icons/icon-trash.component';\nimport { MenuItem } from '../menu.model';\n\n@Component({\n    selector: 'app-link-icon',\n    template: `\n    <a (click)=\"onLinkClick()\" class=\"flex px-4 py-2 text-sm\" role=\"menuitem\" tabindex=\"-1\">\n        <!-- <ng-content  ></ng-content> -->\n        <ng-container #container *ngIf=\"menuItem?.isIconVisible\"></ng-container>\n        <span>{{menuItem?.label}}</span>\n    </a>\n        <!-- <div appElementHost>dfsafsf</div> -->\n  `,\n    styles: [\n        `\n      :host {\n        display: block;\n      }\n    `\n    ]\n})\nexport class LinkIconComponent implements OnInit, OnDestroy, AfterContentInit, AfterViewInit {\n\n    @ViewChild('container', { read: ViewContainerRef }) iconViewContainerRef: ViewContainerRef | undefined;\n    @ViewChild('tpl') tpl!: TemplateRef<any>;\n    @ContentChild(IconTrashComponent) icon: IconTrashComponent | undefined;\n\n    @Input() menuItem: MenuItem | undefined;\n    @Input() iconClass: string = 'bg-indigo-700';\n\n    @Output() linkClick = new EventEmitter<MenuItem>();\n\n    private _iconComponentRef: ComponentRef<any> | undefined;\n\n    constructor(\n        private resolver: ComponentFactoryResolver\n    ) {\n        // console.log('viewContainerRef', viewContainer);\n    }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterContentInit(): void {\n        // console.log('icon', this.icon);\n    }\n\n    ngAfterViewInit(): void {\n        // console.log('this.iconHost', this.iconViewContainerRef);\n        if (!this.menuItem || !this.menuItem.iconComponent)\n            return;\n\n        const componentFactory = this.resolver.resolveComponentFactory(this.menuItem.iconComponent);\n        this._iconComponentRef = this.iconViewContainerRef?.createComponent(componentFactory);\n\n        if (this._iconComponentRef)\n            this._iconComponentRef.instance.iconClass = this.iconClass;\n    }\n\n    onLinkClick() {\n        // this.menuItem?.command();\n        this.linkClick.emit(this.menuItem);\n    }\n    ngOnDestroy(): void {\n        this._iconComponentRef?.destroy();\n    }\n\n}\n\n\n@NgModule({\n    declarations: [LinkIconComponent],\n    imports: [CommonModule],\n    exports: [LinkIconComponent]\n})\nexport class LinkIconModule { }","import { Component, Input, NgModule, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-page-heading',\n    template: `\n    <h1>{{title}}</h1>\n    <p>{{description}}</p>\n  `,\n    styles: [\n        `\n      :host {\n        display: block;\n      }\n\n      :host([x-size=large]) {\n          & h1 {\n              @apply text-3xl font-bold;\n          }\n\n          & p {\n              @apply text-lg font-normal;\n          }\n      }\n\n      :host([x-size=medium]) {\n          & h1 {\n              @apply text-lg font-medium leading-6;\n          }\n\n          & p {\n              @apply max-w-2xl mt-1 text-sm;\n          }\n      }\n\n      :host([x-color=black]) {\n          & h1, & p {\n              @apply text-gray-900;\n          }\n      }\n\n      :host([x-color=indigo]) {\n          & h1, & p {\n              @apply text-indigo-900;\n          }\n      }\n    `\n    ]\n})\nexport class PageHeadingComponent implements OnInit {\n\n    @Input() title: string | null = '';\n    @Input() description: string | null = '';\n    @Input('x-size') xSize: \"medium\" | \"large\" = \"large\";\n    @Input('x-color') xColor: \"indigo\" | \"black\" = \"black\";\n\n    constructor() {\n        // this.title = this.title ?? '';\n        // this.description = this.description ?? '';\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n\n\n@NgModule({\n    declarations: [PageHeadingComponent],\n    exports: [PageHeadingComponent]\n})\nexport class PageHeadingModule {\n\n}","import { Component, EventEmitter, Input, NgModule, OnInit, Output } from '@angular/core';\n\nimport { ButtonIconModule } from '../button-icon/button-icon.component';\nimport { IconsModule } from '../icons/icons.module';\nimport { PageHeadingModule } from '../page-heading/page-heading.component';\nimport { SecondaryHeaderService } from './secondary-header.service';\n\n@Component({\n    selector: 'app-secondary-header',\n    template: `\n        <!-- <div>\n            <h1 class=\"text-lg font-medium leading-6 text-indigo-900\">\n                Skill Information\n            </h1>\n            <p class=\"max-w-2xl mt-1 text-sm text-indigo-900\">\n                Detils of the skill.\n            </p>\n        </div> -->\n        <app-page-heading x-size=\"medium\" x-color=\"indigo\" [title]=\"title\" [description]=\"description\"></app-page-heading>\n        <app-button-icon (buttonClick)=\"onButtonClick()\">\n            <app-icon-close></app-icon-close>\n        </app-button-icon>\n        <!-- <app-page-heading x-size=\"medium\" x-color=\"indigo\"></app-page-heading> -->\n        <!-- <div class=\"flex items-center ml-3 h-7\">\n            <button (click)=\"onCloseClick()\" type=\"button\"\n                    class=\"text-indigo-800 bg-transparent rounded-md hover:text-indigo-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:text-indigo-900\">\n                <span class=\"sr-only\">Close panel</span>\n                <svg class=\"w-6 h-6\" x-description=\"Heroicon name: outline/x\"\n                     xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                          d=\"M6 18L18 6M6 6l12 12\"></path>\n                </svg>\n            </button>\n        </div> -->\n  `,\n    styles: [\n        `\n      :host {\n        @apply flex justify-between py-5 border-b border-gray-200;\n      }\n    `\n    ]\n})\nexport class SecondaryHeaderComponent implements OnInit {\n\n    @Input() title: string = '';\n    @Input() description: string = '';\n\n    @Output() closeClick = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    onButtonClick(): void {\n        this.closeClick.emit();\n    }\n\n}\n\n\n@NgModule({\n    declarations: [SecondaryHeaderComponent],\n    imports: [ButtonIconModule, IconsModule, PageHeadingModule],\n    providers: [SecondaryHeaderService],\n    exports: [SecondaryHeaderComponent]\n})\nexport class SecondaryHeaderModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SecondaryHeaderService {\n\n    private _subjectCloseClicked$ = new Subject<boolean>();\n\n    get isCloseClicked$() {\n        return this._subjectCloseClicked$.asObservable();\n    }\n\n    constructor() { }\n\n    closeClicked() {\n        this._subjectCloseClicked$.next(true);\n    }\n\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AlertModule } from './alert';\r\nimport { ButtonIconModule } from './button-icon/button-icon.component';\r\nimport { DisableControlDirective } from './directives/disable-control.directive';\r\nimport { ElementHostDirective } from './directives/element-host.directive';\r\nimport { TemplateRefDirective } from './directives/template-ref.directive';\r\nimport { IconsModule } from './icons/icons.module';\r\nimport { PageHeadingLayoutComponent } from './layouts/page-heading-layout.component';\r\nimport { TwoColumnLayoutComponent } from './layouts/two-column/two-column-layout.component';\r\nimport { LinkIconModule } from './link-icon/link-icon.component';\r\nimport { PageHeadingModule } from './page-heading/page-heading.component';\r\nimport { SecondaryHeaderModule } from './secondary-header/secondary-header.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TwoColumnLayoutComponent,\r\n        PageHeadingLayoutComponent,\r\n        DisableControlDirective,\r\n        ElementHostDirective,\r\n        TemplateRefDirective\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        PageHeadingModule,\r\n        IconsModule,\r\n        ButtonIconModule,\r\n        SecondaryHeaderModule,\r\n        LinkIconModule,\r\n        AlertModule\r\n    ],\r\n    exports: [\r\n        CommonModule,\r\n        PageHeadingModule,\r\n        IconsModule,\r\n        ButtonIconModule,\r\n        LinkIconModule,\r\n        SecondaryHeaderModule,\r\n        AlertModule,\r\n\r\n        TwoColumnLayoutComponent,\r\n        PageHeadingLayoutComponent,\r\n\r\n        DisableControlDirective,\r\n        ElementHostDirective,\r\n        TemplateRefDirective\r\n    ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { IBreadcrumb } from './breadcrumb.model';\nimport { BreadcrumbService } from './breadcrumb.service';\n\n@Component({\n    selector: 'app-breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styles: [\n        `\n      :host {\n        display: block;\n      }\n    `\n    ]\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n\n    breadcrumbs$: Observable<IBreadcrumb[]>;\n    breadcrumbs: IBreadcrumb[] = [];\n\n    private _breadcrumbSub!: Subscription;\n\n    get isBreadcrumbVisible(): boolean {\n        return this.breadcrumbs.length > 0;\n    }\n\n    constructor(\n        private breadcrumbService: BreadcrumbService,\n        private router: Router\n    ) {\n        this.breadcrumbs$ = this.breadcrumbService;\n    }\n\n    ngOnInit(): void {\n        // console.log('ngOnInit');\n        this._breadcrumbSub = this.breadcrumbs$.subscribe(breadcrumbs => {\n            this.breadcrumbs = breadcrumbs;\n        });\n\n    }\n\n    onBreadcrumbMenuItemClick(item: IBreadcrumb): void {\n        this.router.navigateByUrl(item.newRoute);\n    }\n\n    ngOnDestroy(): void {\n        // console.log('ngOnDestroy');\n        this._breadcrumbSub?.unsubscribe();\n    }\n\n}\n","<ol *ngIf=\"isBreadcrumbVisible\" role=\"list\" class=\"flex items-center space-x-4\">\n    <li>\n        <div>\n            <a [routerLink]=\"['/']\" class=\"text-gray-400 hover:text-gray-500\">\n                <!-- Heroicon name: solid/home -->\n                <svg class=\"flex-shrink-0 w-5 h-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"\n                     fill=\"currentColor\" aria-hidden=\"true\">\n                    <path\n                          d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\n                </svg>\n                <span class=\"sr-only\">Home</span>\n            </a>\n        </div>\n    </li>\n\n    <ng-container *ngFor=\"let item of breadcrumbs\">\n        <li>\n            <div class=\"flex items-center\">\n                <svg class=\"flex-shrink-0 w-5 h-5 text-gray-300\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\"\n                     viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                    <path d=\"M5.555 17.776l8-16 .894.448-8 16-.894-.448z\" />\n                </svg>\n                <!-- <a [routerLink]=\"item.route\" class=\"ml-4 text-sm font-medium text-gray-500 hover:text-gray-700\">{{\n                    item.label }}</a> -->\n                <!-- [item.newRoute, { outlets: { details: null } }] -->\n                <a routerLink=\"{{item.newRoute}}\"\n                   class=\"ml-4 text-sm font-medium text-gray-500 cursor-pointer hover:text-gray-700\">{{\n                    item.label }}</a>\n                <!-- <a (click)=\"onBreadcrumbMenuItemClick(item)\"\n                   class=\"ml-4 text-sm font-medium text-gray-500 cursor-pointer hover:text-gray-700\">{{\n                    item.label }}</a> -->\n            </div>\n        </li>\n    </ng-container>\n</ol>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { BreadcrumbService } from './breadcrumb.service';\n\n\n\n@NgModule({\n    declarations: [BreadcrumbComponent],\n    imports: [\n        CommonModule,\n        RouterModule\n    ],\n    providers: [BreadcrumbService],\n    exports: [BreadcrumbComponent]\n})\nexport class BreadcrumbModule { }\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Params, Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap, tap } from 'rxjs/operators';\n\nimport { IBreadcrumb } from './breadcrumb.model';\n\n\nexport const BREADCRUMB_CONFIG_TOKEN = new InjectionToken<IBreadcrumb[]>(\"breadcrumb-config\");\n\n/* const breadcrumbConfig: IBreadcrumb[] = ; */\n\n@Injectable()\nexport class BreadcrumbService extends Observable<IBreadcrumb[]> {\n\n    private readonly _breadcrumbs$ = new BehaviorSubject<IBreadcrumb[]>([]);\n    private _breadcrumbsSub: Subscription | undefined;\n    private _routeEventSub: Subscription | undefined;\n\n    private _paramPattern = /\\:([a-zA-Z]+)/g;\n\n    private get _routerEvent$() {\n        return this.router.events.pipe(\n            // Filter the NavigationEnd events as the breadcrumb is\n            // updated only when the route reaches its end\n            filter((event) => event instanceof NavigationEnd),\n            map(() => this.route),\n            map(route => {\n                while (route.firstChild) {\n                    route = route.firstChild;\n                }\n                return route;\n            }),\n            distinctUntilChanged(),\n            switchMap(route => {\n                return route.data.pipe(\n                    map(data => {\n                        let index = this.breadcrumbConfig.findIndex(x => x.name === data.breadcrumb);\n                        return this.updateWithParams(this.breadcrumbConfig.slice(0, index + 1), route.snapshot.params);\n                    })\n                );\n            }),\n            tap(breadcrumb => {\n                this._breadcrumbs$.next(breadcrumb);\n            })\n        );\n    }\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        @Inject(BREADCRUMB_CONFIG_TOKEN) private breadcrumbConfig: IBreadcrumb[]\n    ) {\n        super(subscriber => {\n            // console.log('subscriber');\n            // this._routerEvent$.subscribe(subscriber);\n            this._breadcrumbsSub = this._breadcrumbs$.asObservable().subscribe(subscriber);\n            this._routeEventSub = this._routerEvent$.subscribe();\n\n            return () => {\n                this._routeEventSub?.unsubscribe();\n                this._breadcrumbsSub?.unsubscribe();\n            };\n        });\n        // console.log('constructor');\n        this._routeEventSub = this._routerEvent$.subscribe();\n\n\n\n    }\n\n    private updateWithParams(breadcrumb: IBreadcrumb[], params: Params) {\n        let result: any;\n\n        let breadcrumbCopy: IBreadcrumb[] = JSON.parse(JSON.stringify(breadcrumb));\n        // let first = breadcrumbCopy[0];\n\n        breadcrumbCopy.forEach((b: IBreadcrumb) => {\n            let routeToUpdate = b.newRoute;\n            while ((result = this._paramPattern.exec(routeToUpdate)) != null) {\n                routeToUpdate = routeToUpdate.replace(result[0], params[result[1]] ?? result[0]);\n            }\n\n            if (routeToUpdate.indexOf(':') > -1)\n                console.error(`Unable to update parameters of route: ${b.newRoute}`);\n\n            b.newRoute = routeToUpdate;\n        });\n\n        return breadcrumbCopy;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { MenuItem } from '../../shared/menu.model';\r\n\r\n@Component({\r\n    selector: 'app-dropdown-menu',\r\n    templateUrl: './dropdown-menu.component.html',\r\n    styleUrls: ['./dropdown-menu.component.scss']\r\n})\r\nexport class DropdownMenuComponent implements OnInit {\r\n\r\n    @Input() menus: MenuItem[] = [];\r\n\r\n    @Output() menuItemClicked = new EventEmitter<MenuItem>();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    onMenuItemClick(menuItem: MenuItem) {\r\n        this.menuItemClicked.emit(menuItem);\r\n    }\r\n\r\n}\r\n","<!--\r\n              Dropdown menu, show/hide based on menu state.\r\n\r\n              Entering: \"transition ease-out duration-100\"\r\n                From: \"transform opacity-0 scale-95\"\r\n                To: \"transform opacity-100 scale-100\"\r\n              Leaving: \"transition ease-in duration-75\"\r\n                From: \"transform opacity-100 scale-100\"\r\n                To: \"transform opacity-0 scale-95\"\r\n            -->\r\n<div class=\"absolute right-0 w-48 py-1 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n     role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu-button\" tabindex=\"-1\">\r\n\r\n    <ng-container *ngFor=\"let menuItem of menus\">\r\n        <a [routerLink]=\"menuItem.routerLink\" routerLinkActive=\"router-link-active\" (click)=\"onMenuItemClick(menuItem)\"\r\n           class=\"block px-4 py-2 text-sm text-gray-700\" tabindex=\"-1\">\r\n            {{menuItem.label}}\r\n        </a>\r\n    </ng-container>\r\n\r\n\r\n    <!-- Active: \"bg-gray-100\", Not Active: \"\" -->\r\n    <!-- <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-0\">Your\r\n        Profile</a>\r\n    <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\"\r\n       id=\"user-menu-item-1\">Settings</a>\r\n    <a href=\"#\" class=\"block px-4 py-2 text-sm text-gray-700\" role=\"menuitem\" tabindex=\"-1\" id=\"user-menu-item-2\">Sign\r\n        out</a> -->\r\n</div>\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { DropdownMenuComponent } from './dropdown-menu.component';\n\n@NgModule({\n    declarations: [DropdownMenuComponent],\n    imports: [CommonModule, RouterModule],\n    exports: [DropdownMenuComponent]\n})\nexport class DropdownMenuModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-empty-state',\n    template: `\n        <svg class=\"w-12 h-12 mx-auto text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\n             aria-hidden=\"true\">\n            <path vector-effect=\"non-scaling-stroke\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\" />\n        </svg>\n        <h3 class=\"mt-2 text-sm font-medium text-gray-900\">{{ title }}</h3>\n        <p class=\"mt-1 text-sm text-gray-500\">\n            {{ description }}\n        </p>\n        <div class=\"mt-6\">\n            <button type=\"button\"\n                    class=\"inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                <!-- Heroicon name: solid/plus -->\n                <svg class=\"w-5 h-5 mr-2 -ml-1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"\n                     fill=\"currentColor\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\"\n                          d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\"\n                          clip-rule=\"evenodd\" />\n                </svg>\n                {{ buttonLabel }}\n            </button>\n        </div>\n  `,\n    styles: [\n        `\n      :host {\n        display: block;\n        @apply p-12 text-center border-2 border-gray-300;\n        @apply border-dashed rounded-lg hover:border-gray-400 focus:outline-none;\n      }\n    `\n    ]\n})\nexport class EmptyStateComponent implements OnInit {\n\n    @Input() title: string = 'No item found';\n    @Input() description: string = 'Get started by adding a new item';\n    @Input() buttonLabel: string = 'Add New';\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-hamburger',\r\n    templateUrl: './hamburger.component.html',\r\n    styleUrls: ['./hamburger.component.scss']\r\n})\r\nexport class HamburgerComponent implements OnInit {\r\n\r\n    @Output() clicked = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    onClick(): void {\r\n        this.clicked.emit();\r\n    }\r\n\r\n}\r\n","<!-- Mobile menu button-->\r\n<button (click)=\"onClick()\" type=\"button\"\r\n        class=\"inline-flex items-center justify-center p-2 text-gray-400 rounded-md hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\r\n        aria-controls=\"mobile-menu\" aria-expanded=\"false\">\r\n    <span class=\"sr-only\">Open main menu</span>\r\n    <!--\r\nIcon when menu is closed.\r\n\r\nHeroicon name: outline/menu\r\n\r\nMenu open: \"hidden\", Menu closed: \"block\"\r\n-->\r\n    <svg class=\"block w-6 h-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\r\n         aria-hidden=\"true\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\r\n    </svg>\r\n    <!--\r\nIcon when menu is open.\r\n\r\nHeroicon name: outline/x\r\n\r\nMenu open: \"block\", Menu closed: \"hidden\"\r\n-->\r\n    <svg class=\"hidden w-6 h-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"\r\n         aria-hidden=\"true\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n    </svg>\r\n</button>\r\n","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { APP_CONFIG_TOKEN, IAppConfig } from '@psr/core/app.config';\r\nimport { MenuItem } from '@psr/shared/menu.model';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n    public isMobileMenuOpen: boolean = false;\r\n    public primaryMenu: MenuItem[] = this.appConfig.primaryMenu;\r\n    public profileMenu: MenuItem[] = this.appConfig.profileMenu;\r\n\r\n    private _showSignInOrSignUp: boolean = false;\r\n    @Input() set showSignInOrSignUp(value: boolean | null) {\r\n        this._showSignInOrSignUp = !(value ?? false);\r\n    };\r\n\r\n    get showSignInOrSignUp(): boolean {\r\n        return this._showSignInOrSignUp;\r\n    }\r\n\r\n    constructor(\r\n        @Inject(APP_CONFIG_TOKEN) private appConfig: IAppConfig\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    toggleMobileMenu() {\r\n        this.isMobileMenuOpen = !this.isMobileMenuOpen;\r\n    }\r\n\r\n}\r\n","<nav class=\"bg-gray-800\">\r\n    <div class=\"px-2 mx-auto max-w-7xl sm:px-6 lg:px-8\">\r\n        <div class=\"relative flex items-center justify-between h-16\">\r\n            <app-hamburger (clicked)=\"toggleMobileMenu()\"></app-hamburger>\r\n            <div class=\"flex items-center justify-center flex-1 sm:items-stretch sm:justify-start\">\r\n                <app-logo></app-logo>\r\n                <div class=\"hidden sm:block sm:ml-12\">\r\n                    <app-navigation class=\"desktop-menu\" [menu]=\"primaryMenu\" [stacked]=\"false\">\r\n                    </app-navigation>\r\n                </div>\r\n            </div>\r\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n                <app-profile-menu [menuItems]=\"profileMenu\"></app-profile-menu>\r\n                <!-- <a href=\"#\"\r\n                   class=\"inline-flex items-center px-4 py-2 ml-6 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                    Sigin\r\n                </a>\r\n                <a href=\"#\"\r\n                   class=\"inline-flex items-center px-4 py-2 ml-6 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                    Register\r\n                </a> -->\r\n                <div *ngIf=\"showSignInOrSignUp\" class=\"flex mt-4 md:mt-0 md:ml-4\">\r\n                    <button type=\"button\"\r\n                            class=\"inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-gray-700 border border-transparent rounded-md shadow-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-indigo-500\">\r\n                        Sign in\r\n                    </button>\r\n                    <button type=\"button\"\r\n                            class=\"inline-flex items-center px-4 py-2 ml-3 text-sm font-medium text-white bg-indigo-500 border border-transparent rounded-md shadow-sm hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-indigo-500\">\r\n                        Sign up\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Mobile menu, show/hide based on menu state. -->\r\n    <div class=\"sm:hidden\" *ngIf=\"isMobileMenuOpen\">\r\n        <app-navigation class=\"mobile-menu\" [menu]=\"primaryMenu\" [stacked]=\"true\"></app-navigation>\r\n    </div>\r\n</nav>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DropdownMenuModule } from '@widgets/dropdown-menu/dropdown-menu.module';\r\nimport { LogoModule } from '@widgets/logo';\r\n\r\nimport { HamburgerComponent } from './hamburger/hamburger.component';\r\nimport { HeaderComponent } from './header.component';\r\nimport { NavigationComponent } from './navigation/navigation.component';\r\nimport { ProfileDisplayComponent } from './profile-menu/profile-display.component';\r\nimport { ProfileMenuComponent } from './profile-menu/profile-menu.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HeaderComponent,\r\n        HamburgerComponent,\r\n        ProfileMenuComponent,\r\n        ProfileDisplayComponent,\r\n        NavigationComponent\r\n    ],\r\n    exports: [HeaderComponent],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        DropdownMenuModule,\r\n        LogoModule\r\n    ]\r\n})\r\nexport class HeaderModule { }\r\n","export * from './header.module';\r\nexport * from './header.component';","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MenuItem } from '@psr/shared/menu.model';\r\n\r\n@Component({\r\n    selector: 'app-navigation',\r\n    template: `\r\n        <a [routerLink]=\"menuItem.routerLink\" routerLinkActive=\"menu__item--active\"  class=\"{{ cssClass() }}\" *ngFor=\"let menuItem of menu\">\r\n            {{menuItem.label}}\r\n        </a>\r\n    `,\r\n    styles: [`\r\n        :host-context(.desktop-menu) {\r\n            @apply flex space-x-4;\r\n        }\r\n\r\n        :host-context(.mobile-menu) {\r\n            @apply block px-2 pt-2 pb-3 space-y-1;\r\n        }\r\n\r\n        .menu {\r\n            &__item {\r\n                @apply px-3 py-2 text-sm font-medium text-gray-300 rounded-md hover:bg-gray-700 hover:text-white;\r\n\r\n                &--active {\r\n                    @apply bg-gray-900 text-white;\r\n                }\r\n\r\n                &--stacked {\r\n                    @apply block text-base;\r\n                }\r\n            }\r\n        }\r\n\r\n    `]\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n    @Input() menu: MenuItem[] = [];\r\n    @Input() stacked: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    cssClass() {\r\n        const classes = ['menu__item'];\r\n\r\n        if (this.stacked) {\r\n            classes.push('menu__item--stacked');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProfileMenuService {\r\n\r\n    private subject = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor() { }\r\n\r\n    get openStatus$() {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n    public changeOpenStatus(status: boolean) {\r\n        this.subject.next(status);\r\n    }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { IUser } from '@auth/models/user.model';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n\r\nimport { ProfileMenuService } from '../profile-menu.service';\r\n\r\n@Component({\r\n    selector: 'app-profile-display',\r\n    template: `\r\n        <div class=\"profile-display\">\r\n            <button (click)=\"toggleDropdown()\" type=\"button\" class=\"profile-display__button\" id=\"profile-menu-button\"\r\n                    aria-expanded=\"false\" aria-haspopup=\"true\">\r\n                <span class=\"sr-only\">Open profile menu</span>\r\n                <span class=\"profile-display__welcome\">Welcome {{ user?.firstName }}</span>\r\n                <!-- <h1 *ngIf=\"user\">Welcome {{ user?.firstName }}</h1> -->\r\n            </button>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .profile-display {\r\n            @apply relative z-10;\r\n\r\n            &__button {\r\n                @apply flex items-center space-x-4 bg-gray-800 rounded-full focus:outline-none ring-0;\r\n            }\r\n\r\n            &__welcome {\r\n                //hover:bg-gray-700\r\n                @apply text-gray-300  hover:text-white px-3 py-2 rounded-md text-sm font-medium;\r\n            }\r\n        }\r\n    `]\r\n})\r\nexport class ProfileDisplayComponent implements OnInit, OnDestroy {\r\n\r\n    private openStatus$: Observable<boolean>;\r\n    private openStatusSubscription: Subscription | undefined = undefined;\r\n\r\n    @Input() user: IUser | null = null;\r\n\r\n    constructor(\r\n        private service: ProfileMenuService\r\n    ) {\r\n        this.openStatus$ = this.service.openStatus$;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    toggleDropdown(): void {\r\n        this.openStatusSubscription = this.openStatus$.pipe(take(1))\r\n            .subscribe(status => {\r\n                this.service.changeOpenStatus(!status);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.openStatusSubscription && this.openStatusSubscription?.unsubscribe();\r\n    }\r\n\r\n}\r\n","import { Component, HostListener, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { AuthRoutes } from '@auth/auth.constants';\r\nimport { IUser } from '@auth/models/user.model';\r\nimport { AuthService } from '@auth/services/auth.service';\r\nimport { MenuItem } from '@psr/shared/menu.model';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { ProfileMenuService } from '../profile-menu.service';\r\n\r\n// (isDropdownOpen)=\"toggleDropdown($event)\"\r\n@Component({\r\n    selector: 'app-profile-menu',\r\n    template: `\r\n        <app-profile-display *ngIf=\"user\" [user]=\"user\"></app-profile-display>\r\n        <button *ngIf=\"isDropdownOpen\" (click)=\"onHideDropdown()\" class=\"close-overlay\" tabindex=\"-1\"></button>\r\n        <app-dropdown-menu\r\n            *ngIf=\"isDropdownOpen\"\r\n            [menus]=\"menuItems\"\r\n            (menuItemClicked)=\"onMenuItemClicked($event)\">\r\n        </app-dropdown-menu>\r\n    `,\r\n    styles: [`\r\n        :host {\r\n            @apply relative;\r\n        }\r\n\r\n        .close-overlay {\r\n            @apply fixed inset-0 h-full w-full cursor-default; //bg-black opacity-50\r\n        }\r\n    `]\r\n})\r\nexport class ProfileMenuComponent implements OnInit, OnDestroy {\r\n\r\n    public user: IUser | null = null;\r\n\r\n    private getUserSub!: Subscription;\r\n\r\n    private openStatus$: Observable<boolean>;\r\n    public isDropdownOpen: boolean = false;\r\n\r\n    @Input() menuItems: MenuItem[] = [];\r\n\r\n    constructor(\r\n        private service: ProfileMenuService,\r\n        private auth: AuthService\r\n    ) {\r\n        this.openStatus$ = this.service.openStatus$;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.openStatus$.subscribe(status => {\r\n            this.isDropdownOpen = status;\r\n        });\r\n        this.getUserSub = this.auth.getUser()\r\n            .subscribe(user => {\r\n                this.user = user;\r\n            });\r\n    }\r\n\r\n    onHideDropdown(): void {\r\n        this.service.changeOpenStatus(false);\r\n    }\r\n\r\n    onMenuItemClicked(menuItem: MenuItem) {\r\n        if (JSON.stringify(menuItem.routerLink) === JSON.stringify(AuthRoutes.RevokeToken())) {\r\n            this.service.changeOpenStatus(false);\r\n        }\r\n    }\r\n\r\n    @HostListener('document:keydown', ['$event'])\r\n    onHandleEscape(e: KeyboardEvent) {\r\n        if (e.key === 'Esc' || e.key === 'Escape') {\r\n            this.service.changeOpenStatus(false);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.getUserSub && this.getUserSub.unsubscribe();\r\n    }\r\n}\r\n","export * from './logo.component';\r\nexport * from './logo.module';","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-logo',\r\n    template: `\r\n       <!-- <img class=\"hidden w-40 h-8 lg:block\" src=\"assets/psr-logo.svg\" alt=\"Personal Skill Rating\"> -->\r\n       <img class=\"block w-10 h-8 lg:block\" src=\"assets/psr-abbrv-logo.svg\" alt=\"Personal Skill Rating\">\r\n    `,\r\n    styles: [`\r\n\r\n    :host {\r\n        @apply flex items-center flex-shrink-0;\r\n    }\r\n\r\n  `]\r\n})\r\nexport class LogoComponent implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\n\nimport { LogoComponent } from './logo.component';\n\n@NgModule({\n    declarations: [LogoComponent],\n    imports: [],\n    exports: [LogoComponent]\n})\nexport class LogoModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-read-field',\n    template: `\n    <ng-container *ngIf=\"isFieldVisible\">\n        <div class=\"text-sm font-medium text-indigo-900\">{{ fieldLabel }}</div>\n        <div class=\"mt-1 text-sm text-indigo-900\">{{ fieldValue }}</div>\n    </ng-container>\n  `,\n    styles: [\n        `\n      :host {\n        display: block;\n      }\n    `\n    ]\n})\nexport class ReadFieldComponent {\n\n    @Input() fieldLabel: string | undefined;\n    @Input() fieldValue: any | undefined;\n\n    get isFieldVisible(): boolean {\n        return this.fieldLabel && this.fieldValue;\n    }\n\n    constructor() { }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { EmptyStateComponent } from './empty-state/empty-state.component';\nimport { HeaderModule } from './header';\nimport { ReadFieldComponent } from './read-field/read-field.component';\n\n\n\n@NgModule({\n    declarations: [\n        ReadFieldComponent,\n        EmptyStateComponent\n    ],\n    imports: [\n        CommonModule,\n        HeaderModule,\n        BreadcrumbModule\n    ],\n    exports: [\n        HeaderModule,\n        BreadcrumbModule,\n\n        ReadFieldComponent,\n        EmptyStateComponent\n    ]\n})\nexport class WidgetsModule { }\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { IEnvironment } from './environment.interface';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EnvironmentService implements IEnvironment {\r\n    get production() {\r\n        return environment.production;\r\n    }\r\n\r\n    get enableDebugTools() {\r\n        return environment.enableDebugTools;\r\n    }\r\n\r\n    get logLevel() {\r\n        return environment.logLevel;\r\n    }\r\n\r\n    get apiUrl() {\r\n        return environment.apiUrl;\r\n    }\r\n\r\n    get alertOptions() {\r\n        return environment.alertOptions;\r\n    }\r\n\r\n    constructor() { }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { IEnvironment } from \"./environment.interface\";\r\n\r\nconst _apiHost = 'localhost';\r\nconst _apiPort = 4455;\r\nconst _version = \"v1\";\r\nconst _apiUrl = `http://${_apiHost}:${_apiPort}/api/${_version}/`\r\n\r\nexport const environment: IEnvironment = {\r\n    production: false,\r\n    enableDebugTools: true,\r\n    logLevel: 'debug',\r\n    apiUrl: _apiUrl,\r\n    alertOptions: {\r\n        autoClose: true,\r\n        timeToClose: 10\r\n    }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getRootUrl() {\r\n    return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n    { provide: 'ROOT_URL', useFactory: getRootUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 7969;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["LayoutComponent","constructor","auth","isAuthenticated$","isAuthenticated","ngOnInit","i0","selectors","decls","vars","consts","template","PageTitleService","IndexComponent","pageTitle","route","router","breadcrumbService","secondaryHeaderService","pageTitle$","pageSubTitle$","_breadcrumbs$","data","subscribe","resolverResult","categories","isCloseClicked$","isCloseClicked","navigate","outlets","details","onDetailsRouterOutletActivate","isSecondaryContentVisible","onDetailsRouterOutletDeactivate","onPrimaryRouterOutletActivate","onPrimaryRouterOutletDeactivate","hamburgerMenuClickHandler","ngOnDestroy","_routerEventSub","_a","unsubscribe","_routeDataSub","_b","features","ctx"],"sourceRoot":"webpack:///"}
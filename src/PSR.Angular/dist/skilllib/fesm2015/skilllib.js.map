{"version":3,"file":"skilllib.js","sources":["../../../projects/skilllib/src/lib/skill.endpoints.ts","../../../projects/skilllib/src/lib/services/skills.service.ts","../../../projects/skilllib/src/lib/resolvers/selected-category.resolver.ts","../../../projects/skilllib/src/lib/resolvers/selected-subcategory.resolver.ts","../../../projects/skilllib/src/lib/resolvers/skill-add.resolver.ts","../../../projects/skilllib/src/lib/resolvers/skill-category.resolver.ts","../../../projects/skilllib/src/lib/resolvers/skill-edit.resolver.ts","../../../projects/skilllib/src/lib/resolvers/skill-list.resolver.ts","../../../projects/skilllib/src/lib/resolvers/skill-subcategory.resolver.ts","../../../projects/skilllib/src/lib/resolvers/skill.resolver.ts","../../../projects/skilllib/src/lib/services/skill-card-context-menuitem.service.ts","../../../projects/skilllib/src/lib/services/skill-form.service.ts","../../../projects/skilllib/src/lib/components/skill-list-display/skill-card.token.ts","../../../projects/skilllib/src/lib/components/add-skill-card/add-skill-card.component.ts","../../../projects/skilllib/src/lib/components/add-skill-card/add-skill-card.component.html","../../../projects/skilllib/src/lib/components/add-skill-card/add-skill-card.module.ts","../../../projects/skilllib/src/lib/components/skill-card/skill-card.component.ts","../../../projects/skilllib/src/lib/components/skill-card/skill-card.component.html","../../../projects/skilllib/src/lib/components/skill-card/skill-card.module.ts","../../../projects/skilllib/src/lib/components/skill-card/index.ts","../../../projects/skilllib/src/lib/components/skill-category-card/skill-category-card.component.ts","../../../projects/skilllib/src/lib/components/skill-category-card/skill-category-card.component.html","../../../projects/skilllib/src/lib/components/skill-category-card/skill-category-card.module.ts","../../../projects/skilllib/src/lib/components/skill-form/skill-form.component.ts","../../../projects/skilllib/src/lib/components/skill-form/skill-form.component.html","../../../projects/skilllib/src/lib/components/skill-form/skill-form.module.ts","../../../projects/skilllib/src/lib/components/skill-list-display/skill-list-display.component.ts","../../../projects/skilllib/src/lib/components/skill-list-display/skill-list-display.component.html","../../../projects/skilllib/src/lib/components/skill-list-display/skill-list-display.module.ts","../../../projects/skilllib/src/lib/components/skill-read/skill-read.component.ts","../../../projects/skilllib/src/lib/components/skill-read/skill-read.component.html","../../../projects/skilllib/src/lib/components/skill-read/skill-read.module.ts","../../../projects/skilllib/src/lib/components/skill-subcategory-card/skill-subcategory-card.component.ts","../../../projects/skilllib/src/lib/components/skill-subcategory-card/skill-subcategory-card.component.html","../../../projects/skilllib/src/lib/components/skill-subcategory-card/skill-subcategory-card.module.ts","../../../projects/skilllib/src/lib/skilllib.module.ts","../../../projects/skilllib/src/skilllib.ts"],"sourcesContent":["import { IAppConfig } from '@corelib';\r\n\r\n\r\nexport interface ISkillEndpoints {\r\n    readonly GetSkills: (config: IAppConfig) => string;\r\n    readonly GetSkillsByCategoryAndSubcategory: (config: IAppConfig, categoryId: string, subcategoryId: string) => string;\r\n    readonly GetSkill: (config: IAppConfig, id: string) => string;\r\n    readonly GetSkillCategories: (config: IAppConfig) => string;\r\n    readonly GetSkillSubCategories: (config: IAppConfig, categoryId: string) => string;\r\n    readonly GetSkillCategory: (config: IAppConfig, id: string) => string;\r\n    readonly GetSkillSubcategory: (config: IAppConfig, id: string) => string;\r\n}\r\n\r\nlet endpoints: ISkillEndpoints = {\r\n    GetSkills: (config: IAppConfig) => config.getUrl(`skills`),\r\n    GetSkillsByCategoryAndSubcategory: (config: IAppConfig, categoryId: string, subcategoryId: string) => {\r\n        return config.getUrl(`skills/categories/${categoryId}/subcategories/${subcategoryId}/list`);\r\n    },\r\n    GetSkill: (config: IAppConfig, id: string) => config.getUrl(`skills/${id}`),\r\n    GetSkillCategories: (config: IAppConfig) => config.getUrl(`skills/categories`),\r\n    GetSkillSubCategories: (config: IAppConfig, categoryId: string) => config.getUrl(`skills/categories/${categoryId}/subcategories`),\r\n    GetSkillCategory: (config: IAppConfig, id: string) => config.getUrl(`skills/categories/${id}`),\r\n    GetSkillSubcategory: (config: IAppConfig, id: string) => config.getUrl(`skills/subcategories/${id}`),\r\n};\r\n\r\n\r\n\r\n\r\nexport const SkillEndpoints: ISkillEndpoints = endpoints;","import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { APP_CONFIG_TOKEN, IAppConfig } from '@corelib';\nimport { Observable } from 'rxjs';\n\nimport { ISkill, ISkillCategory, ISkillSubCategory } from '../models/skill.model';\nimport { SkillEndpoints } from '../skill.endpoints';\n\n@Injectable()\nexport class SkillsService {\n\n    constructor(\n        private http: HttpClient,\n        @Inject(APP_CONFIG_TOKEN) private appConfig: IAppConfig\n    ) { }\n\n    public getSkills(): Observable<ISkill[]> {\n        return this.http.get<ISkill[]>(SkillEndpoints.GetSkills(this.appConfig)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getSkillsByCategoryAndSubcategory(categoryId: string, subcategoryId: string): Observable<ISkill[]> {\n        return this.http.get<ISkill[]>(SkillEndpoints.GetSkillsByCategoryAndSubcategory(this.appConfig, categoryId, subcategoryId)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getSkill(id: string): Observable<ISkill> {\n        return this.http.get<ISkill>(SkillEndpoints.GetSkill(this.appConfig, id)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getCategory(id: string): Observable<ISkill> {\n        return this.http.get<ISkill>(SkillEndpoints.GetSkillCategory(this.appConfig, id)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getSubcategory(id: string): Observable<ISkill> {\n        return this.http.get<ISkill>(SkillEndpoints.GetSkillSubcategory(this.appConfig, id)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getCategories(): Observable<ISkillCategory[]> {\n        return this.http.get<ISkillCategory[]>(SkillEndpoints.GetSkillCategories(this.appConfig)).pipe(\n            // shareReplay()\n        );\n    }\n\n    public getSubCategories(categoryId: string): Observable<ISkillSubCategory[]> {\n        return this.http.get<ISkillSubCategory[]>(SkillEndpoints.GetSkillSubCategories(this.appConfig, categoryId)).pipe(\n            // shareReplay()\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { pluck, switchMap } from 'rxjs/operators';\n\nimport { ISkillCategory } from '../models/skill.model';\nimport { SkillsService } from '../services/skills.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SelectedCategoryResolver implements Resolve<ISkillCategory> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkillCategory> {\n        return of(route.params).pipe(\n            pluck('categoryId'),\n            switchMap((categoryId) => this.skillService.getCategory(categoryId))\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { pluck, switchMap } from 'rxjs/operators';\n\nimport { ISkillSubCategory } from '../models/skill.model';\nimport { SkillsService } from '../services/skills.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SelectedSubcategoryResolver implements Resolve<ISkillSubCategory> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkillSubCategory> {\n        return of(route.params).pipe(\n            pluck('subcategoryId'),\n            switchMap((subcategoryId) => this.skillService.getSubcategory(subcategoryId))\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\nimport { ISkillCategory } from '../models/skill.model';\nimport { SkillsService } from '../services/skills.service';\n\n@Injectable()\nexport class SkillAddResolver implements Resolve<ISkillCategory[]> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkillCategory[]> {\n        const categories = route.parent?.data?.resolverResult?.categories;\n        return categories\n            ? of(categories)\n            : this.skillService.getCategories();\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { ISkillCategory } from '../models/skill.model';\r\nimport { SkillsService } from '../services/skills.service';\r\n\r\n@Injectable()\r\nexport class SkillCategoryResolver implements Resolve<ISkillCategory[]> {\r\n    constructor(private skillService: SkillsService) { }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkillCategory[]> {\r\n        const categories = route.parent?.data?.resolverResult?.categories;\r\n        return categories\r\n            ? of(categories)\r\n            : this.skillService.getCategories();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, zip } from 'rxjs';\nimport { pluck, switchMap, take } from 'rxjs/operators';\n\nimport { ISkill, ISkillCategory } from '../models/skill.model';\nimport { SkillsService } from '../services/skills.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SkillEditResolver implements Resolve<[ISkillCategory[], ISkill]> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<[ISkillCategory[], ISkill]> {\n\n        const categories = route.parent?.data?.resolverResult?.categories;\n        const categories$ = categories ? of<ISkillCategory[]>(categories) : this.skillService.getCategories();\n        const skill$ = of(route.params).pipe(\n            pluck('id'),\n            switchMap(id => this.skillService.getSkill(id)),\n            take(1),\n        );\n\n        return zip(categories$, skill$);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\n\nimport { ISkill } from '../models/skill.model';\nimport { SkillsService } from '../services/skills.service';\n\n@Injectable()\nexport class SkillListResolver implements Resolve<ISkill[]> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkill[]> {\n        return of(route.params).pipe(\n            map(({ categoryId, subcategoryId }) => ({ categoryId, subcategoryId })),\n            switchMap(params => this.skillService.getSkillsByCategoryAndSubcategory(params.categoryId, params.subcategoryId)),\n            take(1),\n            // shareReplay(1)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { pluck, switchMap, take } from 'rxjs/operators';\n\nimport { SkillsService } from '../services/skills.service';\n\n@Injectable()\nexport class SkillSubcategoryResolver implements Resolve<any> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\n        return of(route.params).pipe(\n            pluck('categoryId'),\n            switchMap(id => this.skillService.getSubCategories(id)),\n            take(1),\n            // shareReplay(1)\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { pluck, switchMap, take } from 'rxjs/operators';\n\nimport { ISkill } from '../models/skill.model';\nimport { SkillsService } from '../services/skills.service';\n\n@Injectable()\nexport class SkillResolver implements Resolve<ISkill> {\n    constructor(private skillService: SkillsService) { }\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISkill> {\n        return of(route.params).pipe(\n            pluck('id'),\n            switchMap(id => this.skillService.getSkill(id)),\n            take(1),\n            // shareReplay(1)\n        );\n        // return this.skillService.getSkill();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SkillCardContextMenuitemService {\n\n    private _eventStartSubject = new Subject<{ skillId: string, menuName: string }>();\n    private _eventCompleteSubject = new Subject<{ skillId: string, menuName: string }>();\n\n    public get onEventStart$() {\n        return this._eventStartSubject.asObservable();\n    }\n\n    public get onEventComplete$() {\n        return this._eventCompleteSubject.asObservable();\n    }\n\n    public start(skillId: string, menuName: string) {\n        this._eventStartSubject.next({ skillId, menuName });\n    }\n\n    public complete(skillId: string, menuName: string) {\n        this._eventCompleteSubject.next({ skillId, menuName });\n    }\n\n\n    constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SkillFormService {\n\n    private _resetFormSubject = new Subject<void>();\n\n    get resetForm$() {\n        return this._resetFormSubject.asObservable();\n    }\n\n    constructor() { }\n\n    resetForm() {\n        this._resetFormSubject.next();\n    }\n}\n","import { InjectionToken } from '@angular/core';\r\n\r\nimport { ISkillCard } from '../../models';\r\n\r\nexport const SKILL_CARD_TOKEN = new InjectionToken<ISkillCard>('SKILL_CARD_TOKEN');","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { ISkillCard } from '../../models';\nimport { SKILL_CARD_TOKEN } from '../skill-list-display/skill-card.token';\n\n@Component({\n    selector: 'skl-add-card',\n    templateUrl: './add-skill-card.component.html',\n    styleUrls: ['./add-skill-card.component.scss'],\n    providers: [{ provide: SKILL_CARD_TOKEN, useExisting: AddSkillCardComponent }],\n})\nexport class AddSkillCardComponent implements OnInit, ISkillCard {\n\n    @Output() addSkillCardClick = new EventEmitter<void>();\n\n    public blockCard: boolean = false;\n    public blockable: boolean = false;\n    public type: 'add' | 'overview' | 'personal' = 'add';\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    addSkillCardClickHandler(): void {\n        this.addSkillCardClick.emit();\n    }\n\n    onFocus(): void {\n        console.log('onFocus');\n    }\n\n}\n","<div tabindex=\"0\" (click)=\"addSkillCardClickHandler()\"\n     class=\"flex flex-col items-center justify-center h-full p-4 space-y-4 text-left text-indigo-500 bg-white border border-gray-100 rounded-lg shadow hover:border-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-500\">\n    <svg class=\"w-16 h-16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n    </svg>\n    <h3>Add New Skill</h3>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { AddSkillCardComponent } from './add-skill-card.component';\n\n\n\n@NgModule({\n    declarations: [AddSkillCardComponent],\n    imports: [\n        CommonModule\n    ],\n    exports: [AddSkillCardComponent]\n})\nexport class AddSkillCardModule { }\n","import { Component, ElementRef, HostBinding, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BlockUiDirective, IBlockableUi, IContextMenuItemClickEvent, MenuItem } from '@sharedlib';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { ISkill, ISkillCard } from '../../models/skill.model';\nimport { SkillCardContextMenuitemService } from '../../services/skill-card-context-menuitem.service';\nimport { SKILL_CARD_TOKEN } from '../skill-list-display/skill-card.token';\n\n@Component({\n    selector: 'skl-card',\n    templateUrl: './skill-card.component.html',\n    styleUrls: ['./skill-card.component.scss'],\n    providers: [{ provide: SKILL_CARD_TOKEN, useExisting: SkillCardComponent }],\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SkillCardComponent implements OnInit, ISkillCard, IBlockableUi {\n    @HostBinding('attr.xBlockui') blockUiDirective = new BlockUiDirective(this.el, this.renderer);\n\n    // @ViewChild('blockUiOverlay', { read: ViewContainerRef }) blockUiOverlayContainerRef: ViewContainerRef | undefined;\n\n    // @Output() contextMenuItemEvent = new EventEmitter<{ skillId: string, menuName: string, card: ISkillCard }>();\n    @Input() skill: ISkill | undefined;\n    @Input() menuItems: MenuItem<any>[] = [];\n\n    private _blockCard: boolean = false;\n    private _eventComplete$: Observable<{ skillId: string, menuName: string }>;\n    private _eventCompleteSub: Subscription | undefined;\n\n    // @Output() skillCardClick = new EventEmitter<ISkill>();\n\n    public isContextMenuVisible: boolean = false;\n    public contextMenuHandle: Symbol = Symbol('contextMenuHandle');\n    public type: 'add' | 'overview' | 'personal' = 'overview';\n\n    public set blockCard(value: boolean) {\n        this._blockCard = value;\n        // this.cdr.markForCheck();\n        this.blockUiDirective.toggleBlockUi(value);\n    }\n    public get blockCard(): boolean {\n        return this._blockCard;\n    }\n\n    constructor(\n        private el: ElementRef,\n        private router: Router,\n        private renderer: Renderer2,\n        private ctxMenuItem: SkillCardContextMenuitemService,\n        // private zone: NgZone,\n        // private cdr: ChangeDetectorRef\n    ) {\n        this._eventComplete$ = this.ctxMenuItem.onEventComplete$;\n    }\n\n    ngOnInit(): void { }\n\n    getCategoryInfo(skill: ISkill): string {\n        return `${skill.categoryName} / ${skill.subcategoryName}`;\n    }\n\n    @HostListener('document:keydown', ['$event'])\n    onHandleEscape(e: KeyboardEvent) {\n        if (e.key === 'Esc' || e.key === 'Escape') {\n            if (this.isContextMenuVisible) this.isContextMenuVisible = false;\n        }\n    }\n\n    onToggleContextMenu() {\n        this.isContextMenuVisible = !this.isContextMenuVisible;\n    }\n\n    onMenuItemClick({ menuItem, handle }: IContextMenuItemClickEvent) {\n        const routerLink = menuItem.routerLink(this.skill?.id);\n\n        if (menuItem.navigatable) {\n            Array.isArray(routerLink)\n                ? this.router.navigate(routerLink)\n                : this.router.navigateByUrl(routerLink);\n        } else {\n            this.blockCard = true;\n            this.skill && this.ctxMenuItem.start(this.skill.id, menuItem.name);\n        }\n\n        this._eventComplete$.subscribe(({ skillId, menuName }) => {\n            if (this.skill && this.skill.id === skillId) {\n                this.blockCard = false;\n            }\n        });\n\n        this.isContextMenuVisible = false;\n    }\n\n    ngOnDestroy(): void {\n        this.blockUiDirective.ngOnDestroy();\n        this._eventCompleteSub?.unsubscribe();\n    }\n}\n","<ng-container *ngIf=\"skill\">\n    <!-- (click)=\"skillCardClickHandler(skill)\" -->\n    <div tabindex=\"0\"\n         class=\"relative flex flex-col justify-between h-full p-4 space-y-4 text-left border border-gray-200 rounded-lg hover:border-gray-300 focus-within:ring-1 focus-within:ring-inset focus-within:ring-indigo-500\">\n        <h3 class=\"text-lg font-medium text-gray-700\">{{ skill.name}}</h3>\n        <div class=\"skill-stats\">\n            <div class=\"skill-stats__info\">\n                <span\n                      class=\"mr-4 text-xs font-thin text-gray-500 transition-colors duration-200 hover:text-gray-900\">Employees</span>\n                <span class=\"text-xl font-normal text-gray-700\">{{ skill.employees }}</span>\n            </div>\n            <div class=\"skill-stats__info\">\n                <span\n                      class=\"mr-4 text-xs font-thin text-gray-500 transition-colors duration-200 hover:text-gray-900\">Team\n                    Competency</span>\n                <span class=\"text-xl font-normal text-gray-700\">{{ skill.teamCompetency }}</span>\n            </div>\n        </div>\n        <div class=\"flex items-center h-5\">\n            <span title=\"{{getCategoryInfo(skill)}}\"\n                  class=\"flex-1 pr-2 text-sm font-thin text-gray-500 truncate\">{{getCategoryInfo(skill)}}</span>\n            <div class=\"relative\">\n                <app-button-icon (buttonClick)=\"onToggleContextMenu()\">\n                    <app-icon-dot-vertical></app-icon-dot-vertical>\n                </app-button-icon>\n                <button *ngIf=\"isContextMenuVisible\" (click)=\"onToggleContextMenu()\" class=\"close-overlay\"\n                        tabindex=\"-1\"></button>\n                <app-context-menu [handle]=\"contextMenuHandle\" *ngIf=\"isContextMenuVisible\"\n                                  (menuItemClick)=\"onMenuItemClick($event)\" [menuItems]=\"menuItems\"\n                                  class=\"absolute right-0 w-40\"></app-context-menu>\n            </div>\n        </div>\n    </div>\n    <!-- <ng-container #blockUiOverlay></ng-container> -->\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ButtonIconModule, ContextMenuModule, IconsModule } from '@sharedlib';\n\nimport { SkillCardComponent } from './skill-card.component';\n\n\n\n@NgModule({\n    declarations: [SkillCardComponent],\n    imports: [\n        CommonModule,\n\n        ButtonIconModule,\n        IconsModule,\n        ContextMenuModule\n    ],\n    exports: [SkillCardComponent]\n})\nexport class SkillCardModule { }\n","// export * from './skill-card.model';\r\nexport * from './skill-card.component';\r\nexport * from './skill-card.module';","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ISkillCategory } from '../../models/skill.model';\n\n@Component({\n    selector: 'skl-category-card',\n    templateUrl: './skill-category-card.component.html',\n    styleUrls: ['./skill-category-card.component.scss']\n})\nexport class SkillCategoryCardComponent implements OnInit {\n\n    @Input() category: ISkillCategory | undefined;\n    @Output() onCardClick = new EventEmitter<ISkillCategory>();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    onCardClickHandler(category: ISkillCategory): void {\n        this.onCardClick.emit(category);\n    }\n\n}\n","<ng-container *ngIf=\"category\">\n    <div tabindex=\"0\" (click)=\"onCardClickHandler(category)\"\n         class=\"flex flex-col justify-between h-full p-4 space-y-4 text-left border border-gray-200 rounded-lg hover:border-gray-300 focus-within:ring-1 focus-within:ring-inset focus-within:ring-indigo-500\">\n        <h3 class=\"text-lg font-medium text-gray-700\">{{ category.name}}</h3>\n    </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SkillCategoryCardComponent } from './skill-category-card.component';\n\n\n\n@NgModule({\n    declarations: [SkillCategoryCardComponent],\n    imports: [\n        CommonModule\n    ],\n    exports: [SkillCategoryCardComponent]\n})\nexport class SkillCategoryCardModule { }\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { debounceTime, filter, startWith, switchMap } from 'rxjs/operators';\n\nimport { ISkill, ISkillCategory, ISkillSubCategory } from '../../models/skill.model';\nimport { SkillFormService } from '../../services/skill-form.service';\nimport { SkillsService } from '../../services/skills.service';\n\n@Component({\n    selector: 'skl-form',\n    templateUrl: './skill-form.component.html',\n    styleUrls: ['./skill-form.component.scss']\n})\nexport class SkillFormComponent implements OnInit, OnDestroy {\n\n    public form: FormGroup | undefined;\n    public formIsValid: boolean = false;\n    public isSubcategoryDisabled: boolean = true;\n\n    private _categoryValueChangeSub: Subscription | undefined;\n    private _formStatusChangeSub: Subscription | undefined;\n    private _resetForm$: Observable<void>;\n\n    private _routeDataSub: Subscription | undefined;\n    private _skill: ISkill | undefined;\n\n    @Input() categories: ISkillCategory[] = [];\n    @Input() subcategories?: ISkillSubCategory[] = [];\n    @Input() buttonLabel: string = 'Save';\n\n    // ngOnInit is called before set skill\n    @Input() set skill(skill: ISkill | undefined) {\n        this._skill = skill;\n        this.initForm(this._skill);\n    }\n\n    @Output() commitSkill = new EventEmitter<ISkill>();\n\n    get nameControl() { return this.form?.get('name') as FormControl; }\n    get categoryControl() { return this.form?.get('categoryId') as FormControl; }\n    get subcategoryControl() { return this.form?.get('subcategoryId') as FormControl; }\n\n    constructor(\n        private fb: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private skillService: SkillsService,\n        private skillFormService: SkillFormService\n    ) {\n        this._resetForm$ = this.skillFormService.resetForm$;\n    }\n\n    ngOnInit(): void {\n        this.initForm(this._skill);\n        // this.listenCategoryValueChange();\n        this.listenFormStatusChange();\n        this.listenFormReset();\n    }\n\n    initForm(skill: ISkill | undefined): void {\n        if (!this.form) {\n            this.form = this.fb.group({\n                name: [skill?.name || '', [Validators.required, Validators.minLength(3)]],\n                // categoryId: [skill?.categoryId || '', [Validators.required]],\n                // subcategoryId: [skill?.subcategoryId || '', [Validators.required]],\n            });\n            return;\n        }\n\n        // console.log('initForm', skill);\n        this.form.setValue({\n            name: skill?.name || '',\n            // categoryId: skill?.categoryId || '',\n            // subcategoryId: skill?.subcategoryId || '',\n        });\n\n        // this.categoryControl.disable();\n        // this.subcategoryControl.disable();\n    }\n\n    onCommitSkill(): void {\n        if (this.formIsValid && this.form?.valid) {\n            this.commitSkill.emit(\n                this._skill?.id\n                    ? { ...this.form.value, categoryId: this._skill?.categoryId, subcategoryId: this._skill?.subcategoryId, id: this._skill.id }\n                    : { ...this.form.value, categoryId: this._skill?.categoryId, subcategoryId: this._skill?.subcategoryId }\n            );\n\n            // this.commitSkill.emit(this.form.value);\n        } else {\n            this.form?.markAllAsTouched();\n        }\n    }\n\n    listenCategoryValueChange(): void {\n        this._categoryValueChangeSub = this.categoryControl.valueChanges\n            .pipe(\n                startWith(this._skill?.categoryId),\n                filter(categoryId => !!categoryId),\n                switchMap(categoryId => this.skillService.getSubCategories(categoryId))\n            )\n            .subscribe(subCategories => {\n                this.subcategories = subCategories;\n                this.subcategoryControl.patchValue(this._skill?.subcategoryId || '');\n                // this.isSubcategoryDisabled = false;\n                // this.subcategoryControl.enable();\n            });\n    }\n\n    listenFormStatusChange(): void {\n        this._formStatusChangeSub = this.form?.statusChanges\n            .pipe(\n                /**\n                 * The Debouncetime emits the last received value\n                 * from the source observable after a specified amount\n                 * of time has elapsed without any other value appearing\n                 * on the source Observable\n                 */\n                debounceTime(100)\n            )\n            .subscribe(formStatus => {\n                if (formStatus === \"INVALID\" || formStatus === \"PENDING\")\n                    this.formIsValid = false;\n                else\n                    this.formIsValid = true;\n            });\n    }\n\n    listenFormReset(): void {\n        this._resetForm$.subscribe(() => {\n            this.form?.reset();\n        });\n    }\n\n    onCategoryChange(e: any): void {\n        // this.isSubcategoryDisabled = true;\n        this.subcategoryControl.disable();\n    }\n\n    onCloseClick() {\n        this.router.navigate(['/skills', { outlets: { details: null } }]);\n    }\n\n    ngOnDestroy(): void {\n        this._categoryValueChangeSub?.unsubscribe();\n        this._formStatusChangeSub?.unsubscribe();\n        this._routeDataSub?.unsubscribe();\n    }\n\n}\n","<div class=\"flex flex-col py-5 space-y-6 border-t border-gray-200\">\n    <ng-container *ngIf=\"form\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onCommitSkill()\" class=\"psr-form__form\">\n            <div>\n                <label class=\"psr-form__label\" for=\"name\">Skill name</label>\n                <input formControlName=\"name\" id=\"name\" name=\"name\" type=\"text\"\n                       class=\"psr-form__field psr-form__field--alt\" placeholder=\"\" />\n            </div>\n            <!-- <div>\n                <label class=\"psr-form__label\" for=\"category\">Category</label>\n                <select formControlName=\"categoryId\" (change)=\"onCategoryChange($event)\" id=\"category\" name=\"category\"\n                        class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> -- </option>\n                    <option [value]=\"category.id\" *ngFor=\"let category of categories\">{{ category.name }}\n                    </option>\n                </select>\n            </div>\n            <div>\n                <label class=\"psr-form__label\" for=\"sub-category\">Sub category</label>\n                <select formControlName=\"subcategoryId\" [disableControl]=\"isSubcategoryDisabled\" id=\"sub-category\" name=\"sub-category\"\n                        class=\"psr-form__select psr-form__select--alt\">\n                    <option value=\"\" selected> -- </option>\n                    <option [value]=\"item.id\" *ngFor=\"let item of subcategories\">{{ item.name }}\n                    </option>\n                </select>\n            </div> -->\n            <div>\n                <button [disabled]=\"!formIsValid\" class=\"psr-form__button\" type=\"submit\">\n                    {{buttonLabel}}\n                </button>\n            </div>\n        </form>\n    </ng-container>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DisableControlModule } from '@sharedlib';\n\nimport { SkillFormComponent } from './skill-form.component';\n\n\n\n@NgModule({\n    declarations: [\n        SkillFormComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        DisableControlModule\n    ],\n    exports: [SkillFormComponent]\n})\nexport class SkillFormModule { }\n","import { AfterContentInit, Component, ContentChildren, Input, OnDestroy, OnInit, QueryList } from '@angular/core';\n\nimport { ISkillCard } from '../../models';\nimport { SKILL_CARD_TOKEN } from './skill-card.token';\n\n@Component({\n    selector: 'skl-list-display',\n    templateUrl: './skill-list-display.component.html',\n    styleUrls: ['./skill-list-display.component.scss'],\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SkillListDisplayComponent implements OnInit, OnDestroy, AfterContentInit {\n    @ContentChildren(SKILL_CARD_TOKEN) cards: QueryList<ISkillCard> | undefined;\n    @Input() isAddSkillCardVisible: boolean = false;\n    @Input() isSkillsVisible: boolean = false;\n\n    constructor() { }\n\n    ngOnInit(): void {\n\n    }\n\n    ngAfterContentInit(): void {\n        // console.log('this.cards', this.cards?.toArray());\n    }\n\n    /* isBlockableSkillCard(componentRef: any): componentRef is IBlockableSkillCard {\n        const prototype = Object.getPrototypeOf(componentRef);\n        // console.log(prototype);\n        return 'initView' in prototype\n            && 'ngOnDestroy' in prototype;\n    } */\n\n    ngOnDestroy(): void {\n\n    }\n\n}\n","<div class=\"skill-list\">\n    <ng-container *ngIf=\"isSkillsVisible\">\n        <!-- <skl-add-card *ngIf=\"isAddSkillCardVisible\" (addSkillCardClick)=\"addSkillCardClickHandler()\">\n        </skl-add-card>\n        <ng-container #skillListContainer></ng-container> -->\n        <ng-content></ng-content>\n\n    </ng-container>\n    <ng-template #mask>\n        <div class=\"ui-blockui ui-widget-overlay\">\n            <svg class=\"w-12 h-12 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\n                 xmlns=\"http://www.w3.org/2000/svg\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                      d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n        </div>\n    </ng-template>\n</div>\n<!-- <ng-container *ngFor=\"let skill of skills\"> -->\n<!-- (skillCardClick)=\"skillCardClickHandler($event)\" [x-compref]=\"skillCard\"  -->\n<!-- <skl-card #skillCard [menuItems]=\"menuItems\" [x-blockui]=\"skillCard.blockCard\" [x-overlay-tpl]=\"mask\"\n                            [skill]=\"skill\" (contextMenuItemEvent)=\"onCardItemEvent($event)\"></skl-card> -->\n<!-- <app-block-ui class=\"hidden\" [target]=\"skillCard\" [blocked]=\"skill?.deleting || false\"></app-block-ui> -->\n<!-- </ng-container> -->\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BlockUiModule, EmptyStateModule } from '@sharedlib';\n\nimport { AddSkillCardModule } from '../add-skill-card/add-skill-card.module';\nimport { SkillCardModule } from '../skill-card/skill-card.module';\nimport { SkillListDisplayComponent } from './skill-list-display.component';\n\n\n\n@NgModule({\n    declarations: [SkillListDisplayComponent],\n    imports: [\n        CommonModule,\n\n        BlockUiModule,\n        EmptyStateModule,\n        AddSkillCardModule,\n        SkillCardModule,\n    ],\n    exports: [SkillListDisplayComponent]\n})\nexport class SkillListDisplayModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ISkill } from '../../models/skill.model';\n\n@Component({\n    selector: 'skl-read',\n    templateUrl: './skill-read.component.html',\n    styleUrls: ['./skill-read.component.scss']\n})\nexport class SkillReadComponent implements OnInit {\n\n    skill: ISkill | undefined;\n\n    title: string = 'Skill Information';\n    description: string = 'Detils of the skill.';\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({ skill }) => {\n            this.skill = skill;\n        });\n    }\n\n    onCloseClick() {\n        this.router.navigate(['/skills', { outlets: { details: null } }]);\n    }\n}\n","<app-secondary-header [title]=\"title\" [description]=\"description\" (closeClick)=\"onCloseClick()\"></app-secondary-header>\n<ng-container *ngIf=\"skill\">\n    <div class=\"flex flex-col py-5 space-y-6\">\n        <app-read-field [fieldLabel]=\"'Skill name'\" [fieldValue]=\"skill.name\"></app-read-field>\n        <app-read-field [fieldLabel]=\"'Category'\" [fieldValue]=\"skill.categoryName\"></app-read-field>\n        <app-read-field [fieldLabel]=\"'Sub category'\" [fieldValue]=\"skill.subcategoryName\"></app-read-field>\n        <app-read-field [fieldLabel]=\"'Employees'\" [fieldValue]=\"skill.employees\"></app-read-field>\n        <app-read-field [fieldLabel]=\"'Team competency'\" [fieldValue]=\"skill.teamCompetency\"></app-read-field>\n    </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReadFieldModule, SecondaryHeaderModule } from '@sharedlib';\n\nimport { SkillReadComponent } from './skill-read.component';\n\n\n\n@NgModule({\n    declarations: [SkillReadComponent],\n    imports: [\n        CommonModule,\n\n        ReadFieldModule,\n        SecondaryHeaderModule\n    ],\n    exports: [SkillReadComponent]\n})\nexport class SkillReadModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nimport { ISkillSubCategory } from '../../models/skill.model';\n\n@Component({\n    selector: 'skl-subcategory-card',\n    templateUrl: './skill-subcategory-card.component.html',\n    styleUrls: ['./skill-subcategory-card.component.scss']\n})\nexport class SkillSubcategoryCardComponent implements OnInit {\n\n    @Input() subcategory: ISkillSubCategory | undefined;\n    @Output() onCardClick = new EventEmitter<ISkillSubCategory>();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    onCardClickHandler(subcategory: ISkillSubCategory): void {\n        this.onCardClick.emit(subcategory);\n    }\n}\n","<ng-container *ngIf=\"subcategory\">\n    <div tabindex=\"0\" (click)=\"onCardClickHandler(subcategory)\"\n         class=\"flex flex-col justify-between h-full p-4 space-y-4 text-left border border-gray-200 rounded-lg hover:border-gray-300 focus-within:ring-1 focus-within:ring-inset focus-within:ring-indigo-500\">\n        <h3 class=\"text-lg font-medium text-gray-700\">{{ subcategory.name}}</h3>\n    </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SkillSubcategoryCardComponent } from './skill-subcategory-card.component';\n\n\n\n@NgModule({\n    declarations: [SkillSubcategoryCardComponent],\n    imports: [\n        CommonModule\n    ],\n    exports: [SkillSubcategoryCardComponent]\n})\nexport class SkillSubcategoryCardModule { }\n","import { NgModule } from '@angular/core';\n\nimport { AddSkillCardModule } from './components/add-skill-card/add-skill-card.module';\nimport { SkillCardModule } from './components/skill-card/skill-card.module';\nimport { SkillCategoryCardModule } from './components/skill-category-card/skill-category-card.module';\nimport { SkillFormModule } from './components/skill-form/skill-form.module';\nimport { SkillListDisplayModule } from './components/skill-list-display/skill-list-display.module';\nimport { SkillReadModule } from './components/skill-read/skill-read.module';\nimport { SkillSubcategoryCardModule } from './components/skill-subcategory-card/skill-subcategory-card.module';\nimport { SelectedCategoryResolver } from './resolvers/selected-category.resolver';\nimport { SelectedSubcategoryResolver } from './resolvers/selected-subcategory.resolver';\nimport { SkillAddResolver } from './resolvers/skill-add.resolver';\nimport { SkillCategoryResolver } from './resolvers/skill-category.resolver';\nimport { SkillListResolver } from './resolvers/skill-list.resolver';\nimport { SkillSubcategoryResolver } from './resolvers/skill-subcategory.resolver';\nimport { SkillResolver } from './resolvers/skill.resolver';\nimport { SkillCardContextMenuitemService } from './services/skill-card-context-menuitem.service';\nimport { SkillFormService } from './services/skill-form.service';\nimport { SkillsService } from './services/skills.service';\n\n\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        AddSkillCardModule,\n        SkillCardModule,\n        SkillCategoryCardModule,\n        SkillFormModule,\n        SkillReadModule,\n        SkillSubcategoryCardModule,\n        SkillListDisplayModule\n    ],\n    exports: [\n    ],\n    providers: [\n        SkillsService,\n        SkillFormService,\n        SkillCardContextMenuitemService,\n\n        SkillListResolver,\n        SkillResolver,\n        SkillAddResolver,\n        SkillCategoryResolver,\n        SkillSubcategoryResolver,\n        SelectedCategoryResolver,\n        SelectedSubcategoryResolver\n    ]\n})\nexport class SkilllibModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAaA,IAAI,SAAS,GAAoB;IAC7B,SAAS,EAAE,CAAC,MAAkB,KAAK,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;IAC1D,iCAAiC,EAAE,CAAC,MAAkB,EAAE,UAAkB,EAAE,aAAqB;QAC7F,OAAO,MAAM,CAAC,MAAM,CAAC,qBAAqB,UAAU,kBAAkB,aAAa,OAAO,CAAC,CAAC;KAC/F;IACD,QAAQ,EAAE,CAAC,MAAkB,EAAE,EAAU,KAAK,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;IAC3E,kBAAkB,EAAE,CAAC,MAAkB,KAAK,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC;IAC9E,qBAAqB,EAAE,CAAC,MAAkB,EAAE,UAAkB,KAAK,MAAM,CAAC,MAAM,CAAC,qBAAqB,UAAU,gBAAgB,CAAC;IACjI,gBAAgB,EAAE,CAAC,MAAkB,EAAE,EAAU,KAAK,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC9F,mBAAmB,EAAE,CAAC,MAAkB,EAAE,EAAU,KAAK,MAAM,CAAC,MAAM,CAAC,wBAAwB,EAAE,EAAE,CAAC;CACvG,CAAC;MAKW,cAAc,GAAoB;;MCnBlC,aAAa;IAEtB,YACY,IAAgB,EACU,SAAqB;QAD/C,SAAI,GAAJ,IAAI,CAAY;QACU,cAAS,GAAT,SAAS,CAAY;KACtD;IAEE,SAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;;SAE5E,CAAC;KACL;IAEM,iCAAiC,CAAC,UAAkB,EAAE,aAAqB;QAC9E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,cAAc,CAAC,iCAAiC,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC,IAAI;;SAE/H,CAAC;KACL;IAEM,QAAQ,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI;;SAE7E,CAAC;KACL;IAEM,WAAW,CAAC,EAAU;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI;;SAErF,CAAC;KACL;IAEM,cAAc,CAAC,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI;;SAExF,CAAC;KACL;IAEM,aAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;;SAE7F,CAAC;KACL;IAEM,gBAAgB,CAAC,UAAkB;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI;;SAE/G,CAAC;KACL;;2GA/CQ,aAAa,4CAIV,gBAAgB;+GAJnB,aAAa;4FAAb,aAAa;kBADzB,UAAU;;0BAKF,MAAM;2BAAC,gBAAgB;;;MCFnB,wBAAwB;IACjC,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;KAAK;IACpD,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC7D,OAAO,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CACxB,KAAK,CAAC,YAAY,CAAC,EACnB,SAAS,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CACvE,CAAC;KACL;;sHAPQ,wBAAwB;0HAAxB,wBAAwB,cAFrB,MAAM;4FAET,wBAAwB;kBAHpC,UAAU;mBAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;MCCY,2BAA2B;IACpC,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;KAAK;IACpD,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC7D,OAAO,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CACxB,KAAK,CAAC,eAAe,CAAC,EACtB,SAAS,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAChF,CAAC;KACL;;yHAPQ,2BAA2B;6HAA3B,2BAA2B,cAFxB,MAAM;4FAET,2BAA2B;kBAHvC,UAAU;mBAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;MCFY,gBAAgB;IACzB,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;KAAK;IACpD,OAAO,CAAC,KAA6B,EAAE,KAA0B;;QAC7D,MAAM,UAAU,GAAG,MAAA,MAAA,MAAA,KAAK,CAAC,MAAM,0CAAE,IAAI,0CAAE,cAAc,0CAAE,UAAU,CAAC;QAClE,OAAO,UAAU;cACX,EAAE,CAAC,UAAU,CAAC;cACd,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;KAC3C;;8GAPQ,gBAAgB;kHAAhB,gBAAgB;4FAAhB,gBAAgB;kBAD5B,UAAU;;;MCCE,qBAAqB;IAC9B,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;KAAK;IACpD,OAAO,CAAC,KAA6B,EAAE,KAA0B;;QAC7D,MAAM,UAAU,GAAG,MAAA,MAAA,MAAA,KAAK,CAAC,MAAM,0CAAE,IAAI,0CAAE,cAAc,0CAAE,UAAU,CAAC;QAClE,OAAO,UAAU;cACX,EAAE,CAAC,UAAU,CAAC;cACd,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;KAC3C;;mHAPQ,qBAAqB;uHAArB,qBAAqB;4FAArB,qBAAqB;kBADjC,UAAU;;;MCIE,iBAAiB;IAC1B,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;KAAK;IACpD,OAAO,CAAC,KAA6B,EAAE,KAA0B;;QAE7D,MAAM,UAAU,GAAG,MAAA,MAAA,MAAA,KAAK,CAAC,MAAM,0CAAE,IAAI,0CAAE,cAAc,0CAAE,UAAU,CAAC;QAClE,MAAM,WAAW,GAAG,UAAU,GAAG,EAAE,CAAmB,UAAU,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;QACtG,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAChC,KAAK,CAAC,IAAI,CAAC,EACX,SAAS,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC/C,IAAI,CAAC,CAAC,CAAC,CACV,CAAC;QAEF,OAAO,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;KACnC;;+GAbQ,iBAAiB;mHAAjB,iBAAiB,cAFd,MAAM;4FAET,iBAAiB;kBAH7B,UAAU;mBAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;MCDY,iBAAiB;IAC1B,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;KAAK;IACpD,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC7D,OAAO,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CACxB,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,CAAC,CAAC,EACvE,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,iCAAiC,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,EACjH,IAAI,CAAC,CAAC,CAAC,CAEV,CAAC;KACL;;+GATQ,iBAAiB;mHAAjB,iBAAiB;4FAAjB,iBAAiB;kBAD7B,UAAU;;;MCAE,wBAAwB;IACjC,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;KAAK;IACpD,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC7D,OAAO,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CACxB,KAAK,CAAC,YAAY,CAAC,EACnB,SAAS,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,EACvD,IAAI,CAAC,CAAC,CAAC,CAEV,CAAC;KACL;;sHATQ,wBAAwB;0HAAxB,wBAAwB;4FAAxB,wBAAwB;kBADpC,UAAU;;;MCEE,aAAa;IACtB,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;KAAK;IACpD,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC7D,OAAO,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CACxB,KAAK,CAAC,IAAI,CAAC,EACX,SAAS,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAC/C,IAAI,CAAC,CAAC,CAAC,CAEV,CAAC;;KAEL;;2GAVQ,aAAa;+GAAb,aAAa;4FAAb,aAAa;kBADzB,UAAU;;;MCJE,+BAA+B;IAsBxC;QApBQ,uBAAkB,GAAG,IAAI,OAAO,EAAyC,CAAC;QAC1E,0BAAqB,GAAG,IAAI,OAAO,EAAyC,CAAC;KAmBpE;IAjBjB,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACjD;IAED,IAAW,gBAAgB;QACvB,OAAO,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;KACpD;IAEM,KAAK,CAAC,OAAe,EAAE,QAAgB;QAC1C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;KACvD;IAEM,QAAQ,CAAC,OAAe,EAAE,QAAgB;QAC7C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;KAC1D;;6HAnBQ,+BAA+B;iIAA/B,+BAA+B;4FAA/B,+BAA+B;kBAD3C,UAAU;;;MCGE,gBAAgB;IAQzB;QANQ,sBAAiB,GAAG,IAAI,OAAO,EAAQ,CAAC;KAM/B;IAJjB,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;KAChD;IAID,SAAS;QACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KACjC;;8GAZQ,gBAAgB;kHAAhB,gBAAgB,cAFb,MAAM;4FAET,gBAAgB;kBAH5B,UAAU;mBAAC;oBACR,UAAU,EAAE,MAAM;iBACrB;;;MCDY,gBAAgB,GAAG,IAAI,cAAc,CAAa,kBAAkB;;MCOpE,qBAAqB;IAQ9B;QANU,sBAAiB,GAAG,IAAI,YAAY,EAAQ,CAAC;QAEhD,cAAS,GAAY,KAAK,CAAC;QAC3B,cAAS,GAAY,KAAK,CAAC;QAC3B,SAAI,GAAoC,KAAK,CAAC;KAEpC;IAEjB,QAAQ;KACP;IAED,wBAAwB;QACpB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KACjC;IAED,OAAO;QACH,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAC1B;;mHAnBQ,qBAAqB;uGAArB,qBAAqB,4FAFnB,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,qBAAqB,EAAE,CAAC,0BCTlF,upBAQA;4FDGa,qBAAqB;kBANjC,SAAS;mBAAC;oBACP,QAAQ,EAAE,cAAc;oBACxB,WAAW,EAAE,iCAAiC;oBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;oBAC9C,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,uBAAuB,EAAE,CAAC;iBACjF;0EAGa,iBAAiB;sBAA1B,MAAM;;;MECE,kBAAkB;;gHAAlB,kBAAkB;iHAAlB,kBAAkB,iBANZ,qBAAqB,aAEhC,YAAY,aAEN,qBAAqB;iHAEtB,kBAAkB,YALlB;YACL,YAAY;SACf;4FAGQ,kBAAkB;kBAP9B,QAAQ;mBAAC;oBACN,YAAY,EAAE,CAAC,qBAAqB,CAAC;oBACrC,OAAO,EAAE;wBACL,YAAY;qBACf;oBACD,OAAO,EAAE,CAAC,qBAAqB,CAAC;iBACnC;;;MCGY,kBAAkB;IA4B3B,YACY,EAAc,EACd,MAAc,EACd,QAAmB,EACnB,WAA4C;QAH5C,OAAE,GAAF,EAAE,CAAY;QACd,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAW;QACnB,gBAAW,GAAX,WAAW,CAAiC;QA/B1B,qBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAMrF,cAAS,GAAoB,EAAE,CAAC;QAEjC,eAAU,GAAY,KAAK,CAAC;;QAM7B,yBAAoB,GAAY,KAAK,CAAC;QACtC,sBAAiB,GAAW,MAAM,CAAC,mBAAmB,CAAC,CAAC;QACxD,SAAI,GAAoC,UAAU,CAAC;QAmBtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;KAC5D;IAlBD,IAAW,SAAS,CAAC,KAAc;QAC/B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;QAExB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAC9C;IACD,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;IAaD,QAAQ,MAAY;IAEpB,eAAe,CAAC,KAAa;QACzB,OAAO,GAAG,KAAK,CAAC,YAAY,MAAM,KAAK,CAAC,eAAe,EAAE,CAAC;KAC7D;IAGD,cAAc,CAAC,CAAgB;QAC3B,IAAI,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;YACvC,IAAI,IAAI,CAAC,oBAAoB;gBAAE,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;SACpE;KACJ;IAED,mBAAmB;QACf,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC;KAC1D;IAED,eAAe,CAAC,EAAE,QAAQ,EAAE,MAAM,EAA8B;;QAC5D,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAA,IAAI,CAAC,KAAK,0CAAE,EAAE,CAAC,CAAC;QAEvD,IAAI,QAAQ,CAAC,WAAW,EAAE;YACtB,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;kBACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;kBAChC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAC/C;aAAM;YACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;SACtE;QAED,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE;YACjD,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,OAAO,EAAE;gBACzC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aAC1B;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;KACrC;IAED,WAAW;;QACP,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACpC,MAAA,IAAI,CAAC,iBAAiB,0CAAE,WAAW,EAAE,CAAC;KACzC;;gHAhFQ,kBAAkB;oGAAlB,kBAAkB,wNAHhB,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,kBAAkB,EAAE,CAAC,0BCb/E,inEAmCA;4FDnBa,kBAAkB;kBAP9B,SAAS;mBAAC;oBACP,QAAQ,EAAE,UAAU;oBACpB,WAAW,EAAE,6BAA6B;oBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;oBAC1C,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,oBAAoB,EAAE,CAAC;;iBAE9E;2LAEiC,gBAAgB;sBAA7C,WAAW;uBAAC,eAAe;gBAKnB,KAAK;sBAAb,KAAK;gBACG,SAAS;sBAAjB,KAAK;gBAuCN,cAAc;sBADb,YAAY;uBAAC,kBAAkB,EAAE,CAAC,QAAQ,CAAC;;;ME1CnC,eAAe;;6GAAf,eAAe;8GAAf,eAAe,iBAVT,kBAAkB,aAE7B,YAAY;QAEZ,gBAAgB;QAChB,WAAW;QACX,iBAAiB,aAEX,kBAAkB;8GAEnB,eAAe,YATf;YACL,YAAY;YAEZ,gBAAgB;YAChB,WAAW;YACX,iBAAiB;SACpB;4FAGQ,eAAe;kBAX3B,QAAQ;mBAAC;oBACN,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE;wBACL,YAAY;wBAEZ,gBAAgB;wBAChB,WAAW;wBACX,iBAAiB;qBACpB;oBACD,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAChC;;;AClBD;;MCSa,0BAA0B;IAKnC;QAFU,gBAAW,GAAG,IAAI,YAAY,EAAkB,CAAC;KAE1C;IAEjB,QAAQ;KACP;IAED,kBAAkB,CAAC,QAAwB;QACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnC;;wHAZQ,0BAA0B;4GAA1B,0BAA0B,oICTvC,waAMA;4FDGa,0BAA0B;kBALtC,SAAS;mBAAC;oBACP,QAAQ,EAAE,mBAAmB;oBAC7B,WAAW,EAAE,sCAAsC;oBACnD,SAAS,EAAE,CAAC,sCAAsC,CAAC;iBACtD;0EAGY,QAAQ;sBAAhB,KAAK;gBACI,WAAW;sBAApB,MAAM;;;MEEE,uBAAuB;;qHAAvB,uBAAuB;sHAAvB,uBAAuB,iBANjB,0BAA0B,aAErC,YAAY,aAEN,0BAA0B;sHAE3B,uBAAuB,YALvB;YACL,YAAY;SACf;4FAGQ,uBAAuB;kBAPnC,QAAQ;mBAAC;oBACN,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,OAAO,EAAE;wBACL,YAAY;qBACf;oBACD,OAAO,EAAE,CAAC,0BAA0B,CAAC;iBACxC;;;MCEY,kBAAkB;IA6B3B,YACY,EAAe,EACf,KAAqB,EACrB,MAAc,EACd,YAA2B,EAC3B,gBAAkC;QAJlC,OAAE,GAAF,EAAE,CAAa;QACf,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAe;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAkB;QA/BvC,gBAAW,GAAY,KAAK,CAAC;QAC7B,0BAAqB,GAAY,IAAI,CAAC;QASpC,eAAU,GAAqB,EAAE,CAAC;QAClC,kBAAa,GAAyB,EAAE,CAAC;QACzC,gBAAW,GAAW,MAAM,CAAC;QAQ5B,gBAAW,GAAG,IAAI,YAAY,EAAU,CAAC;QAa/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;KACvD;;IAnBD,IAAa,KAAK,CAAC,KAAyB;QACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9B;IAID,IAAI,WAAW,aAAK,OAAO,MAAA,IAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,MAAM,CAAgB,CAAC,EAAE;IACnE,IAAI,eAAe,aAAK,OAAO,MAAA,IAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,YAAY,CAAgB,CAAC,EAAE;IAC7E,IAAI,kBAAkB,aAAK,OAAO,MAAA,IAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,eAAe,CAAgB,CAAC,EAAE;IAYnF,QAAQ;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;QAE3B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;KAC1B;IAED,QAAQ,CAAC,KAAyB;QAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACtB,IAAI,EAAE,CAAC,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,KAAI,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;;aAG5E,CAAC,CAAC;YACH,OAAO;SACV;;QAGD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACf,IAAI,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,KAAI,EAAE;;;SAG1B,CAAC,CAAC;;;KAIN;IAED,aAAa;;QACT,IAAI,IAAI,CAAC,WAAW,KAAI,MAAA,IAAI,CAAC,IAAI,0CAAE,KAAK,CAAA,EAAE;YACtC,IAAI,CAAC,WAAW,CAAC,IAAI,CACjB,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,EAAE;kDACJ,IAAI,CAAC,IAAI,CAAC,KAAK,KAAE,UAAU,EAAE,MAAA,IAAI,CAAC,MAAM,0CAAE,UAAU,EAAE,aAAa,EAAE,MAAA,IAAI,CAAC,MAAM,0CAAE,aAAa,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,sCACnH,IAAI,CAAC,IAAI,CAAC,KAAK,KAAE,UAAU,EAAE,MAAA,IAAI,CAAC,MAAM,0CAAE,UAAU,EAAE,aAAa,EAAE,MAAA,IAAI,CAAC,MAAM,0CAAE,aAAa,GAAE,CAC/G,CAAC;;SAGL;aAAM;YACH,MAAA,IAAI,CAAC,IAAI,0CAAE,gBAAgB,EAAE,CAAC;SACjC;KACJ;IAED,yBAAyB;;QACrB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY;aAC3D,IAAI,CACD,SAAS,CAAC,MAAA,IAAI,CAAC,MAAM,0CAAE,UAAU,CAAC,EAClC,MAAM,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,EAClC,SAAS,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAC1E;aACA,SAAS,CAAC,aAAa;;YACpB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,aAAa,KAAI,EAAE,CAAC,CAAC;;;SAGxE,CAAC,CAAC;KACV;IAED,sBAAsB;;QAClB,IAAI,CAAC,oBAAoB,GAAG,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAC/C,IAAI;;;;;;;QAOD,YAAY,CAAC,GAAG,CAAC,EAEpB,SAAS,CAAC,UAAU;YACjB,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,SAAS;gBACpD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;;gBAEzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC/B,CAAC,CAAC;KACV;IAED,eAAe;QACX,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;;YACvB,MAAA,IAAI,CAAC,IAAI,0CAAE,KAAK,EAAE,CAAC;SACtB,CAAC,CAAC;KACN;IAED,gBAAgB,CAAC,CAAM;;QAEnB,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;KACrC;IAED,YAAY;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;KACrE;IAED,WAAW;;QACP,MAAA,IAAI,CAAC,uBAAuB,0CAAE,WAAW,EAAE,CAAC;QAC5C,MAAA,IAAI,CAAC,oBAAoB,0CAAE,WAAW,EAAE,CAAC;QACzC,MAAA,IAAI,CAAC,aAAa,0CAAE,WAAW,EAAE,CAAC;KACrC;;gHAtIQ,kBAAkB;oGAAlB,kBAAkB,2MCf/B,g2DAkCA;4FDnBa,kBAAkB;kBAL9B,SAAS;mBAAC;oBACP,QAAQ,EAAE,UAAU;oBACpB,WAAW,EAAE,6BAA6B;oBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;iBAC7C;+MAcY,UAAU;sBAAlB,KAAK;gBACG,aAAa;sBAArB,KAAK;gBACG,WAAW;sBAAnB,KAAK;gBAGO,KAAK;sBAAjB,KAAK;gBAKI,WAAW;sBAApB,MAAM;;;MElBE,eAAe;;6GAAf,eAAe;8GAAf,eAAe,iBATpB,kBAAkB,aAGlB,YAAY;QACZ,mBAAmB;QACnB,oBAAoB,aAEd,kBAAkB;8GAEnB,eAAe,YAPf;YACL,YAAY;YACZ,mBAAmB;YACnB,oBAAoB;SACvB;4FAGQ,eAAe;kBAX3B,QAAQ;mBAAC;oBACN,YAAY,EAAE;wBACV,kBAAkB;qBACrB;oBACD,OAAO,EAAE;wBACL,YAAY;wBACZ,mBAAmB;wBACnB,oBAAoB;qBACvB;oBACD,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAChC;;;MCRY,yBAAyB;IAKlC;QAHS,0BAAqB,GAAY,KAAK,CAAC;QACvC,oBAAe,GAAY,KAAK,CAAC;KAEzB;IAEjB,QAAQ;KAEP;IAED,kBAAkB;;KAEjB;;;;;;;IASD,WAAW;KAEV;;uHAxBQ,yBAAyB;2GAAzB,yBAAyB,8KACjB,gBAAgB,6BCZrC,wzCAwBA;4FDba,yBAAyB;kBANrC,SAAS;mBAAC;oBACP,QAAQ,EAAE,kBAAkB;oBAC5B,WAAW,EAAE,qCAAqC;oBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;;iBAErD;0EAEsC,KAAK;sBAAvC,eAAe;uBAAC,gBAAgB;gBACxB,qBAAqB;sBAA7B,KAAK;gBACG,eAAe;sBAAvB,KAAK;;;MEQG,sBAAsB;;oHAAtB,sBAAsB;qHAAtB,sBAAsB,iBAXhB,yBAAyB,aAEpC,YAAY;QAEZ,aAAa;QACb,gBAAgB;QAChB,kBAAkB;QAClB,eAAe,aAET,yBAAyB;qHAE1B,sBAAsB,YAVtB;YACL,YAAY;YAEZ,aAAa;YACb,gBAAgB;YAChB,kBAAkB;YAClB,eAAe;SAClB;4FAGQ,sBAAsB;kBAZlC,QAAQ;mBAAC;oBACN,YAAY,EAAE,CAAC,yBAAyB,CAAC;oBACzC,OAAO,EAAE;wBACL,YAAY;wBAEZ,aAAa;wBACb,gBAAgB;wBAChB,kBAAkB;wBAClB,eAAe;qBAClB;oBACD,OAAO,EAAE,CAAC,yBAAyB,CAAC;iBACvC;;;MCXY,kBAAkB;IAO3B,YACY,KAAqB,EACrB,MAAc;QADd,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAL1B,UAAK,GAAW,mBAAmB,CAAC;QACpC,gBAAW,GAAW,sBAAsB,CAAC;KAKxC;IAEL,QAAQ;QACJ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE;YAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB,CAAC,CAAC;KACN;IAED,YAAY;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;KACrE;;gHApBQ,kBAAkB;oGAAlB,kBAAkB,gDCV/B,+wBAUA;4FDAa,kBAAkB;kBAL9B,SAAS;mBAAC;oBACP,QAAQ,EAAE,UAAU;oBACpB,WAAW,EAAE,6BAA6B;oBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;iBAC7C;;;MESY,eAAe;;6GAAf,eAAe;8GAAf,eAAe,iBATT,kBAAkB,aAE7B,YAAY;QAEZ,eAAe;QACf,qBAAqB,aAEf,kBAAkB;8GAEnB,eAAe,YARf;YACL,YAAY;YAEZ,eAAe;YACf,qBAAqB;SACxB;4FAGQ,eAAe;kBAV3B,QAAQ;mBAAC;oBACN,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE;wBACL,YAAY;wBAEZ,eAAe;wBACf,qBAAqB;qBACxB;oBACD,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAChC;;;MCRY,6BAA6B;IAKtC;QAFU,gBAAW,GAAG,IAAI,YAAY,EAAqB,CAAC;KAE7C;IAEjB,QAAQ;KACP;IAED,kBAAkB,CAAC,WAA8B;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACtC;;2HAZQ,6BAA6B;+GAA7B,6BAA6B,6ICT1C,ibAMA;4FDGa,6BAA6B;kBALzC,SAAS;mBAAC;oBACP,QAAQ,EAAE,sBAAsB;oBAChC,WAAW,EAAE,yCAAyC;oBACtD,SAAS,EAAE,CAAC,yCAAyC,CAAC;iBACzD;0EAGY,WAAW;sBAAnB,KAAK;gBACI,WAAW;sBAApB,MAAM;;;MEEE,0BAA0B;;wHAA1B,0BAA0B;yHAA1B,0BAA0B,iBANpB,6BAA6B,aAExC,YAAY,aAEN,6BAA6B;yHAE9B,0BAA0B,YAL1B;YACL,YAAY;SACf;4FAGQ,0BAA0B;kBAPtC,QAAQ;mBAAC;oBACN,YAAY,EAAE,CAAC,6BAA6B,CAAC;oBAC7C,OAAO,EAAE;wBACL,YAAY;qBACf;oBACD,OAAO,EAAE,CAAC,6BAA6B,CAAC;iBAC3C;;;MCqCY,cAAc;;4GAAd,cAAc;6GAAd,cAAc,YAxBnB,kBAAkB;QAClB,eAAe;QACf,uBAAuB;QACvB,eAAe;QACf,eAAe;QACf,0BAA0B;QAC1B,sBAAsB;6GAkBjB,cAAc,aAdZ;QACP,aAAa;QACb,gBAAgB;QAChB,+BAA+B;QAE/B,iBAAiB;QACjB,aAAa;QACb,gBAAgB;QAChB,qBAAqB;QACrB,wBAAwB;QACxB,wBAAwB;QACxB,2BAA2B;KAC9B,YAvBQ;YACL,kBAAkB;YAClB,eAAe;YACf,uBAAuB;YACvB,eAAe;YACf,eAAe;YACf,0BAA0B;YAC1B,sBAAsB;SACzB;4FAiBQ,cAAc;kBA5B1B,QAAQ;mBAAC;oBACN,YAAY,EAAE,EACb;oBACD,OAAO,EAAE;wBACL,kBAAkB;wBAClB,eAAe;wBACf,uBAAuB;wBACvB,eAAe;wBACf,eAAe;wBACf,0BAA0B;wBAC1B,sBAAsB;qBACzB;oBACD,OAAO,EAAE,EACR;oBACD,SAAS,EAAE;wBACP,aAAa;wBACb,gBAAgB;wBAChB,+BAA+B;wBAE/B,iBAAiB;wBACjB,aAAa;wBACb,gBAAgB;wBAChB,qBAAqB;wBACrB,wBAAwB;wBACxB,wBAAwB;wBACxB,2BAA2B;qBAC9B;iBACJ;;;ACjDD;;;;;;"}
import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { FormBuilder, FormControl, FormGroup } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { ISkill, ISkillCategory, ISkillSubCategory } from '../../models/skill.model';
import { SkillFormService } from '../../services/skill-form.service';
import { SkillsService } from '../../services/skills.service';
import * as i0 from "@angular/core";
export declare class SkillFormComponent implements OnInit, OnDestroy {
    private fb;
    private route;
    private router;
    private skillService;
    private skillFormService;
    form: FormGroup | undefined;
    formIsValid: boolean;
    isSubcategoryDisabled: boolean;
    private _categoryValueChangeSub;
    private _formStatusChangeSub;
    private _resetForm$;
    private _routeDataSub;
    private _skill;
    categories: ISkillCategory[];
    subcategories?: ISkillSubCategory[];
    buttonLabel: string;
    set skill(skill: ISkill | undefined);
    commitSkill: EventEmitter<ISkill>;
    get nameControl(): FormControl;
    get categoryControl(): FormControl;
    get subcategoryControl(): FormControl;
    constructor(fb: FormBuilder, route: ActivatedRoute, router: Router, skillService: SkillsService, skillFormService: SkillFormService);
    ngOnInit(): void;
    initForm(skill: ISkill | undefined): void;
    onCommitSkill(): void;
    listenCategoryValueChange(): void;
    listenFormStatusChange(): void;
    listenFormReset(): void;
    onCategoryChange(e: any): void;
    onCloseClick(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SkillFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SkillFormComponent, "skl-form", never, { "categories": "categories"; "subcategories": "subcategories"; "buttonLabel": "buttonLabel"; "skill": "skill"; }, { "commitSkill": "commitSkill"; }, never, never>;
}
